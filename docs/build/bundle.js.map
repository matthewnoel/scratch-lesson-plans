{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../src/pages/About.svelte","../../node_modules/svelte/store/index.mjs","../../src/router.js","../../src/components/ProjectsList.svelte","../../node_modules/markdown-it/lib/common/entities.js","../../node_modules/uc.micro/categories/P/regex.js","../../node_modules/mdurl/encode.js","../../node_modules/mdurl/decode.js","../../node_modules/mdurl/parse.js","../../node_modules/mdurl/index.js","../../node_modules/mdurl/format.js","../../node_modules/uc.micro/properties/Any/regex.js","../../node_modules/uc.micro/categories/Cc/regex.js","../../node_modules/uc.micro/categories/Z/regex.js","../../node_modules/uc.micro/index.js","../../node_modules/uc.micro/categories/Cf/regex.js","../../node_modules/markdown-it/lib/common/utils.js","../../node_modules/markdown-it/lib/helpers/parse_link_destination.js","../../node_modules/markdown-it/lib/helpers/parse_link_title.js","../../node_modules/markdown-it/lib/helpers/index.js","../../node_modules/markdown-it/lib/helpers/parse_link_label.js","../../node_modules/markdown-it/lib/renderer.js","../../node_modules/markdown-it/lib/ruler.js","../../node_modules/markdown-it/lib/rules_core/normalize.js","../../node_modules/markdown-it/lib/rules_core/linkify.js","../../node_modules/markdown-it/lib/rules_core/replacements.js","../../node_modules/markdown-it/lib/rules_core/smartquotes.js","../../node_modules/markdown-it/lib/token.js","../../node_modules/markdown-it/lib/rules_core/state_core.js","../../node_modules/markdown-it/lib/parser_core.js","../../node_modules/markdown-it/lib/rules_core/block.js","../../node_modules/markdown-it/lib/rules_core/inline.js","../../node_modules/markdown-it/lib/rules_core/text_join.js","../../node_modules/markdown-it/lib/rules_block/table.js","../../node_modules/markdown-it/lib/rules_block/blockquote.js","../../node_modules/markdown-it/lib/rules_block/hr.js","../../node_modules/markdown-it/lib/rules_block/list.js","../../node_modules/markdown-it/lib/rules_block/reference.js","../../node_modules/markdown-it/lib/common/html_re.js","../../node_modules/markdown-it/lib/rules_block/html_block.js","../../node_modules/markdown-it/lib/common/html_blocks.js","../../node_modules/markdown-it/lib/rules_block/heading.js","../../node_modules/markdown-it/lib/rules_block/state_block.js","../../node_modules/markdown-it/lib/parser_block.js","../../node_modules/markdown-it/lib/rules_block/code.js","../../node_modules/markdown-it/lib/rules_block/fence.js","../../node_modules/markdown-it/lib/rules_block/lheading.js","../../node_modules/markdown-it/lib/rules_block/paragraph.js","../../node_modules/markdown-it/lib/rules_inline/text.js","../../node_modules/markdown-it/lib/rules_inline/escape.js","../../node_modules/markdown-it/lib/rules_inline/linkify.js","../../node_modules/markdown-it/lib/rules_inline/newline.js","../../node_modules/markdown-it/lib/rules_inline/strikethrough.js","../../node_modules/markdown-it/lib/rules_inline/emphasis.js","../../node_modules/markdown-it/lib/rules_inline/link.js","../../node_modules/markdown-it/lib/rules_inline/image.js","../../node_modules/markdown-it/lib/rules_inline/autolink.js","../../node_modules/markdown-it/lib/rules_inline/html_inline.js","../../node_modules/markdown-it/lib/rules_inline/entity.js","../../node_modules/markdown-it/lib/rules_inline/balance_pairs.js","../../node_modules/markdown-it/lib/rules_inline/state_inline.js","../../node_modules/markdown-it/lib/parser_inline.js","../../node_modules/markdown-it/lib/rules_inline/backticks.js","../../node_modules/markdown-it/lib/rules_inline/fragments_join.js","../../node_modules/linkify-it/lib/re.js","../../node_modules/linkify-it/index.js","../../node_modules/markdown-it/lib/index.js","../../node_modules/markdown-it/lib/presets/default.js","../../node_modules/markdown-it/lib/presets/zero.js","../../node_modules/markdown-it/lib/presets/commonmark.js","../../node_modules/markdown-it/index.js","../../src/components/Markdown.svelte","../../src/components/CustomMarkdown.svelte","../../src/pages/Project.svelte","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\n// Adapted from https://github.com/then/is-promise/blob/master/index.js\n// Distributed under MIT License https://github.com/then/is-promise/blob/master/LICENSE\nfunction is_promise(value) {\n    return !!value && (typeof value === 'object' || typeof value === 'function') && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n    return style.sheet;\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentNode !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    if (node.parentNode) {\n        node.parentNode.removeChild(node);\n    }\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data_map(node, data_map) {\n    Object.keys(data_map).forEach((key) => {\n        set_custom_element_data(node, key, data_map[key]);\n    });\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes, is_svg) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration(undefined, is_svg);\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes, is_svg);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value === null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, cancelable, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nfunction head_selector(nodeId, head) {\n    const result = [];\n    let started = 0;\n    for (const node of head.childNodes) {\n        if (node.nodeType === 8 /* comment node */) {\n            const comment = node.textContent.trim();\n            if (comment === `HEAD_${nodeId}_END`) {\n                started -= 1;\n                result.push(node);\n            }\n            else if (comment === `HEAD_${nodeId}_START`) {\n                started += 1;\n                result.push(node);\n            }\n        }\n        else if (started > 0) {\n            result.push(node);\n        }\n    }\n    return result;\n}\nclass HtmlTag {\n    constructor(is_svg = false) {\n        this.is_svg = false;\n        this.is_svg = is_svg;\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            if (this.is_svg)\n                this.e = svg_element(target.nodeName);\n            else\n                this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes, is_svg = false) {\n        super(is_svg);\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\nfunction construct_svelte_component(component, props) {\n    return new component(props);\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { ownerNode } = info.stylesheet;\n            // there is no ownerNode if it runs on jsdom.\n            if (ownerNode)\n                detach(ownerNode);\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\n/**\n * Schedules a callback to run immediately before the component is updated after any state change.\n *\n * The first time the callback runs will be before the initial `onMount`\n *\n * https://svelte.dev/docs#run-time-svelte-beforeupdate\n */\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\n/**\n * The `onMount` function schedules a callback to run as soon as the component has been mounted to the DOM.\n * It must be called during the component's initialisation (but doesn't need to live *inside* the component;\n * it can be called from an external module).\n *\n * `onMount` does not run inside a [server-side component](/docs#run-time-server-side-component-api).\n *\n * https://svelte.dev/docs#run-time-svelte-onmount\n */\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\n/**\n * Schedules a callback to run immediately after the component has been updated.\n *\n * The first time the callback runs will be after the initial `onMount`\n */\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\n/**\n * Schedules a callback to run immediately before the component is unmounted.\n *\n * Out of `onMount`, `beforeUpdate`, `afterUpdate` and `onDestroy`, this is the\n * only one that runs inside a server-side component.\n *\n * https://svelte.dev/docs#run-time-svelte-ondestroy\n */\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\n/**\n * Creates an event dispatcher that can be used to dispatch [component events](/docs#template-syntax-component-directives-on-eventname).\n * Event dispatchers are functions that can take two arguments: `name` and `detail`.\n *\n * Component events created with `createEventDispatcher` create a\n * [CustomEvent](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent).\n * These events do not [bubble](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events#Event_bubbling_and_capture).\n * The `detail` argument corresponds to the [CustomEvent.detail](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/detail)\n * property and can contain any type of data.\n *\n * https://svelte.dev/docs#run-time-svelte-createeventdispatcher\n */\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail, { cancelable = false } = {}) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail, { cancelable });\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n            return !event.defaultPrevented;\n        }\n        return true;\n    };\n}\n/**\n * Associates an arbitrary `context` object with the current component and the specified `key`\n * and returns that object. The context is then available to children of the component\n * (including slotted content) with `getContext`.\n *\n * Like lifecycle functions, this must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-setcontext\n */\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n    return context;\n}\n/**\n * Retrieves the context that belongs to the closest parent component with the specified `key`.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-getcontext\n */\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n/**\n * Retrieves the whole context map that belongs to the closest parent component.\n * Must be called during component initialisation. Useful, for example, if you\n * programmatically create a component and want to pass the existing context to it.\n *\n * https://svelte.dev/docs#run-time-svelte-getallcontexts\n */\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\n/**\n * Checks whether a given `key` has been set in the context of a parent component.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-hascontext\n */\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    // Do not reenter flush while dirty components are updated, as this can\n    // result in an infinite loop. Instead, let the inner flush handle it.\n    // Reentrancy is ok afterwards for bindings etc.\n    if (flushidx !== 0) {\n        return;\n    }\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        try {\n            while (flushidx < dirty_components.length) {\n                const component = dirty_components[flushidx];\n                flushidx++;\n                set_current_component(component);\n                update(component.$$);\n            }\n        }\n        catch (e) {\n            // reset dirty state to not end up in a deadlocked state and then rethrow\n            dirty_components.length = 0;\n            flushidx = 0;\n            throw e;\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n    else if (callback) {\n        callback();\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    const options = { direction: 'in' };\n    let config = fn(node, params, options);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config(options);\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    const options = { direction: 'out' };\n    let config = fn(node, params, options);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config(options);\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    const options = { direction: 'both' };\n    let config = fn(node, params, options);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config(options);\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'inert',\n    'ismap',\n    'itemscope',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\n/** regex of all html void element names */\nconst void_element_names = /^(?:area|base|br|col|command|embed|hr|img|input|keygen|link|meta|param|source|track|wbr)$/;\nfunction is_void(name) {\n    return void_element_names.test(name) || name.toLowerCase() === '!doctype';\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst ATTR_REGEX = /[&\"]/g;\nconst CONTENT_REGEX = /[&<]/g;\n/**\n * Note: this method is performance sensitive and has been optimized\n * https://github.com/sveltejs/svelte/pull/5701\n */\nfunction escape(value, is_attr = false) {\n    const str = String(value);\n    const pattern = is_attr ? ATTR_REGEX : CONTENT_REGEX;\n    pattern.lastIndex = 0;\n    let escaped = '';\n    let last = 0;\n    while (pattern.test(str)) {\n        const i = pattern.lastIndex - 1;\n        const ch = str[i];\n        escaped += str.substring(last, i) + (ch === '&' ? '&amp;' : (ch === '\"' ? '&quot;' : '&lt;'));\n        last = i + 1;\n    }\n    return escaped + str.substring(last);\n}\nfunction escape_attribute_value(value) {\n    // keep booleans, null, and undefined for the sake of `spread`\n    const should_escape = typeof value === 'string' || (value && typeof value === 'object');\n    return should_escape ? escape(value, true) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules. Otherwise you may need to fix a <${name}>.`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    const assignment = (boolean && value === true) ? '' : `=\"${escape(value, true)}\"`;\n    return ` ${name}${assignment}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${escape_attribute_value(style_object[key])};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = component.$$.on_mount.map(run).filter(is_function);\n            // if the component was destroyed immediately\n            // it will update the `$$.on_destroy` reference to `null`.\n            // the destructured on_destroy may still reference to the old array\n            if (component.$$.on_destroy) {\n                component.$$.on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: [],\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            if (!is_function(callback)) {\n                return noop;\n            }\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        if (!is_function(callback)) {\n            return noop;\n        }\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.55.1' }, detail), { bubbles: true }));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nfunction validate_dynamic_element(tag) {\n    const is_string = typeof tag === 'string';\n    if (tag && !is_string) {\n        throw new Error('<svelte:element> expects \"this\" attribute to be a string.');\n    }\n}\nfunction validate_void_dynamic_element(tag) {\n    if (tag && is_void(tag)) {\n        console.warn(`<svelte:element this=\"${tag}\"> is self-closing and cannot have content.`);\n    }\n}\nfunction construct_svelte_component_dev(component, props) {\n    const error_message = 'this={...} of <svelte:component> should specify a Svelte component.';\n    try {\n        const instance = new component(props);\n        if (!instance.$$ || !instance.$set || !instance.$on || !instance.$destroy) {\n            throw new Error(error_message);\n        }\n        return instance;\n    }\n    catch (err) {\n        const { message } = err;\n        if (typeof message === 'string' && message.indexOf('is not a constructor') !== -1) {\n            throw new Error(error_message);\n        }\n        else {\n            throw err;\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, construct_svelte_component, construct_svelte_component_dev, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, head_selector, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, is_void, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_custom_element_data_map, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_dynamic_element, validate_each_argument, validate_each_keys, validate_slots, validate_store, validate_void_dynamic_element, xlink_attr };\n","<h1>About</h1>\n<p>This site contains step-by-step guides for building classic, simple games in Scratch 3.0. It is open source and available on <a target=\"_blank\" rel=\"noreferrer\" href=\"https://github.com/matthewnoel/scratch-lesson-plans\">github</a>.</p>","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = new Set();\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (const subscriber of subscribers) {\n                    subscriber[1]();\n                    subscriber_queue.push(subscriber, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.add(subscriber);\n        if (subscribers.size === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            subscribers.delete(subscriber);\n            if (subscribers.size === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","import { writable } from 'svelte/store';\n\nexport const page = writable('');\n\nexport const initPage = () => {\n    const urlParams = new URLSearchParams(window.location.search);\n    const pageParam = urlParams.get('page');\n    updatePage(pageParam);\n};\n\nexport const updatePage = (newPage) => page.update(() => {\n    const sanitizedPage = newPage?.toLowerCase();\n    const url = new URL(window.location);\n    for (const key of url.searchParams.keys()) {\n        url.searchParams.delete(key);\n    }\n    switch (sanitizedPage) {\n        case 'about':\n        case 'project':\n            url.searchParams.set('page', sanitizedPage);\n            break;\n        default:\n            url.searchParams.set('page', '');\n            break;\n    }\n    history.pushState({}, '', url);\n    return newPage;\n});","<script>\n    import { updatePage } from \"../router\";\n</script>\n\n<ul>\n    <li>\n        <span on:click={() => updatePage('project')} on:keydown={() => updatePage('project')}>Hello World</span>\n    </li>\n</ul>","// HTML5 entities map: { name -> utf16string }\n//\n'use strict';\n\n/*eslint quotes:0*/\nmodule.exports = require('entities/lib/maps/entities.json');\n","module.exports=/[!-#%-\\*,-\\/:;\\?@\\[-\\]_\\{\\}\\xA1\\xA7\\xAB\\xB6\\xB7\\xBB\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166D\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4E\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]|\\uD800[\\uDD00-\\uDD02\\uDF9F\\uDFD0]|\\uD801\\uDD6F|\\uD802[\\uDC57\\uDD1F\\uDD3F\\uDE50-\\uDE58\\uDE7F\\uDEF0-\\uDEF6\\uDF39-\\uDF3F\\uDF99-\\uDF9C]|\\uD803[\\uDF55-\\uDF59]|\\uD804[\\uDC47-\\uDC4D\\uDCBB\\uDCBC\\uDCBE-\\uDCC1\\uDD40-\\uDD43\\uDD74\\uDD75\\uDDC5-\\uDDC8\\uDDCD\\uDDDB\\uDDDD-\\uDDDF\\uDE38-\\uDE3D\\uDEA9]|\\uD805[\\uDC4B-\\uDC4F\\uDC5B\\uDC5D\\uDCC6\\uDDC1-\\uDDD7\\uDE41-\\uDE43\\uDE60-\\uDE6C\\uDF3C-\\uDF3E]|\\uD806[\\uDC3B\\uDE3F-\\uDE46\\uDE9A-\\uDE9C\\uDE9E-\\uDEA2]|\\uD807[\\uDC41-\\uDC45\\uDC70\\uDC71\\uDEF7\\uDEF8]|\\uD809[\\uDC70-\\uDC74]|\\uD81A[\\uDE6E\\uDE6F\\uDEF5\\uDF37-\\uDF3B\\uDF44]|\\uD81B[\\uDE97-\\uDE9A]|\\uD82F\\uDC9F|\\uD836[\\uDE87-\\uDE8B]|\\uD83A[\\uDD5E\\uDD5F]/","\n'use strict';\n\n\nvar encodeCache = {};\n\n\n// Create a lookup array where anything but characters in `chars` string\n// and alphanumeric chars is percent-encoded.\n//\nfunction getEncodeCache(exclude) {\n  var i, ch, cache = encodeCache[exclude];\n  if (cache) { return cache; }\n\n  cache = encodeCache[exclude] = [];\n\n  for (i = 0; i < 128; i++) {\n    ch = String.fromCharCode(i);\n\n    if (/^[0-9a-z]$/i.test(ch)) {\n      // always allow unencoded alphanumeric characters\n      cache.push(ch);\n    } else {\n      cache.push('%' + ('0' + i.toString(16).toUpperCase()).slice(-2));\n    }\n  }\n\n  for (i = 0; i < exclude.length; i++) {\n    cache[exclude.charCodeAt(i)] = exclude[i];\n  }\n\n  return cache;\n}\n\n\n// Encode unsafe characters with percent-encoding, skipping already\n// encoded sequences.\n//\n//  - string       - string to encode\n//  - exclude      - list of characters to ignore (in addition to a-zA-Z0-9)\n//  - keepEscaped  - don't encode '%' in a correct escape sequence (default: true)\n//\nfunction encode(string, exclude, keepEscaped) {\n  var i, l, code, nextCode, cache,\n      result = '';\n\n  if (typeof exclude !== 'string') {\n    // encode(string, keepEscaped)\n    keepEscaped  = exclude;\n    exclude = encode.defaultChars;\n  }\n\n  if (typeof keepEscaped === 'undefined') {\n    keepEscaped = true;\n  }\n\n  cache = getEncodeCache(exclude);\n\n  for (i = 0, l = string.length; i < l; i++) {\n    code = string.charCodeAt(i);\n\n    if (keepEscaped && code === 0x25 /* % */ && i + 2 < l) {\n      if (/^[0-9a-f]{2}$/i.test(string.slice(i + 1, i + 3))) {\n        result += string.slice(i, i + 3);\n        i += 2;\n        continue;\n      }\n    }\n\n    if (code < 128) {\n      result += cache[code];\n      continue;\n    }\n\n    if (code >= 0xD800 && code <= 0xDFFF) {\n      if (code >= 0xD800 && code <= 0xDBFF && i + 1 < l) {\n        nextCode = string.charCodeAt(i + 1);\n        if (nextCode >= 0xDC00 && nextCode <= 0xDFFF) {\n          result += encodeURIComponent(string[i] + string[i + 1]);\n          i++;\n          continue;\n        }\n      }\n      result += '%EF%BF%BD';\n      continue;\n    }\n\n    result += encodeURIComponent(string[i]);\n  }\n\n  return result;\n}\n\nencode.defaultChars   = \";/?:@&=+$,-_.!~*'()#\";\nencode.componentChars = \"-_.!~*'()\";\n\n\nmodule.exports = encode;\n","\n'use strict';\n\n\n/* eslint-disable no-bitwise */\n\nvar decodeCache = {};\n\nfunction getDecodeCache(exclude) {\n  var i, ch, cache = decodeCache[exclude];\n  if (cache) { return cache; }\n\n  cache = decodeCache[exclude] = [];\n\n  for (i = 0; i < 128; i++) {\n    ch = String.fromCharCode(i);\n    cache.push(ch);\n  }\n\n  for (i = 0; i < exclude.length; i++) {\n    ch = exclude.charCodeAt(i);\n    cache[ch] = '%' + ('0' + ch.toString(16).toUpperCase()).slice(-2);\n  }\n\n  return cache;\n}\n\n\n// Decode percent-encoded string.\n//\nfunction decode(string, exclude) {\n  var cache;\n\n  if (typeof exclude !== 'string') {\n    exclude = decode.defaultChars;\n  }\n\n  cache = getDecodeCache(exclude);\n\n  return string.replace(/(%[a-f0-9]{2})+/gi, function(seq) {\n    var i, l, b1, b2, b3, b4, chr,\n        result = '';\n\n    for (i = 0, l = seq.length; i < l; i += 3) {\n      b1 = parseInt(seq.slice(i + 1, i + 3), 16);\n\n      if (b1 < 0x80) {\n        result += cache[b1];\n        continue;\n      }\n\n      if ((b1 & 0xE0) === 0xC0 && (i + 3 < l)) {\n        // 110xxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n\n        if ((b2 & 0xC0) === 0x80) {\n          chr = ((b1 << 6) & 0x7C0) | (b2 & 0x3F);\n\n          if (chr < 0x80) {\n            result += '\\ufffd\\ufffd';\n          } else {\n            result += String.fromCharCode(chr);\n          }\n\n          i += 3;\n          continue;\n        }\n      }\n\n      if ((b1 & 0xF0) === 0xE0 && (i + 6 < l)) {\n        // 1110xxxx 10xxxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n        b3 = parseInt(seq.slice(i + 7, i + 9), 16);\n\n        if ((b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n          chr = ((b1 << 12) & 0xF000) | ((b2 << 6) & 0xFC0) | (b3 & 0x3F);\n\n          if (chr < 0x800 || (chr >= 0xD800 && chr <= 0xDFFF)) {\n            result += '\\ufffd\\ufffd\\ufffd';\n          } else {\n            result += String.fromCharCode(chr);\n          }\n\n          i += 6;\n          continue;\n        }\n      }\n\n      if ((b1 & 0xF8) === 0xF0 && (i + 9 < l)) {\n        // 111110xx 10xxxxxx 10xxxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n        b3 = parseInt(seq.slice(i + 7, i + 9), 16);\n        b4 = parseInt(seq.slice(i + 10, i + 12), 16);\n\n        if ((b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80 && (b4 & 0xC0) === 0x80) {\n          chr = ((b1 << 18) & 0x1C0000) | ((b2 << 12) & 0x3F000) | ((b3 << 6) & 0xFC0) | (b4 & 0x3F);\n\n          if (chr < 0x10000 || chr > 0x10FFFF) {\n            result += '\\ufffd\\ufffd\\ufffd\\ufffd';\n          } else {\n            chr -= 0x10000;\n            result += String.fromCharCode(0xD800 + (chr >> 10), 0xDC00 + (chr & 0x3FF));\n          }\n\n          i += 9;\n          continue;\n        }\n      }\n\n      result += '\\ufffd';\n    }\n\n    return result;\n  });\n}\n\n\ndecode.defaultChars   = ';/?:@&=+$,#';\ndecode.componentChars = '';\n\n\nmodule.exports = decode;\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n//\n// Changes from joyent/node:\n//\n// 1. No leading slash in paths,\n//    e.g. in `url.parse('http://foo?bar')` pathname is ``, not `/`\n//\n// 2. Backslashes are not replaced with slashes,\n//    so `http:\\\\example.org\\` is treated like a relative path\n//\n// 3. Trailing colon is treated like a part of the path,\n//    i.e. in `http://example.org:foo` pathname is `:foo`\n//\n// 4. Nothing is URL-encoded in the resulting object,\n//    (in joyent/node some chars in auth and paths are encoded)\n//\n// 5. `url.parse()` does not have `parseQueryString` argument\n//\n// 6. Removed extraneous result properties: `host`, `path`, `query`, etc.,\n//    which can be constructed using other parts of the url.\n//\n\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.pathname = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n    portPattern = /:[0-9]*$/,\n\n    // Special case for a simple path URL\n    simplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/,\n\n    // RFC 2396: characters reserved for delimiting URLs.\n    // We actually just auto-escape these.\n    delims = [ '<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t' ],\n\n    // RFC 2396: characters not allowed for various reasons.\n    unwise = [ '{', '}', '|', '\\\\', '^', '`' ].concat(delims),\n\n    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n    autoEscape = [ '\\'' ].concat(unwise),\n    // Characters that are never ever allowed in a hostname.\n    // Note that any invalid chars are also handled, but these\n    // are the ones that are *expected* to be seen, so we fast-path\n    // them.\n    nonHostChars = [ '%', '/', '?', ';', '#' ].concat(autoEscape),\n    hostEndingChars = [ '/', '?', '#' ],\n    hostnameMaxLen = 255,\n    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\n    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\n    // protocols that can allow \"unsafe\" and \"unwise\" chars.\n    /* eslint-disable no-script-url */\n    // protocols that never have a hostname.\n    hostlessProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that always contain a // bit.\n    slashedProtocol = {\n      'http': true,\n      'https': true,\n      'ftp': true,\n      'gopher': true,\n      'file': true,\n      'http:': true,\n      'https:': true,\n      'ftp:': true,\n      'gopher:': true,\n      'file:': true\n    };\n    /* eslint-enable no-script-url */\n\nfunction urlParse(url, slashesDenoteHost) {\n  if (url && url instanceof Url) { return url; }\n\n  var u = new Url();\n  u.parse(url, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function(url, slashesDenoteHost) {\n  var i, l, lowerProto, hec, slashes,\n      rest = url;\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim();\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    var simplePath = simplePathPattern.exec(rest);\n    if (simplePath) {\n      this.pathname = simplePath[1];\n      if (simplePath[2]) {\n        this.search = simplePath[2];\n      }\n      return this;\n    }\n  }\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    lowerProto = proto.toLowerCase();\n    this.protocol = proto;\n    rest = rest.substr(proto.length);\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] &&\n      (slashes || (proto && !slashedProtocol[proto]))) {\n\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n    for (i = 0; i < hostEndingChars.length; i++) {\n      hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) {\n        hostEnd = hec;\n      }\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    var auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = auth;\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (i = 0; i < nonHostChars.length; i++) {\n      hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) {\n        hostEnd = hec;\n      }\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1) {\n      hostEnd = rest.length;\n    }\n\n    if (rest[hostEnd - 1] === ':') { hostEnd--; }\n    var host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    this.parseHost(host);\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    this.hostname = this.hostname || '';\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    var ipv6Hostname = this.hostname[0] === '[' &&\n        this.hostname[this.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n      for (i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) { continue; }\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = notHost.join('.') + rest;\n            }\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    }\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n    }\n  }\n\n  // chop off from the tail first.\n  var hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  var qm = rest.indexOf('?');\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    rest = rest.slice(0, qm);\n  }\n  if (rest) { this.pathname = rest; }\n  if (slashedProtocol[lowerProto] &&\n      this.hostname && !this.pathname) {\n    this.pathname = '';\n  }\n\n  return this;\n};\n\nUrl.prototype.parseHost = function(host) {\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) { this.hostname = host; }\n};\n\nmodule.exports = urlParse;\n","'use strict';\n\n\nmodule.exports.encode = require('./encode');\nmodule.exports.decode = require('./decode');\nmodule.exports.format = require('./format');\nmodule.exports.parse  = require('./parse');\n","\n'use strict';\n\n\nmodule.exports = function format(url) {\n  var result = '';\n\n  result += url.protocol || '';\n  result += url.slashes ? '//' : '';\n  result += url.auth ? url.auth + '@' : '';\n\n  if (url.hostname && url.hostname.indexOf(':') !== -1) {\n    // ipv6 address\n    result += '[' + url.hostname + ']';\n  } else {\n    result += url.hostname || '';\n  }\n\n  result += url.port ? ':' + url.port : '';\n  result += url.pathname || '';\n  result += url.search || '';\n  result += url.hash || '';\n\n  return result;\n};\n","module.exports=/[\\0-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/","module.exports=/[\\0-\\x1F\\x7F-\\x9F]/","module.exports=/[ \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000]/","'use strict';\n\nexports.Any = require('./properties/Any/regex');\nexports.Cc  = require('./categories/Cc/regex');\nexports.Cf  = require('./categories/Cf/regex');\nexports.P   = require('./categories/P/regex');\nexports.Z   = require('./categories/Z/regex');\n","module.exports=/[\\xAD\\u0600-\\u0605\\u061C\\u06DD\\u070F\\u08E2\\u180E\\u200B-\\u200F\\u202A-\\u202E\\u2060-\\u2064\\u2066-\\u206F\\uFEFF\\uFFF9-\\uFFFB]|\\uD804[\\uDCBD\\uDCCD]|\\uD82F[\\uDCA0-\\uDCA3]|\\uD834[\\uDD73-\\uDD7A]|\\uDB40[\\uDC01\\uDC20-\\uDC7F]/","// Utilities\n//\n'use strict';\n\n\nfunction _class(obj) { return Object.prototype.toString.call(obj); }\n\nfunction isString(obj) { return _class(obj) === '[object String]'; }\n\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction has(object, key) {\n  return _hasOwnProperty.call(object, key);\n}\n\n// Merge objects\n//\nfunction assign(obj /*from1, from2, from3, ...*/) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n\n  sources.forEach(function (source) {\n    if (!source) { return; }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be object');\n    }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key];\n    });\n  });\n\n  return obj;\n}\n\n// Remove element from array and put another array at those position.\n// Useful for some operations with tokens\nfunction arrayReplaceAt(src, pos, newElements) {\n  return [].concat(src.slice(0, pos), newElements, src.slice(pos + 1));\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction isValidEntityCode(c) {\n  /*eslint no-bitwise:0*/\n  // broken sequence\n  if (c >= 0xD800 && c <= 0xDFFF) { return false; }\n  // never used\n  if (c >= 0xFDD0 && c <= 0xFDEF) { return false; }\n  if ((c & 0xFFFF) === 0xFFFF || (c & 0xFFFF) === 0xFFFE) { return false; }\n  // control codes\n  if (c >= 0x00 && c <= 0x08) { return false; }\n  if (c === 0x0B) { return false; }\n  if (c >= 0x0E && c <= 0x1F) { return false; }\n  if (c >= 0x7F && c <= 0x9F) { return false; }\n  // out of range\n  if (c > 0x10FFFF) { return false; }\n  return true;\n}\n\nfunction fromCodePoint(c) {\n  /*eslint no-bitwise:0*/\n  if (c > 0xffff) {\n    c -= 0x10000;\n    var surrogate1 = 0xd800 + (c >> 10),\n        surrogate2 = 0xdc00 + (c & 0x3ff);\n\n    return String.fromCharCode(surrogate1, surrogate2);\n  }\n  return String.fromCharCode(c);\n}\n\n\nvar UNESCAPE_MD_RE  = /\\\\([!\"#$%&'()*+,\\-.\\/:;<=>?@[\\\\\\]^_`{|}~])/g;\nvar ENTITY_RE       = /&([a-z#][a-z0-9]{1,31});/gi;\nvar UNESCAPE_ALL_RE = new RegExp(UNESCAPE_MD_RE.source + '|' + ENTITY_RE.source, 'gi');\n\nvar DIGITAL_ENTITY_TEST_RE = /^#((?:x[a-f0-9]{1,8}|[0-9]{1,8}))/i;\n\nvar entities = require('./entities');\n\nfunction replaceEntityPattern(match, name) {\n  var code = 0;\n\n  if (has(entities, name)) {\n    return entities[name];\n  }\n\n  if (name.charCodeAt(0) === 0x23/* # */ && DIGITAL_ENTITY_TEST_RE.test(name)) {\n    code = name[1].toLowerCase() === 'x' ?\n      parseInt(name.slice(2), 16) : parseInt(name.slice(1), 10);\n\n    if (isValidEntityCode(code)) {\n      return fromCodePoint(code);\n    }\n  }\n\n  return match;\n}\n\n/*function replaceEntities(str) {\n  if (str.indexOf('&') < 0) { return str; }\n\n  return str.replace(ENTITY_RE, replaceEntityPattern);\n}*/\n\nfunction unescapeMd(str) {\n  if (str.indexOf('\\\\') < 0) { return str; }\n  return str.replace(UNESCAPE_MD_RE, '$1');\n}\n\nfunction unescapeAll(str) {\n  if (str.indexOf('\\\\') < 0 && str.indexOf('&') < 0) { return str; }\n\n  return str.replace(UNESCAPE_ALL_RE, function (match, escaped, entity) {\n    if (escaped) { return escaped; }\n    return replaceEntityPattern(match, entity);\n  });\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar HTML_ESCAPE_TEST_RE = /[&<>\"]/;\nvar HTML_ESCAPE_REPLACE_RE = /[&<>\"]/g;\nvar HTML_REPLACEMENTS = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;'\n};\n\nfunction replaceUnsafeChar(ch) {\n  return HTML_REPLACEMENTS[ch];\n}\n\nfunction escapeHtml(str) {\n  if (HTML_ESCAPE_TEST_RE.test(str)) {\n    return str.replace(HTML_ESCAPE_REPLACE_RE, replaceUnsafeChar);\n  }\n  return str;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar REGEXP_ESCAPE_RE = /[.?*+^$[\\]\\\\(){}|-]/g;\n\nfunction escapeRE(str) {\n  return str.replace(REGEXP_ESCAPE_RE, '\\\\$&');\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction isSpace(code) {\n  switch (code) {\n    case 0x09:\n    case 0x20:\n      return true;\n  }\n  return false;\n}\n\n// Zs (unicode class) || [\\t\\f\\v\\r\\n]\nfunction isWhiteSpace(code) {\n  if (code >= 0x2000 && code <= 0x200A) { return true; }\n  switch (code) {\n    case 0x09: // \\t\n    case 0x0A: // \\n\n    case 0x0B: // \\v\n    case 0x0C: // \\f\n    case 0x0D: // \\r\n    case 0x20:\n    case 0xA0:\n    case 0x1680:\n    case 0x202F:\n    case 0x205F:\n    case 0x3000:\n      return true;\n  }\n  return false;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n/*eslint-disable max-len*/\nvar UNICODE_PUNCT_RE = require('uc.micro/categories/P/regex');\n\n// Currently without astral characters support.\nfunction isPunctChar(ch) {\n  return UNICODE_PUNCT_RE.test(ch);\n}\n\n\n// Markdown ASCII punctuation characters.\n//\n// !, \", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \\, ], ^, _, `, {, |, }, or ~\n// http://spec.commonmark.org/0.15/#ascii-punctuation-character\n//\n// Don't confuse with unicode punctuation !!! It lacks some chars in ascii range.\n//\nfunction isMdAsciiPunct(ch) {\n  switch (ch) {\n    case 0x21/* ! */:\n    case 0x22/* \" */:\n    case 0x23/* # */:\n    case 0x24/* $ */:\n    case 0x25/* % */:\n    case 0x26/* & */:\n    case 0x27/* ' */:\n    case 0x28/* ( */:\n    case 0x29/* ) */:\n    case 0x2A/* * */:\n    case 0x2B/* + */:\n    case 0x2C/* , */:\n    case 0x2D/* - */:\n    case 0x2E/* . */:\n    case 0x2F/* / */:\n    case 0x3A/* : */:\n    case 0x3B/* ; */:\n    case 0x3C/* < */:\n    case 0x3D/* = */:\n    case 0x3E/* > */:\n    case 0x3F/* ? */:\n    case 0x40/* @ */:\n    case 0x5B/* [ */:\n    case 0x5C/* \\ */:\n    case 0x5D/* ] */:\n    case 0x5E/* ^ */:\n    case 0x5F/* _ */:\n    case 0x60/* ` */:\n    case 0x7B/* { */:\n    case 0x7C/* | */:\n    case 0x7D/* } */:\n    case 0x7E/* ~ */:\n      return true;\n    default:\n      return false;\n  }\n}\n\n// Hepler to unify [reference labels].\n//\nfunction normalizeReference(str) {\n  // Trim and collapse whitespace\n  //\n  str = str.trim().replace(/\\s+/g, ' ');\n\n  // In node v10 'ẞ'.toLowerCase() === 'Ṿ', which is presumed to be a bug\n  // fixed in v12 (couldn't find any details).\n  //\n  // So treat this one as a special case\n  // (remove this when node v10 is no longer supported).\n  //\n  if ('ẞ'.toLowerCase() === 'Ṿ') {\n    str = str.replace(/ẞ/g, 'ß');\n  }\n\n  // .toLowerCase().toUpperCase() should get rid of all differences\n  // between letter variants.\n  //\n  // Simple .toLowerCase() doesn't normalize 125 code points correctly,\n  // and .toUpperCase doesn't normalize 6 of them (list of exceptions:\n  // İ, ϴ, ẞ, Ω, K, Å - those are already uppercased, but have differently\n  // uppercased versions).\n  //\n  // Here's an example showing how it happens. Lets take greek letter omega:\n  // uppercase U+0398 (Θ), U+03f4 (ϴ) and lowercase U+03b8 (θ), U+03d1 (ϑ)\n  //\n  // Unicode entries:\n  // 0398;GREEK CAPITAL LETTER THETA;Lu;0;L;;;;;N;;;;03B8;\n  // 03B8;GREEK SMALL LETTER THETA;Ll;0;L;;;;;N;;;0398;;0398\n  // 03D1;GREEK THETA SYMBOL;Ll;0;L;<compat> 03B8;;;;N;GREEK SMALL LETTER SCRIPT THETA;;0398;;0398\n  // 03F4;GREEK CAPITAL THETA SYMBOL;Lu;0;L;<compat> 0398;;;;N;;;;03B8;\n  //\n  // Case-insensitive comparison should treat all of them as equivalent.\n  //\n  // But .toLowerCase() doesn't change ϑ (it's already lowercase),\n  // and .toUpperCase() doesn't change ϴ (already uppercase).\n  //\n  // Applying first lower then upper case normalizes any character:\n  // '\\u0398\\u03f4\\u03b8\\u03d1'.toLowerCase().toUpperCase() === '\\u0398\\u0398\\u0398\\u0398'\n  //\n  // Note: this is equivalent to unicode case folding; unicode normalization\n  // is a different step that is not required here.\n  //\n  // Final result should be uppercased, because it's later stored in an object\n  // (this avoid a conflict with Object.prototype members,\n  // most notably, `__proto__`)\n  //\n  return str.toLowerCase().toUpperCase();\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n// Re-export libraries commonly used in both markdown-it and its plugins,\n// so plugins won't have to depend on them explicitly, which reduces their\n// bundled size (e.g. a browser build).\n//\nexports.lib                 = {};\nexports.lib.mdurl           = require('mdurl');\nexports.lib.ucmicro         = require('uc.micro');\n\nexports.assign              = assign;\nexports.isString            = isString;\nexports.has                 = has;\nexports.unescapeMd          = unescapeMd;\nexports.unescapeAll         = unescapeAll;\nexports.isValidEntityCode   = isValidEntityCode;\nexports.fromCodePoint       = fromCodePoint;\n// exports.replaceEntities     = replaceEntities;\nexports.escapeHtml          = escapeHtml;\nexports.arrayReplaceAt      = arrayReplaceAt;\nexports.isSpace             = isSpace;\nexports.isWhiteSpace        = isWhiteSpace;\nexports.isMdAsciiPunct      = isMdAsciiPunct;\nexports.isPunctChar         = isPunctChar;\nexports.escapeRE            = escapeRE;\nexports.normalizeReference  = normalizeReference;\n","// Parse link destination\n//\n'use strict';\n\n\nvar unescapeAll = require('../common/utils').unescapeAll;\n\n\nmodule.exports = function parseLinkDestination(str, pos, max) {\n  var code, level,\n      lines = 0,\n      start = pos,\n      result = {\n        ok: false,\n        pos: 0,\n        lines: 0,\n        str: ''\n      };\n\n  if (str.charCodeAt(pos) === 0x3C /* < */) {\n    pos++;\n    while (pos < max) {\n      code = str.charCodeAt(pos);\n      if (code === 0x0A /* \\n */) { return result; }\n      if (code === 0x3C /* < */) { return result; }\n      if (code === 0x3E /* > */) {\n        result.pos = pos + 1;\n        result.str = unescapeAll(str.slice(start + 1, pos));\n        result.ok = true;\n        return result;\n      }\n      if (code === 0x5C /* \\ */ && pos + 1 < max) {\n        pos += 2;\n        continue;\n      }\n\n      pos++;\n    }\n\n    // no closing '>'\n    return result;\n  }\n\n  // this should be ... } else { ... branch\n\n  level = 0;\n  while (pos < max) {\n    code = str.charCodeAt(pos);\n\n    if (code === 0x20) { break; }\n\n    // ascii control characters\n    if (code < 0x20 || code === 0x7F) { break; }\n\n    if (code === 0x5C /* \\ */ && pos + 1 < max) {\n      if (str.charCodeAt(pos + 1) === 0x20) { break; }\n      pos += 2;\n      continue;\n    }\n\n    if (code === 0x28 /* ( */) {\n      level++;\n      if (level > 32) { return result; }\n    }\n\n    if (code === 0x29 /* ) */) {\n      if (level === 0) { break; }\n      level--;\n    }\n\n    pos++;\n  }\n\n  if (start === pos) { return result; }\n  if (level !== 0) { return result; }\n\n  result.str = unescapeAll(str.slice(start, pos));\n  result.lines = lines;\n  result.pos = pos;\n  result.ok = true;\n  return result;\n};\n","// Parse link title\n//\n'use strict';\n\n\nvar unescapeAll = require('../common/utils').unescapeAll;\n\n\nmodule.exports = function parseLinkTitle(str, pos, max) {\n  var code,\n      marker,\n      lines = 0,\n      start = pos,\n      result = {\n        ok: false,\n        pos: 0,\n        lines: 0,\n        str: ''\n      };\n\n  if (pos >= max) { return result; }\n\n  marker = str.charCodeAt(pos);\n\n  if (marker !== 0x22 /* \" */ && marker !== 0x27 /* ' */ && marker !== 0x28 /* ( */) { return result; }\n\n  pos++;\n\n  // if opening marker is \"(\", switch it to closing marker \")\"\n  if (marker === 0x28) { marker = 0x29; }\n\n  while (pos < max) {\n    code = str.charCodeAt(pos);\n    if (code === marker) {\n      result.pos = pos + 1;\n      result.lines = lines;\n      result.str = unescapeAll(str.slice(start + 1, pos));\n      result.ok = true;\n      return result;\n    } else if (code === 0x28 /* ( */ && marker === 0x29 /* ) */) {\n      return result;\n    } else if (code === 0x0A) {\n      lines++;\n    } else if (code === 0x5C /* \\ */ && pos + 1 < max) {\n      pos++;\n      if (str.charCodeAt(pos) === 0x0A) {\n        lines++;\n      }\n    }\n\n    pos++;\n  }\n\n  return result;\n};\n","// Just a shortcut for bulk export\n'use strict';\n\n\nexports.parseLinkLabel       = require('./parse_link_label');\nexports.parseLinkDestination = require('./parse_link_destination');\nexports.parseLinkTitle       = require('./parse_link_title');\n","// Parse link label\n//\n// this function assumes that first character (\"[\") already matches;\n// returns the end of the label\n//\n'use strict';\n\nmodule.exports = function parseLinkLabel(state, start, disableNested) {\n  var level, found, marker, prevPos,\n      labelEnd = -1,\n      max = state.posMax,\n      oldPos = state.pos;\n\n  state.pos = start + 1;\n  level = 1;\n\n  while (state.pos < max) {\n    marker = state.src.charCodeAt(state.pos);\n    if (marker === 0x5D /* ] */) {\n      level--;\n      if (level === 0) {\n        found = true;\n        break;\n      }\n    }\n\n    prevPos = state.pos;\n    state.md.inline.skipToken(state);\n    if (marker === 0x5B /* [ */) {\n      if (prevPos === state.pos - 1) {\n        // increase level if we find text `[`, which is not a part of any token\n        level++;\n      } else if (disableNested) {\n        state.pos = oldPos;\n        return -1;\n      }\n    }\n  }\n\n  if (found) {\n    labelEnd = state.pos;\n  }\n\n  // restore old state\n  state.pos = oldPos;\n\n  return labelEnd;\n};\n","/**\n * class Renderer\n *\n * Generates HTML from parsed token stream. Each instance has independent\n * copy of rules. Those can be rewritten with ease. Also, you can add new\n * rules if you create plugin and adds new token types.\n **/\n'use strict';\n\n\nvar assign          = require('./common/utils').assign;\nvar unescapeAll     = require('./common/utils').unescapeAll;\nvar escapeHtml      = require('./common/utils').escapeHtml;\n\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar default_rules = {};\n\n\ndefault_rules.code_inline = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n\n  return  '<code' + slf.renderAttrs(token) + '>' +\n          escapeHtml(tokens[idx].content) +\n          '</code>';\n};\n\n\ndefault_rules.code_block = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n\n  return  '<pre' + slf.renderAttrs(token) + '><code>' +\n          escapeHtml(tokens[idx].content) +\n          '</code></pre>\\n';\n};\n\n\ndefault_rules.fence = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx],\n      info = token.info ? unescapeAll(token.info).trim() : '',\n      langName = '',\n      langAttrs = '',\n      highlighted, i, arr, tmpAttrs, tmpToken;\n\n  if (info) {\n    arr = info.split(/(\\s+)/g);\n    langName = arr[0];\n    langAttrs = arr.slice(2).join('');\n  }\n\n  if (options.highlight) {\n    highlighted = options.highlight(token.content, langName, langAttrs) || escapeHtml(token.content);\n  } else {\n    highlighted = escapeHtml(token.content);\n  }\n\n  if (highlighted.indexOf('<pre') === 0) {\n    return highlighted + '\\n';\n  }\n\n  // If language exists, inject class gently, without modifying original token.\n  // May be, one day we will add .deepClone() for token and simplify this part, but\n  // now we prefer to keep things local.\n  if (info) {\n    i        = token.attrIndex('class');\n    tmpAttrs = token.attrs ? token.attrs.slice() : [];\n\n    if (i < 0) {\n      tmpAttrs.push([ 'class', options.langPrefix + langName ]);\n    } else {\n      tmpAttrs[i] = tmpAttrs[i].slice();\n      tmpAttrs[i][1] += ' ' + options.langPrefix + langName;\n    }\n\n    // Fake token just to render attributes\n    tmpToken = {\n      attrs: tmpAttrs\n    };\n\n    return  '<pre><code' + slf.renderAttrs(tmpToken) + '>'\n          + highlighted\n          + '</code></pre>\\n';\n  }\n\n\n  return  '<pre><code' + slf.renderAttrs(token) + '>'\n        + highlighted\n        + '</code></pre>\\n';\n};\n\n\ndefault_rules.image = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n\n  // \"alt\" attr MUST be set, even if empty. Because it's mandatory and\n  // should be placed on proper position for tests.\n  //\n  // Replace content with actual value\n\n  token.attrs[token.attrIndex('alt')][1] =\n    slf.renderInlineAsText(token.children, options, env);\n\n  return slf.renderToken(tokens, idx, options);\n};\n\n\ndefault_rules.hardbreak = function (tokens, idx, options /*, env */) {\n  return options.xhtmlOut ? '<br />\\n' : '<br>\\n';\n};\ndefault_rules.softbreak = function (tokens, idx, options /*, env */) {\n  return options.breaks ? (options.xhtmlOut ? '<br />\\n' : '<br>\\n') : '\\n';\n};\n\n\ndefault_rules.text = function (tokens, idx /*, options, env */) {\n  return escapeHtml(tokens[idx].content);\n};\n\n\ndefault_rules.html_block = function (tokens, idx /*, options, env */) {\n  return tokens[idx].content;\n};\ndefault_rules.html_inline = function (tokens, idx /*, options, env */) {\n  return tokens[idx].content;\n};\n\n\n/**\n * new Renderer()\n *\n * Creates new [[Renderer]] instance and fill [[Renderer#rules]] with defaults.\n **/\nfunction Renderer() {\n\n  /**\n   * Renderer#rules -> Object\n   *\n   * Contains render rules for tokens. Can be updated and extended.\n   *\n   * ##### Example\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   *\n   * md.renderer.rules.strong_open  = function () { return '<b>'; };\n   * md.renderer.rules.strong_close = function () { return '</b>'; };\n   *\n   * var result = md.renderInline(...);\n   * ```\n   *\n   * Each rule is called as independent static function with fixed signature:\n   *\n   * ```javascript\n   * function my_token_render(tokens, idx, options, env, renderer) {\n   *   // ...\n   *   return renderedHTML;\n   * }\n   * ```\n   *\n   * See [source code](https://github.com/markdown-it/markdown-it/blob/master/lib/renderer.js)\n   * for more details and examples.\n   **/\n  this.rules = assign({}, default_rules);\n}\n\n\n/**\n * Renderer.renderAttrs(token) -> String\n *\n * Render token attributes to string.\n **/\nRenderer.prototype.renderAttrs = function renderAttrs(token) {\n  var i, l, result;\n\n  if (!token.attrs) { return ''; }\n\n  result = '';\n\n  for (i = 0, l = token.attrs.length; i < l; i++) {\n    result += ' ' + escapeHtml(token.attrs[i][0]) + '=\"' + escapeHtml(token.attrs[i][1]) + '\"';\n  }\n\n  return result;\n};\n\n\n/**\n * Renderer.renderToken(tokens, idx, options) -> String\n * - tokens (Array): list of tokens\n * - idx (Numbed): token index to render\n * - options (Object): params of parser instance\n *\n * Default token renderer. Can be overriden by custom function\n * in [[Renderer#rules]].\n **/\nRenderer.prototype.renderToken = function renderToken(tokens, idx, options) {\n  var nextToken,\n      result = '',\n      needLf = false,\n      token = tokens[idx];\n\n  // Tight list paragraphs\n  if (token.hidden) {\n    return '';\n  }\n\n  // Insert a newline between hidden paragraph and subsequent opening\n  // block-level tag.\n  //\n  // For example, here we should insert a newline before blockquote:\n  //  - a\n  //    >\n  //\n  if (token.block && token.nesting !== -1 && idx && tokens[idx - 1].hidden) {\n    result += '\\n';\n  }\n\n  // Add token name, e.g. `<img`\n  result += (token.nesting === -1 ? '</' : '<') + token.tag;\n\n  // Encode attributes, e.g. `<img src=\"foo\"`\n  result += this.renderAttrs(token);\n\n  // Add a slash for self-closing tags, e.g. `<img src=\"foo\" /`\n  if (token.nesting === 0 && options.xhtmlOut) {\n    result += ' /';\n  }\n\n  // Check if we need to add a newline after this tag\n  if (token.block) {\n    needLf = true;\n\n    if (token.nesting === 1) {\n      if (idx + 1 < tokens.length) {\n        nextToken = tokens[idx + 1];\n\n        if (nextToken.type === 'inline' || nextToken.hidden) {\n          // Block-level tag containing an inline tag.\n          //\n          needLf = false;\n\n        } else if (nextToken.nesting === -1 && nextToken.tag === token.tag) {\n          // Opening tag + closing tag of the same type. E.g. `<li></li>`.\n          //\n          needLf = false;\n        }\n      }\n    }\n  }\n\n  result += needLf ? '>\\n' : '>';\n\n  return result;\n};\n\n\n/**\n * Renderer.renderInline(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to render\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * The same as [[Renderer.render]], but for single token of `inline` type.\n **/\nRenderer.prototype.renderInline = function (tokens, options, env) {\n  var type,\n      result = '',\n      rules = this.rules;\n\n  for (var i = 0, len = tokens.length; i < len; i++) {\n    type = tokens[i].type;\n\n    if (typeof rules[type] !== 'undefined') {\n      result += rules[type](tokens, i, options, env, this);\n    } else {\n      result += this.renderToken(tokens, i, options);\n    }\n  }\n\n  return result;\n};\n\n\n/** internal\n * Renderer.renderInlineAsText(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to render\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * Special kludge for image `alt` attributes to conform CommonMark spec.\n * Don't try to use it! Spec requires to show `alt` content with stripped markup,\n * instead of simple escaping.\n **/\nRenderer.prototype.renderInlineAsText = function (tokens, options, env) {\n  var result = '';\n\n  for (var i = 0, len = tokens.length; i < len; i++) {\n    if (tokens[i].type === 'text') {\n      result += tokens[i].content;\n    } else if (tokens[i].type === 'image') {\n      result += this.renderInlineAsText(tokens[i].children, options, env);\n    } else if (tokens[i].type === 'softbreak') {\n      result += '\\n';\n    }\n  }\n\n  return result;\n};\n\n\n/**\n * Renderer.render(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to render\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * Takes token stream and generates HTML. Probably, you will never need to call\n * this method directly.\n **/\nRenderer.prototype.render = function (tokens, options, env) {\n  var i, len, type,\n      result = '',\n      rules = this.rules;\n\n  for (i = 0, len = tokens.length; i < len; i++) {\n    type = tokens[i].type;\n\n    if (type === 'inline') {\n      result += this.renderInline(tokens[i].children, options, env);\n    } else if (typeof rules[type] !== 'undefined') {\n      result += rules[tokens[i].type](tokens, i, options, env, this);\n    } else {\n      result += this.renderToken(tokens, i, options, env);\n    }\n  }\n\n  return result;\n};\n\nmodule.exports = Renderer;\n","/**\n * class Ruler\n *\n * Helper class, used by [[MarkdownIt#core]], [[MarkdownIt#block]] and\n * [[MarkdownIt#inline]] to manage sequences of functions (rules):\n *\n * - keep rules in defined order\n * - assign the name to each rule\n * - enable/disable rules\n * - add/replace rules\n * - allow assign rules to additional named chains (in the same)\n * - cacheing lists of active rules\n *\n * You will not need use this class directly until write plugins. For simple\n * rules control use [[MarkdownIt.disable]], [[MarkdownIt.enable]] and\n * [[MarkdownIt.use]].\n **/\n'use strict';\n\n\n/**\n * new Ruler()\n **/\nfunction Ruler() {\n  // List of added rules. Each element is:\n  //\n  // {\n  //   name: XXX,\n  //   enabled: Boolean,\n  //   fn: Function(),\n  //   alt: [ name2, name3 ]\n  // }\n  //\n  this.__rules__ = [];\n\n  // Cached rule chains.\n  //\n  // First level - chain name, '' for default.\n  // Second level - diginal anchor for fast filtering by charcodes.\n  //\n  this.__cache__ = null;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// Helper methods, should not be used directly\n\n\n// Find rule index by name\n//\nRuler.prototype.__find__ = function (name) {\n  for (var i = 0; i < this.__rules__.length; i++) {\n    if (this.__rules__[i].name === name) {\n      return i;\n    }\n  }\n  return -1;\n};\n\n\n// Build rules lookup cache\n//\nRuler.prototype.__compile__ = function () {\n  var self = this;\n  var chains = [ '' ];\n\n  // collect unique names\n  self.__rules__.forEach(function (rule) {\n    if (!rule.enabled) { return; }\n\n    rule.alt.forEach(function (altName) {\n      if (chains.indexOf(altName) < 0) {\n        chains.push(altName);\n      }\n    });\n  });\n\n  self.__cache__ = {};\n\n  chains.forEach(function (chain) {\n    self.__cache__[chain] = [];\n    self.__rules__.forEach(function (rule) {\n      if (!rule.enabled) { return; }\n\n      if (chain && rule.alt.indexOf(chain) < 0) { return; }\n\n      self.__cache__[chain].push(rule.fn);\n    });\n  });\n};\n\n\n/**\n * Ruler.at(name, fn [, options])\n * - name (String): rule name to replace.\n * - fn (Function): new rule function.\n * - options (Object): new rule options (not mandatory).\n *\n * Replace rule by name with new function & options. Throws error if name not\n * found.\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * Replace existing typographer replacement rule with new one:\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.core.ruler.at('replacements', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.at = function (name, fn, options) {\n  var index = this.__find__(name);\n  var opt = options || {};\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + name); }\n\n  this.__rules__[index].fn = fn;\n  this.__rules__[index].alt = opt.alt || [];\n  this.__cache__ = null;\n};\n\n\n/**\n * Ruler.before(beforeName, ruleName, fn [, options])\n * - beforeName (String): new rule will be added before this one.\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Add new rule to chain before one with given name. See also\n * [[Ruler.after]], [[Ruler.push]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.block.ruler.before('paragraph', 'my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.before = function (beforeName, ruleName, fn, options) {\n  var index = this.__find__(beforeName);\n  var opt = options || {};\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + beforeName); }\n\n  this.__rules__.splice(index, 0, {\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n\n/**\n * Ruler.after(afterName, ruleName, fn [, options])\n * - afterName (String): new rule will be added after this one.\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Add new rule to chain after one with given name. See also\n * [[Ruler.before]], [[Ruler.push]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.inline.ruler.after('text', 'my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.after = function (afterName, ruleName, fn, options) {\n  var index = this.__find__(afterName);\n  var opt = options || {};\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + afterName); }\n\n  this.__rules__.splice(index + 1, 0, {\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n/**\n * Ruler.push(ruleName, fn [, options])\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Push new rule to the end of chain. See also\n * [[Ruler.before]], [[Ruler.after]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.core.ruler.push('my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.push = function (ruleName, fn, options) {\n  var opt = options || {};\n\n  this.__rules__.push({\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n\n/**\n * Ruler.enable(list [, ignoreInvalid]) -> Array\n * - list (String|Array): list of rule names to enable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable rules with given names. If any rule name not found - throw Error.\n * Errors can be disabled by second param.\n *\n * Returns list of found rule names (if no exception happened).\n *\n * See also [[Ruler.disable]], [[Ruler.enableOnly]].\n **/\nRuler.prototype.enable = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  var result = [];\n\n  // Search by name and enable\n  list.forEach(function (name) {\n    var idx = this.__find__(name);\n\n    if (idx < 0) {\n      if (ignoreInvalid) { return; }\n      throw new Error('Rules manager: invalid rule name ' + name);\n    }\n    this.__rules__[idx].enabled = true;\n    result.push(name);\n  }, this);\n\n  this.__cache__ = null;\n  return result;\n};\n\n\n/**\n * Ruler.enableOnly(list [, ignoreInvalid])\n * - list (String|Array): list of rule names to enable (whitelist).\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable rules with given names, and disable everything else. If any rule name\n * not found - throw Error. Errors can be disabled by second param.\n *\n * See also [[Ruler.disable]], [[Ruler.enable]].\n **/\nRuler.prototype.enableOnly = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  this.__rules__.forEach(function (rule) { rule.enabled = false; });\n\n  this.enable(list, ignoreInvalid);\n};\n\n\n/**\n * Ruler.disable(list [, ignoreInvalid]) -> Array\n * - list (String|Array): list of rule names to disable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Disable rules with given names. If any rule name not found - throw Error.\n * Errors can be disabled by second param.\n *\n * Returns list of found rule names (if no exception happened).\n *\n * See also [[Ruler.enable]], [[Ruler.enableOnly]].\n **/\nRuler.prototype.disable = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  var result = [];\n\n  // Search by name and disable\n  list.forEach(function (name) {\n    var idx = this.__find__(name);\n\n    if (idx < 0) {\n      if (ignoreInvalid) { return; }\n      throw new Error('Rules manager: invalid rule name ' + name);\n    }\n    this.__rules__[idx].enabled = false;\n    result.push(name);\n  }, this);\n\n  this.__cache__ = null;\n  return result;\n};\n\n\n/**\n * Ruler.getRules(chainName) -> Array\n *\n * Return array of active functions (rules) for given chain name. It analyzes\n * rules configuration, compiles caches if not exists and returns result.\n *\n * Default chain name is `''` (empty string). It can't be skipped. That's\n * done intentionally, to keep signature monomorphic for high speed.\n **/\nRuler.prototype.getRules = function (chainName) {\n  if (this.__cache__ === null) {\n    this.__compile__();\n  }\n\n  // Chain can be empty, if rules disabled. But we still have to return Array.\n  return this.__cache__[chainName] || [];\n};\n\nmodule.exports = Ruler;\n","// Normalize input string\n\n'use strict';\n\n\n// https://spec.commonmark.org/0.29/#line-ending\nvar NEWLINES_RE  = /\\r\\n?|\\n/g;\nvar NULL_RE      = /\\0/g;\n\n\nmodule.exports = function normalize(state) {\n  var str;\n\n  // Normalize newlines\n  str = state.src.replace(NEWLINES_RE, '\\n');\n\n  // Replace NULL characters\n  str = str.replace(NULL_RE, '\\uFFFD');\n\n  state.src = str;\n};\n","// Replace link-like texts with link nodes.\n//\n// Currently restricted by `md.validateLink()` to http/https/ftp\n//\n'use strict';\n\n\nvar arrayReplaceAt = require('../common/utils').arrayReplaceAt;\n\n\nfunction isLinkOpen(str) {\n  return /^<a[>\\s]/i.test(str);\n}\nfunction isLinkClose(str) {\n  return /^<\\/a\\s*>/i.test(str);\n}\n\n\nmodule.exports = function linkify(state) {\n  var i, j, l, tokens, token, currentToken, nodes, ln, text, pos, lastPos,\n      level, htmlLinkLevel, url, fullUrl, urlText,\n      blockTokens = state.tokens,\n      links;\n\n  if (!state.md.options.linkify) { return; }\n\n  for (j = 0, l = blockTokens.length; j < l; j++) {\n    if (blockTokens[j].type !== 'inline' ||\n        !state.md.linkify.pretest(blockTokens[j].content)) {\n      continue;\n    }\n\n    tokens = blockTokens[j].children;\n\n    htmlLinkLevel = 0;\n\n    // We scan from the end, to keep position when new tags added.\n    // Use reversed logic in links start/end match\n    for (i = tokens.length - 1; i >= 0; i--) {\n      currentToken = tokens[i];\n\n      // Skip content of markdown links\n      if (currentToken.type === 'link_close') {\n        i--;\n        while (tokens[i].level !== currentToken.level && tokens[i].type !== 'link_open') {\n          i--;\n        }\n        continue;\n      }\n\n      // Skip content of html tag links\n      if (currentToken.type === 'html_inline') {\n        if (isLinkOpen(currentToken.content) && htmlLinkLevel > 0) {\n          htmlLinkLevel--;\n        }\n        if (isLinkClose(currentToken.content)) {\n          htmlLinkLevel++;\n        }\n      }\n      if (htmlLinkLevel > 0) { continue; }\n\n      if (currentToken.type === 'text' && state.md.linkify.test(currentToken.content)) {\n\n        text = currentToken.content;\n        links = state.md.linkify.match(text);\n\n        // Now split string to nodes\n        nodes = [];\n        level = currentToken.level;\n        lastPos = 0;\n\n        // forbid escape sequence at the start of the string,\n        // this avoids http\\://example.com/ from being linkified as\n        // http:<a href=\"//example.com/\">//example.com/</a>\n        if (links.length > 0 &&\n            links[0].index === 0 &&\n            i > 0 &&\n            tokens[i - 1].type === 'text_special') {\n          links = links.slice(1);\n        }\n\n        for (ln = 0; ln < links.length; ln++) {\n          url = links[ln].url;\n          fullUrl = state.md.normalizeLink(url);\n          if (!state.md.validateLink(fullUrl)) { continue; }\n\n          urlText = links[ln].text;\n\n          // Linkifier might send raw hostnames like \"example.com\", where url\n          // starts with domain name. So we prepend http:// in those cases,\n          // and remove it afterwards.\n          //\n          if (!links[ln].schema) {\n            urlText = state.md.normalizeLinkText('http://' + urlText).replace(/^http:\\/\\//, '');\n          } else if (links[ln].schema === 'mailto:' && !/^mailto:/i.test(urlText)) {\n            urlText = state.md.normalizeLinkText('mailto:' + urlText).replace(/^mailto:/, '');\n          } else {\n            urlText = state.md.normalizeLinkText(urlText);\n          }\n\n          pos = links[ln].index;\n\n          if (pos > lastPos) {\n            token         = new state.Token('text', '', 0);\n            token.content = text.slice(lastPos, pos);\n            token.level   = level;\n            nodes.push(token);\n          }\n\n          token         = new state.Token('link_open', 'a', 1);\n          token.attrs   = [ [ 'href', fullUrl ] ];\n          token.level   = level++;\n          token.markup  = 'linkify';\n          token.info    = 'auto';\n          nodes.push(token);\n\n          token         = new state.Token('text', '', 0);\n          token.content = urlText;\n          token.level   = level;\n          nodes.push(token);\n\n          token         = new state.Token('link_close', 'a', -1);\n          token.level   = --level;\n          token.markup  = 'linkify';\n          token.info    = 'auto';\n          nodes.push(token);\n\n          lastPos = links[ln].lastIndex;\n        }\n        if (lastPos < text.length) {\n          token         = new state.Token('text', '', 0);\n          token.content = text.slice(lastPos);\n          token.level   = level;\n          nodes.push(token);\n        }\n\n        // replace current node\n        blockTokens[j].children = tokens = arrayReplaceAt(tokens, i, nodes);\n      }\n    }\n  }\n};\n","// Simple typographic replacements\n//\n// (c) (C) → ©\n// (tm) (TM) → ™\n// (r) (R) → ®\n// +- → ±\n// (p) (P) -> §\n// ... → … (also ?.... → ?.., !.... → !..)\n// ???????? → ???, !!!!! → !!!, `,,` → `,`\n// -- → &ndash;, --- → &mdash;\n//\n'use strict';\n\n// TODO:\n// - fractionals 1/2, 1/4, 3/4 -> ½, ¼, ¾\n// - multiplications 2 x 4 -> 2 × 4\n\nvar RARE_RE = /\\+-|\\.\\.|\\?\\?\\?\\?|!!!!|,,|--/;\n\n// Workaround for phantomjs - need regex without /g flag,\n// or root check will fail every second time\nvar SCOPED_ABBR_TEST_RE = /\\((c|tm|r)\\)/i;\n\nvar SCOPED_ABBR_RE = /\\((c|tm|r)\\)/ig;\nvar SCOPED_ABBR = {\n  c: '©',\n  r: '®',\n  tm: '™'\n};\n\nfunction replaceFn(match, name) {\n  return SCOPED_ABBR[name.toLowerCase()];\n}\n\nfunction replace_scoped(inlineTokens) {\n  var i, token, inside_autolink = 0;\n\n  for (i = inlineTokens.length - 1; i >= 0; i--) {\n    token = inlineTokens[i];\n\n    if (token.type === 'text' && !inside_autolink) {\n      token.content = token.content.replace(SCOPED_ABBR_RE, replaceFn);\n    }\n\n    if (token.type === 'link_open' && token.info === 'auto') {\n      inside_autolink--;\n    }\n\n    if (token.type === 'link_close' && token.info === 'auto') {\n      inside_autolink++;\n    }\n  }\n}\n\nfunction replace_rare(inlineTokens) {\n  var i, token, inside_autolink = 0;\n\n  for (i = inlineTokens.length - 1; i >= 0; i--) {\n    token = inlineTokens[i];\n\n    if (token.type === 'text' && !inside_autolink) {\n      if (RARE_RE.test(token.content)) {\n        token.content = token.content\n          .replace(/\\+-/g, '±')\n          // .., ..., ....... -> …\n          // but ?..... & !..... -> ?.. & !..\n          .replace(/\\.{2,}/g, '…').replace(/([?!])…/g, '$1..')\n          .replace(/([?!]){4,}/g, '$1$1$1').replace(/,{2,}/g, ',')\n          // em-dash\n          .replace(/(^|[^-])---(?=[^-]|$)/mg, '$1\\u2014')\n          // en-dash\n          .replace(/(^|\\s)--(?=\\s|$)/mg, '$1\\u2013')\n          .replace(/(^|[^-\\s])--(?=[^-\\s]|$)/mg, '$1\\u2013');\n      }\n    }\n\n    if (token.type === 'link_open' && token.info === 'auto') {\n      inside_autolink--;\n    }\n\n    if (token.type === 'link_close' && token.info === 'auto') {\n      inside_autolink++;\n    }\n  }\n}\n\n\nmodule.exports = function replace(state) {\n  var blkIdx;\n\n  if (!state.md.options.typographer) { return; }\n\n  for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n\n    if (state.tokens[blkIdx].type !== 'inline') { continue; }\n\n    if (SCOPED_ABBR_TEST_RE.test(state.tokens[blkIdx].content)) {\n      replace_scoped(state.tokens[blkIdx].children);\n    }\n\n    if (RARE_RE.test(state.tokens[blkIdx].content)) {\n      replace_rare(state.tokens[blkIdx].children);\n    }\n\n  }\n};\n","// Convert straight quotation marks to typographic ones\n//\n'use strict';\n\n\nvar isWhiteSpace   = require('../common/utils').isWhiteSpace;\nvar isPunctChar    = require('../common/utils').isPunctChar;\nvar isMdAsciiPunct = require('../common/utils').isMdAsciiPunct;\n\nvar QUOTE_TEST_RE = /['\"]/;\nvar QUOTE_RE = /['\"]/g;\nvar APOSTROPHE = '\\u2019'; /* ’ */\n\n\nfunction replaceAt(str, index, ch) {\n  return str.slice(0, index) + ch + str.slice(index + 1);\n}\n\nfunction process_inlines(tokens, state) {\n  var i, token, text, t, pos, max, thisLevel, item, lastChar, nextChar,\n      isLastPunctChar, isNextPunctChar, isLastWhiteSpace, isNextWhiteSpace,\n      canOpen, canClose, j, isSingle, stack, openQuote, closeQuote;\n\n  stack = [];\n\n  for (i = 0; i < tokens.length; i++) {\n    token = tokens[i];\n\n    thisLevel = tokens[i].level;\n\n    for (j = stack.length - 1; j >= 0; j--) {\n      if (stack[j].level <= thisLevel) { break; }\n    }\n    stack.length = j + 1;\n\n    if (token.type !== 'text') { continue; }\n\n    text = token.content;\n    pos = 0;\n    max = text.length;\n\n    /*eslint no-labels:0,block-scoped-var:0*/\n    OUTER:\n    while (pos < max) {\n      QUOTE_RE.lastIndex = pos;\n      t = QUOTE_RE.exec(text);\n      if (!t) { break; }\n\n      canOpen = canClose = true;\n      pos = t.index + 1;\n      isSingle = (t[0] === \"'\");\n\n      // Find previous character,\n      // default to space if it's the beginning of the line\n      //\n      lastChar = 0x20;\n\n      if (t.index - 1 >= 0) {\n        lastChar = text.charCodeAt(t.index - 1);\n      } else {\n        for (j = i - 1; j >= 0; j--) {\n          if (tokens[j].type === 'softbreak' || tokens[j].type === 'hardbreak') break; // lastChar defaults to 0x20\n          if (!tokens[j].content) continue; // should skip all tokens except 'text', 'html_inline' or 'code_inline'\n\n          lastChar = tokens[j].content.charCodeAt(tokens[j].content.length - 1);\n          break;\n        }\n      }\n\n      // Find next character,\n      // default to space if it's the end of the line\n      //\n      nextChar = 0x20;\n\n      if (pos < max) {\n        nextChar = text.charCodeAt(pos);\n      } else {\n        for (j = i + 1; j < tokens.length; j++) {\n          if (tokens[j].type === 'softbreak' || tokens[j].type === 'hardbreak') break; // nextChar defaults to 0x20\n          if (!tokens[j].content) continue; // should skip all tokens except 'text', 'html_inline' or 'code_inline'\n\n          nextChar = tokens[j].content.charCodeAt(0);\n          break;\n        }\n      }\n\n      isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar));\n      isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar));\n\n      isLastWhiteSpace = isWhiteSpace(lastChar);\n      isNextWhiteSpace = isWhiteSpace(nextChar);\n\n      if (isNextWhiteSpace) {\n        canOpen = false;\n      } else if (isNextPunctChar) {\n        if (!(isLastWhiteSpace || isLastPunctChar)) {\n          canOpen = false;\n        }\n      }\n\n      if (isLastWhiteSpace) {\n        canClose = false;\n      } else if (isLastPunctChar) {\n        if (!(isNextWhiteSpace || isNextPunctChar)) {\n          canClose = false;\n        }\n      }\n\n      if (nextChar === 0x22 /* \" */ && t[0] === '\"') {\n        if (lastChar >= 0x30 /* 0 */ && lastChar <= 0x39 /* 9 */) {\n          // special case: 1\"\" - count first quote as an inch\n          canClose = canOpen = false;\n        }\n      }\n\n      if (canOpen && canClose) {\n        // Replace quotes in the middle of punctuation sequence, but not\n        // in the middle of the words, i.e.:\n        //\n        // 1. foo \" bar \" baz - not replaced\n        // 2. foo-\"-bar-\"-baz - replaced\n        // 3. foo\"bar\"baz     - not replaced\n        //\n        canOpen = isLastPunctChar;\n        canClose = isNextPunctChar;\n      }\n\n      if (!canOpen && !canClose) {\n        // middle of word\n        if (isSingle) {\n          token.content = replaceAt(token.content, t.index, APOSTROPHE);\n        }\n        continue;\n      }\n\n      if (canClose) {\n        // this could be a closing quote, rewind the stack to get a match\n        for (j = stack.length - 1; j >= 0; j--) {\n          item = stack[j];\n          if (stack[j].level < thisLevel) { break; }\n          if (item.single === isSingle && stack[j].level === thisLevel) {\n            item = stack[j];\n\n            if (isSingle) {\n              openQuote = state.md.options.quotes[2];\n              closeQuote = state.md.options.quotes[3];\n            } else {\n              openQuote = state.md.options.quotes[0];\n              closeQuote = state.md.options.quotes[1];\n            }\n\n            // replace token.content *before* tokens[item.token].content,\n            // because, if they are pointing at the same token, replaceAt\n            // could mess up indices when quote length != 1\n            token.content = replaceAt(token.content, t.index, closeQuote);\n            tokens[item.token].content = replaceAt(\n              tokens[item.token].content, item.pos, openQuote);\n\n            pos += closeQuote.length - 1;\n            if (item.token === i) { pos += openQuote.length - 1; }\n\n            text = token.content;\n            max = text.length;\n\n            stack.length = j;\n            continue OUTER;\n          }\n        }\n      }\n\n      if (canOpen) {\n        stack.push({\n          token: i,\n          pos: t.index,\n          single: isSingle,\n          level: thisLevel\n        });\n      } else if (canClose && isSingle) {\n        token.content = replaceAt(token.content, t.index, APOSTROPHE);\n      }\n    }\n  }\n}\n\n\nmodule.exports = function smartquotes(state) {\n  /*eslint max-depth:0*/\n  var blkIdx;\n\n  if (!state.md.options.typographer) { return; }\n\n  for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n\n    if (state.tokens[blkIdx].type !== 'inline' ||\n        !QUOTE_TEST_RE.test(state.tokens[blkIdx].content)) {\n      continue;\n    }\n\n    process_inlines(state.tokens[blkIdx].children, state);\n  }\n};\n","// Token class\n\n'use strict';\n\n\n/**\n * class Token\n **/\n\n/**\n * new Token(type, tag, nesting)\n *\n * Create new token and fill passed properties.\n **/\nfunction Token(type, tag, nesting) {\n  /**\n   * Token#type -> String\n   *\n   * Type of the token (string, e.g. \"paragraph_open\")\n   **/\n  this.type     = type;\n\n  /**\n   * Token#tag -> String\n   *\n   * html tag name, e.g. \"p\"\n   **/\n  this.tag      = tag;\n\n  /**\n   * Token#attrs -> Array\n   *\n   * Html attributes. Format: `[ [ name1, value1 ], [ name2, value2 ] ]`\n   **/\n  this.attrs    = null;\n\n  /**\n   * Token#map -> Array\n   *\n   * Source map info. Format: `[ line_begin, line_end ]`\n   **/\n  this.map      = null;\n\n  /**\n   * Token#nesting -> Number\n   *\n   * Level change (number in {-1, 0, 1} set), where:\n   *\n   * -  `1` means the tag is opening\n   * -  `0` means the tag is self-closing\n   * - `-1` means the tag is closing\n   **/\n  this.nesting  = nesting;\n\n  /**\n   * Token#level -> Number\n   *\n   * nesting level, the same as `state.level`\n   **/\n  this.level    = 0;\n\n  /**\n   * Token#children -> Array\n   *\n   * An array of child nodes (inline and img tokens)\n   **/\n  this.children = null;\n\n  /**\n   * Token#content -> String\n   *\n   * In a case of self-closing tag (code, html, fence, etc.),\n   * it has contents of this tag.\n   **/\n  this.content  = '';\n\n  /**\n   * Token#markup -> String\n   *\n   * '*' or '_' for emphasis, fence string for fence, etc.\n   **/\n  this.markup   = '';\n\n  /**\n   * Token#info -> String\n   *\n   * Additional information:\n   *\n   * - Info string for \"fence\" tokens\n   * - The value \"auto\" for autolink \"link_open\" and \"link_close\" tokens\n   * - The string value of the item marker for ordered-list \"list_item_open\" tokens\n   **/\n  this.info     = '';\n\n  /**\n   * Token#meta -> Object\n   *\n   * A place for plugins to store an arbitrary data\n   **/\n  this.meta     = null;\n\n  /**\n   * Token#block -> Boolean\n   *\n   * True for block-level tokens, false for inline tokens.\n   * Used in renderer to calculate line breaks\n   **/\n  this.block    = false;\n\n  /**\n   * Token#hidden -> Boolean\n   *\n   * If it's true, ignore this element when rendering. Used for tight lists\n   * to hide paragraphs.\n   **/\n  this.hidden   = false;\n}\n\n\n/**\n * Token.attrIndex(name) -> Number\n *\n * Search attribute index by name.\n **/\nToken.prototype.attrIndex = function attrIndex(name) {\n  var attrs, i, len;\n\n  if (!this.attrs) { return -1; }\n\n  attrs = this.attrs;\n\n  for (i = 0, len = attrs.length; i < len; i++) {\n    if (attrs[i][0] === name) { return i; }\n  }\n  return -1;\n};\n\n\n/**\n * Token.attrPush(attrData)\n *\n * Add `[ name, value ]` attribute to list. Init attrs if necessary\n **/\nToken.prototype.attrPush = function attrPush(attrData) {\n  if (this.attrs) {\n    this.attrs.push(attrData);\n  } else {\n    this.attrs = [ attrData ];\n  }\n};\n\n\n/**\n * Token.attrSet(name, value)\n *\n * Set `name` attribute to `value`. Override old value if exists.\n **/\nToken.prototype.attrSet = function attrSet(name, value) {\n  var idx = this.attrIndex(name),\n      attrData = [ name, value ];\n\n  if (idx < 0) {\n    this.attrPush(attrData);\n  } else {\n    this.attrs[idx] = attrData;\n  }\n};\n\n\n/**\n * Token.attrGet(name)\n *\n * Get the value of attribute `name`, or null if it does not exist.\n **/\nToken.prototype.attrGet = function attrGet(name) {\n  var idx = this.attrIndex(name), value = null;\n  if (idx >= 0) {\n    value = this.attrs[idx][1];\n  }\n  return value;\n};\n\n\n/**\n * Token.attrJoin(name, value)\n *\n * Join value to existing attribute via space. Or create new attribute if not\n * exists. Useful to operate with token classes.\n **/\nToken.prototype.attrJoin = function attrJoin(name, value) {\n  var idx = this.attrIndex(name);\n\n  if (idx < 0) {\n    this.attrPush([ name, value ]);\n  } else {\n    this.attrs[idx][1] = this.attrs[idx][1] + ' ' + value;\n  }\n};\n\n\nmodule.exports = Token;\n","// Core state object\n//\n'use strict';\n\nvar Token = require('../token');\n\n\nfunction StateCore(src, md, env) {\n  this.src = src;\n  this.env = env;\n  this.tokens = [];\n  this.inlineMode = false;\n  this.md = md; // link to parser instance\n}\n\n// re-export Token class to use in core rules\nStateCore.prototype.Token = Token;\n\n\nmodule.exports = StateCore;\n","/** internal\n * class Core\n *\n * Top-level rules executor. Glues block/inline parsers and does intermediate\n * transformations.\n **/\n'use strict';\n\n\nvar Ruler  = require('./ruler');\n\n\nvar _rules = [\n  [ 'normalize',      require('./rules_core/normalize')      ],\n  [ 'block',          require('./rules_core/block')          ],\n  [ 'inline',         require('./rules_core/inline')         ],\n  [ 'linkify',        require('./rules_core/linkify')        ],\n  [ 'replacements',   require('./rules_core/replacements')   ],\n  [ 'smartquotes',    require('./rules_core/smartquotes')    ],\n  // `text_join` finds `text_special` tokens (for escape sequences)\n  // and joins them with the rest of the text\n  [ 'text_join',      require('./rules_core/text_join')      ]\n];\n\n\n/**\n * new Core()\n **/\nfunction Core() {\n  /**\n   * Core#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of core rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (var i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1]);\n  }\n}\n\n\n/**\n * Core.process(state)\n *\n * Executes core chain rules.\n **/\nCore.prototype.process = function (state) {\n  var i, l, rules;\n\n  rules = this.ruler.getRules('');\n\n  for (i = 0, l = rules.length; i < l; i++) {\n    rules[i](state);\n  }\n};\n\nCore.prototype.State = require('./rules_core/state_core');\n\n\nmodule.exports = Core;\n","'use strict';\n\n\nmodule.exports = function block(state) {\n  var token;\n\n  if (state.inlineMode) {\n    token          = new state.Token('inline', '', 0);\n    token.content  = state.src;\n    token.map      = [ 0, 1 ];\n    token.children = [];\n    state.tokens.push(token);\n  } else {\n    state.md.block.parse(state.src, state.md, state.env, state.tokens);\n  }\n};\n","'use strict';\n\nmodule.exports = function inline(state) {\n  var tokens = state.tokens, tok, i, l;\n\n  // Parse inlines\n  for (i = 0, l = tokens.length; i < l; i++) {\n    tok = tokens[i];\n    if (tok.type === 'inline') {\n      state.md.inline.parse(tok.content, state.md, state.env, tok.children);\n    }\n  }\n};\n","// Join raw text tokens with the rest of the text\n//\n// This is set as a separate rule to provide an opportunity for plugins\n// to run text replacements after text join, but before escape join.\n//\n// For example, `\\:)` shouldn't be replaced with an emoji.\n//\n'use strict';\n\n\nmodule.exports = function text_join(state) {\n  var j, l, tokens, curr, max, last,\n      blockTokens = state.tokens;\n\n  for (j = 0, l = blockTokens.length; j < l; j++) {\n    if (blockTokens[j].type !== 'inline') continue;\n\n    tokens = blockTokens[j].children;\n    max = tokens.length;\n\n    for (curr = 0; curr < max; curr++) {\n      if (tokens[curr].type === 'text_special') {\n        tokens[curr].type = 'text';\n      }\n    }\n\n    for (curr = last = 0; curr < max; curr++) {\n      if (tokens[curr].type === 'text' &&\n          curr + 1 < max &&\n          tokens[curr + 1].type === 'text') {\n\n        // collapse two adjacent text nodes\n        tokens[curr + 1].content = tokens[curr].content + tokens[curr + 1].content;\n      } else {\n        if (curr !== last) { tokens[last] = tokens[curr]; }\n\n        last++;\n      }\n    }\n\n    if (curr !== last) {\n      tokens.length = last;\n    }\n  }\n};\n","// GFM table, https://github.github.com/gfm/#tables-extension-\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nfunction getLine(state, line) {\n  var pos = state.bMarks[line] + state.tShift[line],\n      max = state.eMarks[line];\n\n  return state.src.slice(pos, max);\n}\n\nfunction escapedSplit(str) {\n  var result = [],\n      pos = 0,\n      max = str.length,\n      ch,\n      isEscaped = false,\n      lastPos = 0,\n      current = '';\n\n  ch  = str.charCodeAt(pos);\n\n  while (pos < max) {\n    if (ch === 0x7c/* | */) {\n      if (!isEscaped) {\n        // pipe separating cells, '|'\n        result.push(current + str.substring(lastPos, pos));\n        current = '';\n        lastPos = pos + 1;\n      } else {\n        // escaped pipe, '\\|'\n        current += str.substring(lastPos, pos - 1);\n        lastPos = pos;\n      }\n    }\n\n    isEscaped = (ch === 0x5c/* \\ */);\n    pos++;\n\n    ch = str.charCodeAt(pos);\n  }\n\n  result.push(current + str.substring(lastPos));\n\n  return result;\n}\n\n\nmodule.exports = function table(state, startLine, endLine, silent) {\n  var ch, lineText, pos, i, l, nextLine, columns, columnCount, token,\n      aligns, t, tableLines, tbodyLines, oldParentType, terminate,\n      terminatorRules, firstCh, secondCh;\n\n  // should have at least two lines\n  if (startLine + 2 > endLine) { return false; }\n\n  nextLine = startLine + 1;\n\n  if (state.sCount[nextLine] < state.blkIndent) { return false; }\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[nextLine] - state.blkIndent >= 4) { return false; }\n\n  // first character of the second line should be '|', '-', ':',\n  // and no other characters are allowed but spaces;\n  // basically, this is the equivalent of /^[-:|][-:|\\s]*$/ regexp\n\n  pos = state.bMarks[nextLine] + state.tShift[nextLine];\n  if (pos >= state.eMarks[nextLine]) { return false; }\n\n  firstCh = state.src.charCodeAt(pos++);\n  if (firstCh !== 0x7C/* | */ && firstCh !== 0x2D/* - */ && firstCh !== 0x3A/* : */) { return false; }\n\n  if (pos >= state.eMarks[nextLine]) { return false; }\n\n  secondCh = state.src.charCodeAt(pos++);\n  if (secondCh !== 0x7C/* | */ && secondCh !== 0x2D/* - */ && secondCh !== 0x3A/* : */ && !isSpace(secondCh)) {\n    return false;\n  }\n\n  // if first character is '-', then second character must not be a space\n  // (due to parsing ambiguity with list)\n  if (firstCh === 0x2D/* - */ && isSpace(secondCh)) { return false; }\n\n  while (pos < state.eMarks[nextLine]) {\n    ch = state.src.charCodeAt(pos);\n\n    if (ch !== 0x7C/* | */ && ch !== 0x2D/* - */ && ch !== 0x3A/* : */ && !isSpace(ch)) { return false; }\n\n    pos++;\n  }\n\n  lineText = getLine(state, startLine + 1);\n\n  columns = lineText.split('|');\n  aligns = [];\n  for (i = 0; i < columns.length; i++) {\n    t = columns[i].trim();\n    if (!t) {\n      // allow empty columns before and after table, but not in between columns;\n      // e.g. allow ` |---| `, disallow ` ---||--- `\n      if (i === 0 || i === columns.length - 1) {\n        continue;\n      } else {\n        return false;\n      }\n    }\n\n    if (!/^:?-+:?$/.test(t)) { return false; }\n    if (t.charCodeAt(t.length - 1) === 0x3A/* : */) {\n      aligns.push(t.charCodeAt(0) === 0x3A/* : */ ? 'center' : 'right');\n    } else if (t.charCodeAt(0) === 0x3A/* : */) {\n      aligns.push('left');\n    } else {\n      aligns.push('');\n    }\n  }\n\n  lineText = getLine(state, startLine).trim();\n  if (lineText.indexOf('|') === -1) { return false; }\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n  columns = escapedSplit(lineText);\n  if (columns.length && columns[0] === '') columns.shift();\n  if (columns.length && columns[columns.length - 1] === '') columns.pop();\n\n  // header row will define an amount of columns in the entire table,\n  // and align row should be exactly the same (the rest of the rows can differ)\n  columnCount = columns.length;\n  if (columnCount === 0 || columnCount !== aligns.length) { return false; }\n\n  if (silent) { return true; }\n\n  oldParentType = state.parentType;\n  state.parentType = 'table';\n\n  // use 'blockquote' lists for termination because it's\n  // the most similar to tables\n  terminatorRules = state.md.block.ruler.getRules('blockquote');\n\n  token     = state.push('table_open', 'table', 1);\n  token.map = tableLines = [ startLine, 0 ];\n\n  token     = state.push('thead_open', 'thead', 1);\n  token.map = [ startLine, startLine + 1 ];\n\n  token     = state.push('tr_open', 'tr', 1);\n  token.map = [ startLine, startLine + 1 ];\n\n  for (i = 0; i < columns.length; i++) {\n    token          = state.push('th_open', 'th', 1);\n    if (aligns[i]) {\n      token.attrs  = [ [ 'style', 'text-align:' + aligns[i] ] ];\n    }\n\n    token          = state.push('inline', '', 0);\n    token.content  = columns[i].trim();\n    token.children = [];\n\n    token          = state.push('th_close', 'th', -1);\n  }\n\n  token     = state.push('tr_close', 'tr', -1);\n  token     = state.push('thead_close', 'thead', -1);\n\n  for (nextLine = startLine + 2; nextLine < endLine; nextLine++) {\n    if (state.sCount[nextLine] < state.blkIndent) { break; }\n\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n\n    if (terminate) { break; }\n    lineText = getLine(state, nextLine).trim();\n    if (!lineText) { break; }\n    if (state.sCount[nextLine] - state.blkIndent >= 4) { break; }\n    columns = escapedSplit(lineText);\n    if (columns.length && columns[0] === '') columns.shift();\n    if (columns.length && columns[columns.length - 1] === '') columns.pop();\n\n    if (nextLine === startLine + 2) {\n      token     = state.push('tbody_open', 'tbody', 1);\n      token.map = tbodyLines = [ startLine + 2, 0 ];\n    }\n\n    token     = state.push('tr_open', 'tr', 1);\n    token.map = [ nextLine, nextLine + 1 ];\n\n    for (i = 0; i < columnCount; i++) {\n      token          = state.push('td_open', 'td', 1);\n      if (aligns[i]) {\n        token.attrs  = [ [ 'style', 'text-align:' + aligns[i] ] ];\n      }\n\n      token          = state.push('inline', '', 0);\n      token.content  = columns[i] ? columns[i].trim() : '';\n      token.children = [];\n\n      token          = state.push('td_close', 'td', -1);\n    }\n    token = state.push('tr_close', 'tr', -1);\n  }\n\n  if (tbodyLines) {\n    token = state.push('tbody_close', 'tbody', -1);\n    tbodyLines[1] = nextLine;\n  }\n\n  token = state.push('table_close', 'table', -1);\n  tableLines[1] = nextLine;\n\n  state.parentType = oldParentType;\n  state.line = nextLine;\n  return true;\n};\n","// Block quotes\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function blockquote(state, startLine, endLine, silent) {\n  var adjustTab,\n      ch,\n      i,\n      initial,\n      l,\n      lastLineEmpty,\n      lines,\n      nextLine,\n      offset,\n      oldBMarks,\n      oldBSCount,\n      oldIndent,\n      oldParentType,\n      oldSCount,\n      oldTShift,\n      spaceAfterMarker,\n      terminate,\n      terminatorRules,\n      token,\n      isOutdented,\n      oldLineMax = state.lineMax,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  // check the block quote marker\n  if (state.src.charCodeAt(pos++) !== 0x3E/* > */) { return false; }\n\n  // we know that it's going to be a valid blockquote,\n  // so no point trying to find the end of it in silent mode\n  if (silent) { return true; }\n\n  // set offset past spaces and \">\"\n  initial = offset = state.sCount[startLine] + 1;\n\n  // skip one optional space after '>'\n  if (state.src.charCodeAt(pos) === 0x20 /* space */) {\n    // ' >   test '\n    //     ^ -- position start of line here:\n    pos++;\n    initial++;\n    offset++;\n    adjustTab = false;\n    spaceAfterMarker = true;\n  } else if (state.src.charCodeAt(pos) === 0x09 /* tab */) {\n    spaceAfterMarker = true;\n\n    if ((state.bsCount[startLine] + offset) % 4 === 3) {\n      // '  >\\t  test '\n      //       ^ -- position start of line here (tab has width===1)\n      pos++;\n      initial++;\n      offset++;\n      adjustTab = false;\n    } else {\n      // ' >\\t  test '\n      //    ^ -- position start of line here + shift bsCount slightly\n      //         to make extra space appear\n      adjustTab = true;\n    }\n  } else {\n    spaceAfterMarker = false;\n  }\n\n  oldBMarks = [ state.bMarks[startLine] ];\n  state.bMarks[startLine] = pos;\n\n  while (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (isSpace(ch)) {\n      if (ch === 0x09) {\n        offset += 4 - (offset + state.bsCount[startLine] + (adjustTab ? 1 : 0)) % 4;\n      } else {\n        offset++;\n      }\n    } else {\n      break;\n    }\n\n    pos++;\n  }\n\n  oldBSCount = [ state.bsCount[startLine] ];\n  state.bsCount[startLine] = state.sCount[startLine] + 1 + (spaceAfterMarker ? 1 : 0);\n\n  lastLineEmpty = pos >= max;\n\n  oldSCount = [ state.sCount[startLine] ];\n  state.sCount[startLine] = offset - initial;\n\n  oldTShift = [ state.tShift[startLine] ];\n  state.tShift[startLine] = pos - state.bMarks[startLine];\n\n  terminatorRules = state.md.block.ruler.getRules('blockquote');\n\n  oldParentType = state.parentType;\n  state.parentType = 'blockquote';\n\n  // Search the end of the block\n  //\n  // Block ends with either:\n  //  1. an empty line outside:\n  //     ```\n  //     > test\n  //\n  //     ```\n  //  2. an empty line inside:\n  //     ```\n  //     >\n  //     test\n  //     ```\n  //  3. another tag:\n  //     ```\n  //     > test\n  //      - - -\n  //     ```\n  for (nextLine = startLine + 1; nextLine < endLine; nextLine++) {\n    // check if it's outdented, i.e. it's inside list item and indented\n    // less than said list item:\n    //\n    // ```\n    // 1. anything\n    //    > current blockquote\n    // 2. checking this line\n    // ```\n    isOutdented = state.sCount[nextLine] < state.blkIndent;\n\n    pos = state.bMarks[nextLine] + state.tShift[nextLine];\n    max = state.eMarks[nextLine];\n\n    if (pos >= max) {\n      // Case 1: line is not inside the blockquote, and this line is empty.\n      break;\n    }\n\n    if (state.src.charCodeAt(pos++) === 0x3E/* > */ && !isOutdented) {\n      // This line is inside the blockquote.\n\n      // set offset past spaces and \">\"\n      initial = offset = state.sCount[nextLine] + 1;\n\n      // skip one optional space after '>'\n      if (state.src.charCodeAt(pos) === 0x20 /* space */) {\n        // ' >   test '\n        //     ^ -- position start of line here:\n        pos++;\n        initial++;\n        offset++;\n        adjustTab = false;\n        spaceAfterMarker = true;\n      } else if (state.src.charCodeAt(pos) === 0x09 /* tab */) {\n        spaceAfterMarker = true;\n\n        if ((state.bsCount[nextLine] + offset) % 4 === 3) {\n          // '  >\\t  test '\n          //       ^ -- position start of line here (tab has width===1)\n          pos++;\n          initial++;\n          offset++;\n          adjustTab = false;\n        } else {\n          // ' >\\t  test '\n          //    ^ -- position start of line here + shift bsCount slightly\n          //         to make extra space appear\n          adjustTab = true;\n        }\n      } else {\n        spaceAfterMarker = false;\n      }\n\n      oldBMarks.push(state.bMarks[nextLine]);\n      state.bMarks[nextLine] = pos;\n\n      while (pos < max) {\n        ch = state.src.charCodeAt(pos);\n\n        if (isSpace(ch)) {\n          if (ch === 0x09) {\n            offset += 4 - (offset + state.bsCount[nextLine] + (adjustTab ? 1 : 0)) % 4;\n          } else {\n            offset++;\n          }\n        } else {\n          break;\n        }\n\n        pos++;\n      }\n\n      lastLineEmpty = pos >= max;\n\n      oldBSCount.push(state.bsCount[nextLine]);\n      state.bsCount[nextLine] = state.sCount[nextLine] + 1 + (spaceAfterMarker ? 1 : 0);\n\n      oldSCount.push(state.sCount[nextLine]);\n      state.sCount[nextLine] = offset - initial;\n\n      oldTShift.push(state.tShift[nextLine]);\n      state.tShift[nextLine] = pos - state.bMarks[nextLine];\n      continue;\n    }\n\n    // Case 2: line is not inside the blockquote, and the last line was empty.\n    if (lastLineEmpty) { break; }\n\n    // Case 3: another tag found.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n\n    if (terminate) {\n      // Quirk to enforce \"hard termination mode\" for paragraphs;\n      // normally if you call `tokenize(state, startLine, nextLine)`,\n      // paragraphs will look below nextLine for paragraph continuation,\n      // but if blockquote is terminated by another tag, they shouldn't\n      state.lineMax = nextLine;\n\n      if (state.blkIndent !== 0) {\n        // state.blkIndent was non-zero, we now set it to zero,\n        // so we need to re-calculate all offsets to appear as\n        // if indent wasn't changed\n        oldBMarks.push(state.bMarks[nextLine]);\n        oldBSCount.push(state.bsCount[nextLine]);\n        oldTShift.push(state.tShift[nextLine]);\n        oldSCount.push(state.sCount[nextLine]);\n        state.sCount[nextLine] -= state.blkIndent;\n      }\n\n      break;\n    }\n\n    oldBMarks.push(state.bMarks[nextLine]);\n    oldBSCount.push(state.bsCount[nextLine]);\n    oldTShift.push(state.tShift[nextLine]);\n    oldSCount.push(state.sCount[nextLine]);\n\n    // A negative indentation means that this is a paragraph continuation\n    //\n    state.sCount[nextLine] = -1;\n  }\n\n  oldIndent = state.blkIndent;\n  state.blkIndent = 0;\n\n  token        = state.push('blockquote_open', 'blockquote', 1);\n  token.markup = '>';\n  token.map    = lines = [ startLine, 0 ];\n\n  state.md.block.tokenize(state, startLine, nextLine);\n\n  token        = state.push('blockquote_close', 'blockquote', -1);\n  token.markup = '>';\n\n  state.lineMax = oldLineMax;\n  state.parentType = oldParentType;\n  lines[1] = state.line;\n\n  // Restore original tShift; this might not be necessary since the parser\n  // has already been here, but just to make sure we can do that.\n  for (i = 0; i < oldTShift.length; i++) {\n    state.bMarks[i + startLine] = oldBMarks[i];\n    state.tShift[i + startLine] = oldTShift[i];\n    state.sCount[i + startLine] = oldSCount[i];\n    state.bsCount[i + startLine] = oldBSCount[i];\n  }\n  state.blkIndent = oldIndent;\n\n  return true;\n};\n","// Horizontal rule\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function hr(state, startLine, endLine, silent) {\n  var marker, cnt, ch, token,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  marker = state.src.charCodeAt(pos++);\n\n  // Check hr marker\n  if (marker !== 0x2A/* * */ &&\n      marker !== 0x2D/* - */ &&\n      marker !== 0x5F/* _ */) {\n    return false;\n  }\n\n  // markers can be mixed with spaces, but there should be at least 3 of them\n\n  cnt = 1;\n  while (pos < max) {\n    ch = state.src.charCodeAt(pos++);\n    if (ch !== marker && !isSpace(ch)) { return false; }\n    if (ch === marker) { cnt++; }\n  }\n\n  if (cnt < 3) { return false; }\n\n  if (silent) { return true; }\n\n  state.line = startLine + 1;\n\n  token        = state.push('hr', 'hr', 0);\n  token.map    = [ startLine, state.line ];\n  token.markup = Array(cnt + 1).join(String.fromCharCode(marker));\n\n  return true;\n};\n","// Lists\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\n// Search `[-+*][\\n ]`, returns next pos after marker on success\n// or -1 on fail.\nfunction skipBulletListMarker(state, startLine) {\n  var marker, pos, max, ch;\n\n  pos = state.bMarks[startLine] + state.tShift[startLine];\n  max = state.eMarks[startLine];\n\n  marker = state.src.charCodeAt(pos++);\n  // Check bullet\n  if (marker !== 0x2A/* * */ &&\n      marker !== 0x2D/* - */ &&\n      marker !== 0x2B/* + */) {\n    return -1;\n  }\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (!isSpace(ch)) {\n      // \" -test \" - is not a list item\n      return -1;\n    }\n  }\n\n  return pos;\n}\n\n// Search `\\d+[.)][\\n ]`, returns next pos after marker on success\n// or -1 on fail.\nfunction skipOrderedListMarker(state, startLine) {\n  var ch,\n      start = state.bMarks[startLine] + state.tShift[startLine],\n      pos = start,\n      max = state.eMarks[startLine];\n\n  // List marker should have at least 2 chars (digit + dot)\n  if (pos + 1 >= max) { return -1; }\n\n  ch = state.src.charCodeAt(pos++);\n\n  if (ch < 0x30/* 0 */ || ch > 0x39/* 9 */) { return -1; }\n\n  for (;;) {\n    // EOL -> fail\n    if (pos >= max) { return -1; }\n\n    ch = state.src.charCodeAt(pos++);\n\n    if (ch >= 0x30/* 0 */ && ch <= 0x39/* 9 */) {\n\n      // List marker should have no more than 9 digits\n      // (prevents integer overflow in browsers)\n      if (pos - start >= 10) { return -1; }\n\n      continue;\n    }\n\n    // found valid marker\n    if (ch === 0x29/* ) */ || ch === 0x2e/* . */) {\n      break;\n    }\n\n    return -1;\n  }\n\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (!isSpace(ch)) {\n      // \" 1.test \" - is not a list item\n      return -1;\n    }\n  }\n  return pos;\n}\n\nfunction markTightParagraphs(state, idx) {\n  var i, l,\n      level = state.level + 2;\n\n  for (i = idx + 2, l = state.tokens.length - 2; i < l; i++) {\n    if (state.tokens[i].level === level && state.tokens[i].type === 'paragraph_open') {\n      state.tokens[i + 2].hidden = true;\n      state.tokens[i].hidden = true;\n      i += 2;\n    }\n  }\n}\n\n\nmodule.exports = function list(state, startLine, endLine, silent) {\n  var ch,\n      contentStart,\n      i,\n      indent,\n      indentAfterMarker,\n      initial,\n      isOrdered,\n      itemLines,\n      l,\n      listLines,\n      listTokIdx,\n      markerCharCode,\n      markerValue,\n      max,\n      nextLine,\n      offset,\n      oldListIndent,\n      oldParentType,\n      oldSCount,\n      oldTShift,\n      oldTight,\n      pos,\n      posAfterMarker,\n      prevEmptyEnd,\n      start,\n      terminate,\n      terminatorRules,\n      token,\n      isTerminatingParagraph = false,\n      tight = true;\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  // Special case:\n  //  - item 1\n  //   - item 2\n  //    - item 3\n  //     - item 4\n  //      - this one is a paragraph continuation\n  if (state.listIndent >= 0 &&\n      state.sCount[startLine] - state.listIndent >= 4 &&\n      state.sCount[startLine] < state.blkIndent) {\n    return false;\n  }\n\n  // limit conditions when list can interrupt\n  // a paragraph (validation mode only)\n  if (silent && state.parentType === 'paragraph') {\n    // Next list item should still terminate previous list item;\n    //\n    // This code can fail if plugins use blkIndent as well as lists,\n    // but I hope the spec gets fixed long before that happens.\n    //\n    if (state.sCount[startLine] >= state.blkIndent) {\n      isTerminatingParagraph = true;\n    }\n  }\n\n  // Detect list type and position after marker\n  if ((posAfterMarker = skipOrderedListMarker(state, startLine)) >= 0) {\n    isOrdered = true;\n    start = state.bMarks[startLine] + state.tShift[startLine];\n    markerValue = Number(state.src.slice(start, posAfterMarker - 1));\n\n    // If we're starting a new ordered list right after\n    // a paragraph, it should start with 1.\n    if (isTerminatingParagraph && markerValue !== 1) return false;\n\n  } else if ((posAfterMarker = skipBulletListMarker(state, startLine)) >= 0) {\n    isOrdered = false;\n\n  } else {\n    return false;\n  }\n\n  // If we're starting a new unordered list right after\n  // a paragraph, first line should not be empty.\n  if (isTerminatingParagraph) {\n    if (state.skipSpaces(posAfterMarker) >= state.eMarks[startLine]) return false;\n  }\n\n  // We should terminate list on style change. Remember first one to compare.\n  markerCharCode = state.src.charCodeAt(posAfterMarker - 1);\n\n  // For validation mode we can terminate immediately\n  if (silent) { return true; }\n\n  // Start list\n  listTokIdx = state.tokens.length;\n\n  if (isOrdered) {\n    token       = state.push('ordered_list_open', 'ol', 1);\n    if (markerValue !== 1) {\n      token.attrs = [ [ 'start', markerValue ] ];\n    }\n\n  } else {\n    token       = state.push('bullet_list_open', 'ul', 1);\n  }\n\n  token.map    = listLines = [ startLine, 0 ];\n  token.markup = String.fromCharCode(markerCharCode);\n\n  //\n  // Iterate list items\n  //\n\n  nextLine = startLine;\n  prevEmptyEnd = false;\n  terminatorRules = state.md.block.ruler.getRules('list');\n\n  oldParentType = state.parentType;\n  state.parentType = 'list';\n\n  while (nextLine < endLine) {\n    pos = posAfterMarker;\n    max = state.eMarks[nextLine];\n\n    initial = offset = state.sCount[nextLine] + posAfterMarker - (state.bMarks[startLine] + state.tShift[startLine]);\n\n    while (pos < max) {\n      ch = state.src.charCodeAt(pos);\n\n      if (ch === 0x09) {\n        offset += 4 - (offset + state.bsCount[nextLine]) % 4;\n      } else if (ch === 0x20) {\n        offset++;\n      } else {\n        break;\n      }\n\n      pos++;\n    }\n\n    contentStart = pos;\n\n    if (contentStart >= max) {\n      // trimming space in \"-    \\n  3\" case, indent is 1 here\n      indentAfterMarker = 1;\n    } else {\n      indentAfterMarker = offset - initial;\n    }\n\n    // If we have more than 4 spaces, the indent is 1\n    // (the rest is just indented code block)\n    if (indentAfterMarker > 4) { indentAfterMarker = 1; }\n\n    // \"  -  test\"\n    //  ^^^^^ - calculating total length of this thing\n    indent = initial + indentAfterMarker;\n\n    // Run subparser & write tokens\n    token        = state.push('list_item_open', 'li', 1);\n    token.markup = String.fromCharCode(markerCharCode);\n    token.map    = itemLines = [ startLine, 0 ];\n    if (isOrdered) {\n      token.info = state.src.slice(start, posAfterMarker - 1);\n    }\n\n    // change current state, then restore it after parser subcall\n    oldTight = state.tight;\n    oldTShift = state.tShift[startLine];\n    oldSCount = state.sCount[startLine];\n\n    //  - example list\n    // ^ listIndent position will be here\n    //   ^ blkIndent position will be here\n    //\n    oldListIndent = state.listIndent;\n    state.listIndent = state.blkIndent;\n    state.blkIndent = indent;\n\n    state.tight = true;\n    state.tShift[startLine] = contentStart - state.bMarks[startLine];\n    state.sCount[startLine] = offset;\n\n    if (contentStart >= max && state.isEmpty(startLine + 1)) {\n      // workaround for this case\n      // (list item is empty, list terminates before \"foo\"):\n      // ~~~~~~~~\n      //   -\n      //\n      //     foo\n      // ~~~~~~~~\n      state.line = Math.min(state.line + 2, endLine);\n    } else {\n      state.md.block.tokenize(state, startLine, endLine, true);\n    }\n\n    // If any of list item is tight, mark list as tight\n    if (!state.tight || prevEmptyEnd) {\n      tight = false;\n    }\n    // Item become loose if finish with empty line,\n    // but we should filter last element, because it means list finish\n    prevEmptyEnd = (state.line - startLine) > 1 && state.isEmpty(state.line - 1);\n\n    state.blkIndent = state.listIndent;\n    state.listIndent = oldListIndent;\n    state.tShift[startLine] = oldTShift;\n    state.sCount[startLine] = oldSCount;\n    state.tight = oldTight;\n\n    token        = state.push('list_item_close', 'li', -1);\n    token.markup = String.fromCharCode(markerCharCode);\n\n    nextLine = startLine = state.line;\n    itemLines[1] = nextLine;\n    contentStart = state.bMarks[startLine];\n\n    if (nextLine >= endLine) { break; }\n\n    //\n    // Try to check if list is terminated or continued.\n    //\n    if (state.sCount[nextLine] < state.blkIndent) { break; }\n\n    // if it's indented more than 3 spaces, it should be a code block\n    if (state.sCount[startLine] - state.blkIndent >= 4) { break; }\n\n    // fail if terminating block found\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n\n    // fail if list has another type\n    if (isOrdered) {\n      posAfterMarker = skipOrderedListMarker(state, nextLine);\n      if (posAfterMarker < 0) { break; }\n      start = state.bMarks[nextLine] + state.tShift[nextLine];\n    } else {\n      posAfterMarker = skipBulletListMarker(state, nextLine);\n      if (posAfterMarker < 0) { break; }\n    }\n\n    if (markerCharCode !== state.src.charCodeAt(posAfterMarker - 1)) { break; }\n  }\n\n  // Finalize list\n  if (isOrdered) {\n    token = state.push('ordered_list_close', 'ol', -1);\n  } else {\n    token = state.push('bullet_list_close', 'ul', -1);\n  }\n  token.markup = String.fromCharCode(markerCharCode);\n\n  listLines[1] = nextLine;\n  state.line = nextLine;\n\n  state.parentType = oldParentType;\n\n  // mark paragraphs tight if needed\n  if (tight) {\n    markTightParagraphs(state, listTokIdx);\n  }\n\n  return true;\n};\n","'use strict';\n\n\nvar normalizeReference   = require('../common/utils').normalizeReference;\nvar isSpace              = require('../common/utils').isSpace;\n\n\nmodule.exports = function reference(state, startLine, _endLine, silent) {\n  var ch,\n      destEndPos,\n      destEndLineNo,\n      endLine,\n      href,\n      i,\n      l,\n      label,\n      labelEnd,\n      oldParentType,\n      res,\n      start,\n      str,\n      terminate,\n      terminatorRules,\n      title,\n      lines = 0,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine],\n      nextLine = startLine + 1;\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  if (state.src.charCodeAt(pos) !== 0x5B/* [ */) { return false; }\n\n  // Simple check to quickly interrupt scan on [link](url) at the start of line.\n  // Can be useful on practice: https://github.com/markdown-it/markdown-it/issues/54\n  while (++pos < max) {\n    if (state.src.charCodeAt(pos) === 0x5D /* ] */ &&\n        state.src.charCodeAt(pos - 1) !== 0x5C/* \\ */) {\n      if (pos + 1 === max) { return false; }\n      if (state.src.charCodeAt(pos + 1) !== 0x3A/* : */) { return false; }\n      break;\n    }\n  }\n\n  endLine = state.lineMax;\n\n  // jump line-by-line until empty one or EOF\n  terminatorRules = state.md.block.ruler.getRules('reference');\n\n  oldParentType = state.parentType;\n  state.parentType = 'reference';\n\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue; }\n\n    // Some tags can terminate paragraph without empty line.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n  }\n\n  str = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n  max = str.length;\n\n  for (pos = 1; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n    if (ch === 0x5B /* [ */) {\n      return false;\n    } else if (ch === 0x5D /* ] */) {\n      labelEnd = pos;\n      break;\n    } else if (ch === 0x0A /* \\n */) {\n      lines++;\n    } else if (ch === 0x5C /* \\ */) {\n      pos++;\n      if (pos < max && str.charCodeAt(pos) === 0x0A) {\n        lines++;\n      }\n    }\n  }\n\n  if (labelEnd < 0 || str.charCodeAt(labelEnd + 1) !== 0x3A/* : */) { return false; }\n\n  // [label]:   destination   'title'\n  //         ^^^ skip optional whitespace here\n  for (pos = labelEnd + 2; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n    if (ch === 0x0A) {\n      lines++;\n    } else if (isSpace(ch)) {\n      /*eslint no-empty:0*/\n    } else {\n      break;\n    }\n  }\n\n  // [label]:   destination   'title'\n  //            ^^^^^^^^^^^ parse this\n  res = state.md.helpers.parseLinkDestination(str, pos, max);\n  if (!res.ok) { return false; }\n\n  href = state.md.normalizeLink(res.str);\n  if (!state.md.validateLink(href)) { return false; }\n\n  pos = res.pos;\n  lines += res.lines;\n\n  // save cursor state, we could require to rollback later\n  destEndPos = pos;\n  destEndLineNo = lines;\n\n  // [label]:   destination   'title'\n  //                       ^^^ skipping those spaces\n  start = pos;\n  for (; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n    if (ch === 0x0A) {\n      lines++;\n    } else if (isSpace(ch)) {\n      /*eslint no-empty:0*/\n    } else {\n      break;\n    }\n  }\n\n  // [label]:   destination   'title'\n  //                          ^^^^^^^ parse this\n  res = state.md.helpers.parseLinkTitle(str, pos, max);\n  if (pos < max && start !== pos && res.ok) {\n    title = res.str;\n    pos = res.pos;\n    lines += res.lines;\n  } else {\n    title = '';\n    pos = destEndPos;\n    lines = destEndLineNo;\n  }\n\n  // skip trailing spaces until the rest of the line\n  while (pos < max) {\n    ch = str.charCodeAt(pos);\n    if (!isSpace(ch)) { break; }\n    pos++;\n  }\n\n  if (pos < max && str.charCodeAt(pos) !== 0x0A) {\n    if (title) {\n      // garbage at the end of the line after title,\n      // but it could still be a valid reference if we roll back\n      title = '';\n      pos = destEndPos;\n      lines = destEndLineNo;\n      while (pos < max) {\n        ch = str.charCodeAt(pos);\n        if (!isSpace(ch)) { break; }\n        pos++;\n      }\n    }\n  }\n\n  if (pos < max && str.charCodeAt(pos) !== 0x0A) {\n    // garbage at the end of the line\n    return false;\n  }\n\n  label = normalizeReference(str.slice(1, labelEnd));\n  if (!label) {\n    // CommonMark 0.20 disallows empty labels\n    return false;\n  }\n\n  // Reference can not terminate anything. This check is for safety only.\n  /*istanbul ignore if*/\n  if (silent) { return true; }\n\n  if (typeof state.env.references === 'undefined') {\n    state.env.references = {};\n  }\n  if (typeof state.env.references[label] === 'undefined') {\n    state.env.references[label] = { title: title, href: href };\n  }\n\n  state.parentType = oldParentType;\n\n  state.line = startLine + lines + 1;\n  return true;\n};\n","// Regexps to match html elements\n\n'use strict';\n\nvar attr_name     = '[a-zA-Z_:][a-zA-Z0-9:._-]*';\n\nvar unquoted      = '[^\"\\'=<>`\\\\x00-\\\\x20]+';\nvar single_quoted = \"'[^']*'\";\nvar double_quoted = '\"[^\"]*\"';\n\nvar attr_value  = '(?:' + unquoted + '|' + single_quoted + '|' + double_quoted + ')';\n\nvar attribute   = '(?:\\\\s+' + attr_name + '(?:\\\\s*=\\\\s*' + attr_value + ')?)';\n\nvar open_tag    = '<[A-Za-z][A-Za-z0-9\\\\-]*' + attribute + '*\\\\s*\\\\/?>';\n\nvar close_tag   = '<\\\\/[A-Za-z][A-Za-z0-9\\\\-]*\\\\s*>';\nvar comment     = '<!---->|<!--(?:-?[^>-])(?:-?[^-])*-->';\nvar processing  = '<[?][\\\\s\\\\S]*?[?]>';\nvar declaration = '<![A-Z]+\\\\s+[^>]*>';\nvar cdata       = '<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>';\n\nvar HTML_TAG_RE = new RegExp('^(?:' + open_tag + '|' + close_tag + '|' + comment +\n                        '|' + processing + '|' + declaration + '|' + cdata + ')');\nvar HTML_OPEN_CLOSE_TAG_RE = new RegExp('^(?:' + open_tag + '|' + close_tag + ')');\n\nmodule.exports.HTML_TAG_RE = HTML_TAG_RE;\nmodule.exports.HTML_OPEN_CLOSE_TAG_RE = HTML_OPEN_CLOSE_TAG_RE;\n","// HTML block\n\n'use strict';\n\n\nvar block_names = require('../common/html_blocks');\nvar HTML_OPEN_CLOSE_TAG_RE = require('../common/html_re').HTML_OPEN_CLOSE_TAG_RE;\n\n// An array of opening and corresponding closing sequences for html tags,\n// last argument defines whether it can terminate a paragraph or not\n//\nvar HTML_SEQUENCES = [\n  [ /^<(script|pre|style|textarea)(?=(\\s|>|$))/i, /<\\/(script|pre|style|textarea)>/i, true ],\n  [ /^<!--/,        /-->/,   true ],\n  [ /^<\\?/,         /\\?>/,   true ],\n  [ /^<![A-Z]/,     />/,     true ],\n  [ /^<!\\[CDATA\\[/, /\\]\\]>/, true ],\n  [ new RegExp('^</?(' + block_names.join('|') + ')(?=(\\\\s|/?>|$))', 'i'), /^$/, true ],\n  [ new RegExp(HTML_OPEN_CLOSE_TAG_RE.source + '\\\\s*$'),  /^$/, false ]\n];\n\n\nmodule.exports = function html_block(state, startLine, endLine, silent) {\n  var i, nextLine, token, lineText,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  if (!state.md.options.html) { return false; }\n\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */) { return false; }\n\n  lineText = state.src.slice(pos, max);\n\n  for (i = 0; i < HTML_SEQUENCES.length; i++) {\n    if (HTML_SEQUENCES[i][0].test(lineText)) { break; }\n  }\n\n  if (i === HTML_SEQUENCES.length) { return false; }\n\n  if (silent) {\n    // true if this sequence can be a terminator, false otherwise\n    return HTML_SEQUENCES[i][2];\n  }\n\n  nextLine = startLine + 1;\n\n  // If we are here - we detected HTML block.\n  // Let's roll down till block end.\n  if (!HTML_SEQUENCES[i][1].test(lineText)) {\n    for (; nextLine < endLine; nextLine++) {\n      if (state.sCount[nextLine] < state.blkIndent) { break; }\n\n      pos = state.bMarks[nextLine] + state.tShift[nextLine];\n      max = state.eMarks[nextLine];\n      lineText = state.src.slice(pos, max);\n\n      if (HTML_SEQUENCES[i][1].test(lineText)) {\n        if (lineText.length !== 0) { nextLine++; }\n        break;\n      }\n    }\n  }\n\n  state.line = nextLine;\n\n  token         = state.push('html_block', '', 0);\n  token.map     = [ startLine, nextLine ];\n  token.content = state.getLines(startLine, nextLine, state.blkIndent, true);\n\n  return true;\n};\n","// List of valid html blocks names, accorting to commonmark spec\n// http://jgm.github.io/CommonMark/spec.html#html-blocks\n\n'use strict';\n\n\nmodule.exports = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'section',\n  'source',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n];\n","// heading (#, ##, ...)\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function heading(state, startLine, endLine, silent) {\n  var ch, level, tmp, token,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  ch  = state.src.charCodeAt(pos);\n\n  if (ch !== 0x23/* # */ || pos >= max) { return false; }\n\n  // count heading level\n  level = 1;\n  ch = state.src.charCodeAt(++pos);\n  while (ch === 0x23/* # */ && pos < max && level <= 6) {\n    level++;\n    ch = state.src.charCodeAt(++pos);\n  }\n\n  if (level > 6 || (pos < max && !isSpace(ch))) { return false; }\n\n  if (silent) { return true; }\n\n  // Let's cut tails like '    ###  ' from the end of string\n\n  max = state.skipSpacesBack(max, pos);\n  tmp = state.skipCharsBack(max, 0x23, pos); // #\n  if (tmp > pos && isSpace(state.src.charCodeAt(tmp - 1))) {\n    max = tmp;\n  }\n\n  state.line = startLine + 1;\n\n  token        = state.push('heading_open', 'h' + String(level), 1);\n  token.markup = '########'.slice(0, level);\n  token.map    = [ startLine, state.line ];\n\n  token          = state.push('inline', '', 0);\n  token.content  = state.src.slice(pos, max).trim();\n  token.map      = [ startLine, state.line ];\n  token.children = [];\n\n  token        = state.push('heading_close', 'h' + String(level), -1);\n  token.markup = '########'.slice(0, level);\n\n  return true;\n};\n","// Parser state class\n\n'use strict';\n\nvar Token = require('../token');\nvar isSpace = require('../common/utils').isSpace;\n\n\nfunction StateBlock(src, md, env, tokens) {\n  var ch, s, start, pos, len, indent, offset, indent_found;\n\n  this.src = src;\n\n  // link to parser instance\n  this.md     = md;\n\n  this.env = env;\n\n  //\n  // Internal state vartiables\n  //\n\n  this.tokens = tokens;\n\n  this.bMarks = [];  // line begin offsets for fast jumps\n  this.eMarks = [];  // line end offsets for fast jumps\n  this.tShift = [];  // offsets of the first non-space characters (tabs not expanded)\n  this.sCount = [];  // indents for each line (tabs expanded)\n\n  // An amount of virtual spaces (tabs expanded) between beginning\n  // of each line (bMarks) and real beginning of that line.\n  //\n  // It exists only as a hack because blockquotes override bMarks\n  // losing information in the process.\n  //\n  // It's used only when expanding tabs, you can think about it as\n  // an initial tab length, e.g. bsCount=21 applied to string `\\t123`\n  // means first tab should be expanded to 4-21%4 === 3 spaces.\n  //\n  this.bsCount = [];\n\n  // block parser variables\n  this.blkIndent  = 0; // required block content indent (for example, if we are\n                       // inside a list, it would be positioned after list marker)\n  this.line       = 0; // line index in src\n  this.lineMax    = 0; // lines count\n  this.tight      = false;  // loose/tight mode for lists\n  this.ddIndent   = -1; // indent of the current dd block (-1 if there isn't any)\n  this.listIndent = -1; // indent of the current list block (-1 if there isn't any)\n\n  // can be 'blockquote', 'list', 'root', 'paragraph' or 'reference'\n  // used in lists to determine if they interrupt a paragraph\n  this.parentType = 'root';\n\n  this.level = 0;\n\n  // renderer\n  this.result = '';\n\n  // Create caches\n  // Generate markers.\n  s = this.src;\n  indent_found = false;\n\n  for (start = pos = indent = offset = 0, len = s.length; pos < len; pos++) {\n    ch = s.charCodeAt(pos);\n\n    if (!indent_found) {\n      if (isSpace(ch)) {\n        indent++;\n\n        if (ch === 0x09) {\n          offset += 4 - offset % 4;\n        } else {\n          offset++;\n        }\n        continue;\n      } else {\n        indent_found = true;\n      }\n    }\n\n    if (ch === 0x0A || pos === len - 1) {\n      if (ch !== 0x0A) { pos++; }\n      this.bMarks.push(start);\n      this.eMarks.push(pos);\n      this.tShift.push(indent);\n      this.sCount.push(offset);\n      this.bsCount.push(0);\n\n      indent_found = false;\n      indent = 0;\n      offset = 0;\n      start = pos + 1;\n    }\n  }\n\n  // Push fake entry to simplify cache bounds checks\n  this.bMarks.push(s.length);\n  this.eMarks.push(s.length);\n  this.tShift.push(0);\n  this.sCount.push(0);\n  this.bsCount.push(0);\n\n  this.lineMax = this.bMarks.length - 1; // don't count last fake line\n}\n\n// Push new token to \"stream\".\n//\nStateBlock.prototype.push = function (type, tag, nesting) {\n  var token = new Token(type, tag, nesting);\n  token.block = true;\n\n  if (nesting < 0) this.level--; // closing tag\n  token.level = this.level;\n  if (nesting > 0) this.level++; // opening tag\n\n  this.tokens.push(token);\n  return token;\n};\n\nStateBlock.prototype.isEmpty = function isEmpty(line) {\n  return this.bMarks[line] + this.tShift[line] >= this.eMarks[line];\n};\n\nStateBlock.prototype.skipEmptyLines = function skipEmptyLines(from) {\n  for (var max = this.lineMax; from < max; from++) {\n    if (this.bMarks[from] + this.tShift[from] < this.eMarks[from]) {\n      break;\n    }\n  }\n  return from;\n};\n\n// Skip spaces from given position.\nStateBlock.prototype.skipSpaces = function skipSpaces(pos) {\n  var ch;\n\n  for (var max = this.src.length; pos < max; pos++) {\n    ch = this.src.charCodeAt(pos);\n    if (!isSpace(ch)) { break; }\n  }\n  return pos;\n};\n\n// Skip spaces from given position in reverse.\nStateBlock.prototype.skipSpacesBack = function skipSpacesBack(pos, min) {\n  if (pos <= min) { return pos; }\n\n  while (pos > min) {\n    if (!isSpace(this.src.charCodeAt(--pos))) { return pos + 1; }\n  }\n  return pos;\n};\n\n// Skip char codes from given position\nStateBlock.prototype.skipChars = function skipChars(pos, code) {\n  for (var max = this.src.length; pos < max; pos++) {\n    if (this.src.charCodeAt(pos) !== code) { break; }\n  }\n  return pos;\n};\n\n// Skip char codes reverse from given position - 1\nStateBlock.prototype.skipCharsBack = function skipCharsBack(pos, code, min) {\n  if (pos <= min) { return pos; }\n\n  while (pos > min) {\n    if (code !== this.src.charCodeAt(--pos)) { return pos + 1; }\n  }\n  return pos;\n};\n\n// cut lines range from source.\nStateBlock.prototype.getLines = function getLines(begin, end, indent, keepLastLF) {\n  var i, lineIndent, ch, first, last, queue, lineStart,\n      line = begin;\n\n  if (begin >= end) {\n    return '';\n  }\n\n  queue = new Array(end - begin);\n\n  for (i = 0; line < end; line++, i++) {\n    lineIndent = 0;\n    lineStart = first = this.bMarks[line];\n\n    if (line + 1 < end || keepLastLF) {\n      // No need for bounds check because we have fake entry on tail.\n      last = this.eMarks[line] + 1;\n    } else {\n      last = this.eMarks[line];\n    }\n\n    while (first < last && lineIndent < indent) {\n      ch = this.src.charCodeAt(first);\n\n      if (isSpace(ch)) {\n        if (ch === 0x09) {\n          lineIndent += 4 - (lineIndent + this.bsCount[line]) % 4;\n        } else {\n          lineIndent++;\n        }\n      } else if (first - lineStart < this.tShift[line]) {\n        // patched tShift masked characters to look like spaces (blockquotes, list markers)\n        lineIndent++;\n      } else {\n        break;\n      }\n\n      first++;\n    }\n\n    if (lineIndent > indent) {\n      // partially expanding tabs in code blocks, e.g '\\t\\tfoobar'\n      // with indent=2 becomes '  \\tfoobar'\n      queue[i] = new Array(lineIndent - indent + 1).join(' ') + this.src.slice(first, last);\n    } else {\n      queue[i] = this.src.slice(first, last);\n    }\n  }\n\n  return queue.join('');\n};\n\n// re-export Token class to use in block rules\nStateBlock.prototype.Token = Token;\n\n\nmodule.exports = StateBlock;\n","/** internal\n * class ParserBlock\n *\n * Block-level tokenizer.\n **/\n'use strict';\n\n\nvar Ruler           = require('./ruler');\n\n\nvar _rules = [\n  // First 2 params - rule name & source. Secondary array - list of rules,\n  // which can be terminated by this one.\n  [ 'table',      require('./rules_block/table'),      [ 'paragraph', 'reference' ] ],\n  [ 'code',       require('./rules_block/code') ],\n  [ 'fence',      require('./rules_block/fence'),      [ 'paragraph', 'reference', 'blockquote', 'list' ] ],\n  [ 'blockquote', require('./rules_block/blockquote'), [ 'paragraph', 'reference', 'blockquote', 'list' ] ],\n  [ 'hr',         require('./rules_block/hr'),         [ 'paragraph', 'reference', 'blockquote', 'list' ] ],\n  [ 'list',       require('./rules_block/list'),       [ 'paragraph', 'reference', 'blockquote' ] ],\n  [ 'reference',  require('./rules_block/reference') ],\n  [ 'html_block', require('./rules_block/html_block'), [ 'paragraph', 'reference', 'blockquote' ] ],\n  [ 'heading',    require('./rules_block/heading'),    [ 'paragraph', 'reference', 'blockquote' ] ],\n  [ 'lheading',   require('./rules_block/lheading') ],\n  [ 'paragraph',  require('./rules_block/paragraph') ]\n];\n\n\n/**\n * new ParserBlock()\n **/\nfunction ParserBlock() {\n  /**\n   * ParserBlock#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of block rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (var i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1], { alt: (_rules[i][2] || []).slice() });\n  }\n}\n\n\n// Generate tokens for input range\n//\nParserBlock.prototype.tokenize = function (state, startLine, endLine) {\n  var ok, i,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      line = startLine,\n      hasEmptyLines = false,\n      maxNesting = state.md.options.maxNesting;\n\n  while (line < endLine) {\n    state.line = line = state.skipEmptyLines(line);\n    if (line >= endLine) { break; }\n\n    // Termination condition for nested calls.\n    // Nested calls currently used for blockquotes & lists\n    if (state.sCount[line] < state.blkIndent) { break; }\n\n    // If nesting level exceeded - skip tail to the end. That's not ordinary\n    // situation and we should not care about content.\n    if (state.level >= maxNesting) {\n      state.line = endLine;\n      break;\n    }\n\n    // Try all possible rules.\n    // On success, rule should:\n    //\n    // - update `state.line`\n    // - update `state.tokens`\n    // - return true\n\n    for (i = 0; i < len; i++) {\n      ok = rules[i](state, line, endLine, false);\n      if (ok) { break; }\n    }\n\n    // set state.tight if we had an empty line before current tag\n    // i.e. latest empty line should not count\n    state.tight = !hasEmptyLines;\n\n    // paragraph might \"eat\" one newline after it in nested lists\n    if (state.isEmpty(state.line - 1)) {\n      hasEmptyLines = true;\n    }\n\n    line = state.line;\n\n    if (line < endLine && state.isEmpty(line)) {\n      hasEmptyLines = true;\n      line++;\n      state.line = line;\n    }\n  }\n};\n\n\n/**\n * ParserBlock.parse(str, md, env, outTokens)\n *\n * Process input string and push block tokens into `outTokens`\n **/\nParserBlock.prototype.parse = function (src, md, env, outTokens) {\n  var state;\n\n  if (!src) { return; }\n\n  state = new this.State(src, md, env, outTokens);\n\n  this.tokenize(state, state.line, state.lineMax);\n};\n\n\nParserBlock.prototype.State = require('./rules_block/state_block');\n\n\nmodule.exports = ParserBlock;\n","// Code block (4 spaces padded)\n\n'use strict';\n\n\nmodule.exports = function code(state, startLine, endLine/*, silent*/) {\n  var nextLine, last, token;\n\n  if (state.sCount[startLine] - state.blkIndent < 4) { return false; }\n\n  last = nextLine = startLine + 1;\n\n  while (nextLine < endLine) {\n    if (state.isEmpty(nextLine)) {\n      nextLine++;\n      continue;\n    }\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      nextLine++;\n      last = nextLine;\n      continue;\n    }\n    break;\n  }\n\n  state.line = last;\n\n  token         = state.push('code_block', 'code', 0);\n  token.content = state.getLines(startLine, last, 4 + state.blkIndent, false) + '\\n';\n  token.map     = [ startLine, state.line ];\n\n  return true;\n};\n","// fences (``` lang, ~~~ lang)\n\n'use strict';\n\n\nmodule.exports = function fence(state, startLine, endLine, silent) {\n  var marker, len, params, nextLine, mem, token, markup,\n      haveEndMarker = false,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  if (pos + 3 > max) { return false; }\n\n  marker = state.src.charCodeAt(pos);\n\n  if (marker !== 0x7E/* ~ */ && marker !== 0x60 /* ` */) {\n    return false;\n  }\n\n  // scan marker length\n  mem = pos;\n  pos = state.skipChars(pos, marker);\n\n  len = pos - mem;\n\n  if (len < 3) { return false; }\n\n  markup = state.src.slice(mem, pos);\n  params = state.src.slice(pos, max);\n\n  if (marker === 0x60 /* ` */) {\n    if (params.indexOf(String.fromCharCode(marker)) >= 0) {\n      return false;\n    }\n  }\n\n  // Since start is found, we can report success here in validation mode\n  if (silent) { return true; }\n\n  // search end of block\n  nextLine = startLine;\n\n  for (;;) {\n    nextLine++;\n    if (nextLine >= endLine) {\n      // unclosed block should be autoclosed by end of document.\n      // also block seems to be autoclosed by end of parent\n      break;\n    }\n\n    pos = mem = state.bMarks[nextLine] + state.tShift[nextLine];\n    max = state.eMarks[nextLine];\n\n    if (pos < max && state.sCount[nextLine] < state.blkIndent) {\n      // non-empty line with negative indent should stop the list:\n      // - ```\n      //  test\n      break;\n    }\n\n    if (state.src.charCodeAt(pos) !== marker) { continue; }\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      // closing fence should be indented less than 4 spaces\n      continue;\n    }\n\n    pos = state.skipChars(pos, marker);\n\n    // closing code fence must be at least as long as the opening one\n    if (pos - mem < len) { continue; }\n\n    // make sure tail has spaces only\n    pos = state.skipSpaces(pos);\n\n    if (pos < max) { continue; }\n\n    haveEndMarker = true;\n    // found!\n    break;\n  }\n\n  // If a fence has heading spaces, they should be removed from its inner block\n  len = state.sCount[startLine];\n\n  state.line = nextLine + (haveEndMarker ? 1 : 0);\n\n  token         = state.push('fence', 'code', 0);\n  token.info    = params;\n  token.content = state.getLines(startLine + 1, nextLine, len, true);\n  token.markup  = markup;\n  token.map     = [ startLine, state.line ];\n\n  return true;\n};\n","// lheading (---, ===)\n\n'use strict';\n\n\nmodule.exports = function lheading(state, startLine, endLine/*, silent*/) {\n  var content, terminate, i, l, token, pos, max, level, marker,\n      nextLine = startLine + 1, oldParentType,\n      terminatorRules = state.md.block.ruler.getRules('paragraph');\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  oldParentType = state.parentType;\n  state.parentType = 'paragraph'; // use paragraph to match terminatorRules\n\n  // jump line-by-line until empty one or EOF\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }\n\n    //\n    // Check for underline in setext header\n    //\n    if (state.sCount[nextLine] >= state.blkIndent) {\n      pos = state.bMarks[nextLine] + state.tShift[nextLine];\n      max = state.eMarks[nextLine];\n\n      if (pos < max) {\n        marker = state.src.charCodeAt(pos);\n\n        if (marker === 0x2D/* - */ || marker === 0x3D/* = */) {\n          pos = state.skipChars(pos, marker);\n          pos = state.skipSpaces(pos);\n\n          if (pos >= max) {\n            level = (marker === 0x3D/* = */ ? 1 : 2);\n            break;\n          }\n        }\n      }\n    }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue; }\n\n    // Some tags can terminate paragraph without empty line.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n  }\n\n  if (!level) {\n    // Didn't find valid underline\n    return false;\n  }\n\n  content = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n\n  state.line = nextLine + 1;\n\n  token          = state.push('heading_open', 'h' + String(level), 1);\n  token.markup   = String.fromCharCode(marker);\n  token.map      = [ startLine, state.line ];\n\n  token          = state.push('inline', '', 0);\n  token.content  = content;\n  token.map      = [ startLine, state.line - 1 ];\n  token.children = [];\n\n  token          = state.push('heading_close', 'h' + String(level), -1);\n  token.markup   = String.fromCharCode(marker);\n\n  state.parentType = oldParentType;\n\n  return true;\n};\n","// Paragraph\n\n'use strict';\n\n\nmodule.exports = function paragraph(state, startLine/*, endLine*/) {\n  var content, terminate, i, l, token, oldParentType,\n      nextLine = startLine + 1,\n      terminatorRules = state.md.block.ruler.getRules('paragraph'),\n      endLine = state.lineMax;\n\n  oldParentType = state.parentType;\n  state.parentType = 'paragraph';\n\n  // jump line-by-line until empty one or EOF\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue; }\n\n    // Some tags can terminate paragraph without empty line.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n  }\n\n  content = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n\n  state.line = nextLine;\n\n  token          = state.push('paragraph_open', 'p', 1);\n  token.map      = [ startLine, state.line ];\n\n  token          = state.push('inline', '', 0);\n  token.content  = content;\n  token.map      = [ startLine, state.line ];\n  token.children = [];\n\n  token          = state.push('paragraph_close', 'p', -1);\n\n  state.parentType = oldParentType;\n\n  return true;\n};\n","// Skip text characters for text token, place those to pending buffer\n// and increment current pos\n\n'use strict';\n\n\n// Rule to skip pure text\n// '{}$%@~+=:' reserved for extentions\n\n// !, \", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \\, ], ^, _, `, {, |, }, or ~\n\n// !!!! Don't confuse with \"Markdown ASCII Punctuation\" chars\n// http://spec.commonmark.org/0.15/#ascii-punctuation-character\nfunction isTerminatorChar(ch) {\n  switch (ch) {\n    case 0x0A/* \\n */:\n    case 0x21/* ! */:\n    case 0x23/* # */:\n    case 0x24/* $ */:\n    case 0x25/* % */:\n    case 0x26/* & */:\n    case 0x2A/* * */:\n    case 0x2B/* + */:\n    case 0x2D/* - */:\n    case 0x3A/* : */:\n    case 0x3C/* < */:\n    case 0x3D/* = */:\n    case 0x3E/* > */:\n    case 0x40/* @ */:\n    case 0x5B/* [ */:\n    case 0x5C/* \\ */:\n    case 0x5D/* ] */:\n    case 0x5E/* ^ */:\n    case 0x5F/* _ */:\n    case 0x60/* ` */:\n    case 0x7B/* { */:\n    case 0x7D/* } */:\n    case 0x7E/* ~ */:\n      return true;\n    default:\n      return false;\n  }\n}\n\nmodule.exports = function text(state, silent) {\n  var pos = state.pos;\n\n  while (pos < state.posMax && !isTerminatorChar(state.src.charCodeAt(pos))) {\n    pos++;\n  }\n\n  if (pos === state.pos) { return false; }\n\n  if (!silent) { state.pending += state.src.slice(state.pos, pos); }\n\n  state.pos = pos;\n\n  return true;\n};\n\n// Alternative implementation, for memory.\n//\n// It costs 10% of performance, but allows extend terminators list, if place it\n// to `ParcerInline` property. Probably, will switch to it sometime, such\n// flexibility required.\n\n/*\nvar TERMINATOR_RE = /[\\n!#$%&*+\\-:<=>@[\\\\\\]^_`{}~]/;\n\nmodule.exports = function text(state, silent) {\n  var pos = state.pos,\n      idx = state.src.slice(pos).search(TERMINATOR_RE);\n\n  // first char is terminator -> empty text\n  if (idx === 0) { return false; }\n\n  // no terminator -> text till end of string\n  if (idx < 0) {\n    if (!silent) { state.pending += state.src.slice(pos); }\n    state.pos = state.src.length;\n    return true;\n  }\n\n  if (!silent) { state.pending += state.src.slice(pos, pos + idx); }\n\n  state.pos += idx;\n\n  return true;\n};*/\n","// Process escaped chars and hardbreaks\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\nvar ESCAPED = [];\n\nfor (var i = 0; i < 256; i++) { ESCAPED.push(0); }\n\n'\\\\!\"#$%&\\'()*+,./:;<=>?@[]^_`{|}~-'\n  .split('').forEach(function (ch) { ESCAPED[ch.charCodeAt(0)] = 1; });\n\n\nmodule.exports = function escape(state, silent) {\n  var ch1, ch2, origStr, escapedStr, token, pos = state.pos, max = state.posMax;\n\n  if (state.src.charCodeAt(pos) !== 0x5C/* \\ */) return false;\n  pos++;\n\n  // '\\' at the end of the inline block\n  if (pos >= max) return false;\n\n  ch1 = state.src.charCodeAt(pos);\n\n  if (ch1 === 0x0A) {\n    if (!silent) {\n      state.push('hardbreak', 'br', 0);\n    }\n\n    pos++;\n    // skip leading whitespaces from next line\n    while (pos < max) {\n      ch1 = state.src.charCodeAt(pos);\n      if (!isSpace(ch1)) break;\n      pos++;\n    }\n\n    state.pos = pos;\n    return true;\n  }\n\n  escapedStr = state.src[pos];\n\n  if (ch1 >= 0xD800 && ch1 <= 0xDBFF && pos + 1 < max) {\n    ch2 = state.src.charCodeAt(pos + 1);\n\n    if (ch2 >= 0xDC00 && ch2 <= 0xDFFF) {\n      escapedStr += state.src[pos + 1];\n      pos++;\n    }\n  }\n\n  origStr = '\\\\' + escapedStr;\n\n  if (!silent) {\n    token = state.push('text_special', '', 0);\n\n    if (ch1 < 256 && ESCAPED[ch1] !== 0) {\n      token.content = escapedStr;\n    } else {\n      token.content = origStr;\n    }\n\n    token.markup = origStr;\n    token.info   = 'escape';\n  }\n\n  state.pos = pos + 1;\n  return true;\n};\n","// Process links like https://example.org/\n\n'use strict';\n\n\n// RFC3986: scheme = ALPHA *( ALPHA / DIGIT / \"+\" / \"-\" / \".\" )\nvar SCHEME_RE = /(?:^|[^a-z0-9.+-])([a-z][a-z0-9.+-]*)$/i;\n\n\nmodule.exports = function linkify(state, silent) {\n  var pos, max, match, proto, link, url, fullUrl, token;\n\n  if (!state.md.options.linkify) return false;\n  if (state.linkLevel > 0) return false;\n\n  pos = state.pos;\n  max = state.posMax;\n\n  if (pos + 3 > max) return false;\n  if (state.src.charCodeAt(pos) !== 0x3A/* : */) return false;\n  if (state.src.charCodeAt(pos + 1) !== 0x2F/* / */) return false;\n  if (state.src.charCodeAt(pos + 2) !== 0x2F/* / */) return false;\n\n  match = state.pending.match(SCHEME_RE);\n  if (!match) return false;\n\n  proto = match[1];\n\n  link = state.md.linkify.matchAtStart(state.src.slice(pos - proto.length));\n  if (!link) return false;\n\n  url = link.url;\n\n  // disallow '*' at the end of the link (conflicts with emphasis)\n  url = url.replace(/\\*+$/, '');\n\n  fullUrl = state.md.normalizeLink(url);\n  if (!state.md.validateLink(fullUrl)) return false;\n\n  if (!silent) {\n    state.pending = state.pending.slice(0, -proto.length);\n\n    token         = state.push('link_open', 'a', 1);\n    token.attrs   = [ [ 'href', fullUrl ] ];\n    token.markup  = 'linkify';\n    token.info    = 'auto';\n\n    token         = state.push('text', '', 0);\n    token.content = state.md.normalizeLinkText(url);\n\n    token         = state.push('link_close', 'a', -1);\n    token.markup  = 'linkify';\n    token.info    = 'auto';\n  }\n\n  state.pos += url.length - proto.length;\n  return true;\n};\n","// Proceess '\\n'\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function newline(state, silent) {\n  var pmax, max, ws, pos = state.pos;\n\n  if (state.src.charCodeAt(pos) !== 0x0A/* \\n */) { return false; }\n\n  pmax = state.pending.length - 1;\n  max = state.posMax;\n\n  // '  \\n' -> hardbreak\n  // Lookup in pending chars is bad practice! Don't copy to other rules!\n  // Pending string is stored in concat mode, indexed lookups will cause\n  // convertion to flat mode.\n  if (!silent) {\n    if (pmax >= 0 && state.pending.charCodeAt(pmax) === 0x20) {\n      if (pmax >= 1 && state.pending.charCodeAt(pmax - 1) === 0x20) {\n        // Find whitespaces tail of pending chars.\n        ws = pmax - 1;\n        while (ws >= 1 && state.pending.charCodeAt(ws - 1) === 0x20) ws--;\n\n        state.pending = state.pending.slice(0, ws);\n        state.push('hardbreak', 'br', 0);\n      } else {\n        state.pending = state.pending.slice(0, -1);\n        state.push('softbreak', 'br', 0);\n      }\n\n    } else {\n      state.push('softbreak', 'br', 0);\n    }\n  }\n\n  pos++;\n\n  // skip heading spaces for next line\n  while (pos < max && isSpace(state.src.charCodeAt(pos))) { pos++; }\n\n  state.pos = pos;\n  return true;\n};\n","// ~~strike through~~\n//\n'use strict';\n\n\n// Insert each marker as a separate text token, and add it to delimiter list\n//\nmodule.exports.tokenize = function strikethrough(state, silent) {\n  var i, scanned, token, len, ch,\n      start = state.pos,\n      marker = state.src.charCodeAt(start);\n\n  if (silent) { return false; }\n\n  if (marker !== 0x7E/* ~ */) { return false; }\n\n  scanned = state.scanDelims(state.pos, true);\n  len = scanned.length;\n  ch = String.fromCharCode(marker);\n\n  if (len < 2) { return false; }\n\n  if (len % 2) {\n    token         = state.push('text', '', 0);\n    token.content = ch;\n    len--;\n  }\n\n  for (i = 0; i < len; i += 2) {\n    token         = state.push('text', '', 0);\n    token.content = ch + ch;\n\n    state.delimiters.push({\n      marker: marker,\n      length: 0,     // disable \"rule of 3\" length checks meant for emphasis\n      token:  state.tokens.length - 1,\n      end:    -1,\n      open:   scanned.can_open,\n      close:  scanned.can_close\n    });\n  }\n\n  state.pos += scanned.length;\n\n  return true;\n};\n\n\nfunction postProcess(state, delimiters) {\n  var i, j,\n      startDelim,\n      endDelim,\n      token,\n      loneMarkers = [],\n      max = delimiters.length;\n\n  for (i = 0; i < max; i++) {\n    startDelim = delimiters[i];\n\n    if (startDelim.marker !== 0x7E/* ~ */) {\n      continue;\n    }\n\n    if (startDelim.end === -1) {\n      continue;\n    }\n\n    endDelim = delimiters[startDelim.end];\n\n    token         = state.tokens[startDelim.token];\n    token.type    = 's_open';\n    token.tag     = 's';\n    token.nesting = 1;\n    token.markup  = '~~';\n    token.content = '';\n\n    token         = state.tokens[endDelim.token];\n    token.type    = 's_close';\n    token.tag     = 's';\n    token.nesting = -1;\n    token.markup  = '~~';\n    token.content = '';\n\n    if (state.tokens[endDelim.token - 1].type === 'text' &&\n        state.tokens[endDelim.token - 1].content === '~') {\n\n      loneMarkers.push(endDelim.token - 1);\n    }\n  }\n\n  // If a marker sequence has an odd number of characters, it's splitted\n  // like this: `~~~~~` -> `~` + `~~` + `~~`, leaving one marker at the\n  // start of the sequence.\n  //\n  // So, we have to move all those markers after subsequent s_close tags.\n  //\n  while (loneMarkers.length) {\n    i = loneMarkers.pop();\n    j = i + 1;\n\n    while (j < state.tokens.length && state.tokens[j].type === 's_close') {\n      j++;\n    }\n\n    j--;\n\n    if (i !== j) {\n      token = state.tokens[j];\n      state.tokens[j] = state.tokens[i];\n      state.tokens[i] = token;\n    }\n  }\n}\n\n\n// Walk through delimiter list and replace text tokens with tags\n//\nmodule.exports.postProcess = function strikethrough(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n\n  postProcess(state, state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      postProcess(state, tokens_meta[curr].delimiters);\n    }\n  }\n};\n","// Process *this* and _that_\n//\n'use strict';\n\n\n// Insert each marker as a separate text token, and add it to delimiter list\n//\nmodule.exports.tokenize = function emphasis(state, silent) {\n  var i, scanned, token,\n      start = state.pos,\n      marker = state.src.charCodeAt(start);\n\n  if (silent) { return false; }\n\n  if (marker !== 0x5F /* _ */ && marker !== 0x2A /* * */) { return false; }\n\n  scanned = state.scanDelims(state.pos, marker === 0x2A);\n\n  for (i = 0; i < scanned.length; i++) {\n    token         = state.push('text', '', 0);\n    token.content = String.fromCharCode(marker);\n\n    state.delimiters.push({\n      // Char code of the starting marker (number).\n      //\n      marker: marker,\n\n      // Total length of these series of delimiters.\n      //\n      length: scanned.length,\n\n      // A position of the token this delimiter corresponds to.\n      //\n      token:  state.tokens.length - 1,\n\n      // If this delimiter is matched as a valid opener, `end` will be\n      // equal to its position, otherwise it's `-1`.\n      //\n      end:    -1,\n\n      // Boolean flags that determine if this delimiter could open or close\n      // an emphasis.\n      //\n      open:   scanned.can_open,\n      close:  scanned.can_close\n    });\n  }\n\n  state.pos += scanned.length;\n\n  return true;\n};\n\n\nfunction postProcess(state, delimiters) {\n  var i,\n      startDelim,\n      endDelim,\n      token,\n      ch,\n      isStrong,\n      max = delimiters.length;\n\n  for (i = max - 1; i >= 0; i--) {\n    startDelim = delimiters[i];\n\n    if (startDelim.marker !== 0x5F/* _ */ && startDelim.marker !== 0x2A/* * */) {\n      continue;\n    }\n\n    // Process only opening markers\n    if (startDelim.end === -1) {\n      continue;\n    }\n\n    endDelim = delimiters[startDelim.end];\n\n    // If the previous delimiter has the same marker and is adjacent to this one,\n    // merge those into one strong delimiter.\n    //\n    // `<em><em>whatever</em></em>` -> `<strong>whatever</strong>`\n    //\n    isStrong = i > 0 &&\n               delimiters[i - 1].end === startDelim.end + 1 &&\n               // check that first two markers match and adjacent\n               delimiters[i - 1].marker === startDelim.marker &&\n               delimiters[i - 1].token === startDelim.token - 1 &&\n               // check that last two markers are adjacent (we can safely assume they match)\n               delimiters[startDelim.end + 1].token === endDelim.token + 1;\n\n    ch = String.fromCharCode(startDelim.marker);\n\n    token         = state.tokens[startDelim.token];\n    token.type    = isStrong ? 'strong_open' : 'em_open';\n    token.tag     = isStrong ? 'strong' : 'em';\n    token.nesting = 1;\n    token.markup  = isStrong ? ch + ch : ch;\n    token.content = '';\n\n    token         = state.tokens[endDelim.token];\n    token.type    = isStrong ? 'strong_close' : 'em_close';\n    token.tag     = isStrong ? 'strong' : 'em';\n    token.nesting = -1;\n    token.markup  = isStrong ? ch + ch : ch;\n    token.content = '';\n\n    if (isStrong) {\n      state.tokens[delimiters[i - 1].token].content = '';\n      state.tokens[delimiters[startDelim.end + 1].token].content = '';\n      i--;\n    }\n  }\n}\n\n\n// Walk through delimiter list and replace text tokens with tags\n//\nmodule.exports.postProcess = function emphasis(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n\n  postProcess(state, state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      postProcess(state, tokens_meta[curr].delimiters);\n    }\n  }\n};\n","// Process [link](<to> \"stuff\")\n\n'use strict';\n\nvar normalizeReference   = require('../common/utils').normalizeReference;\nvar isSpace              = require('../common/utils').isSpace;\n\n\nmodule.exports = function link(state, silent) {\n  var attrs,\n      code,\n      label,\n      labelEnd,\n      labelStart,\n      pos,\n      res,\n      ref,\n      token,\n      href = '',\n      title = '',\n      oldPos = state.pos,\n      max = state.posMax,\n      start = state.pos,\n      parseReference = true;\n\n  if (state.src.charCodeAt(state.pos) !== 0x5B/* [ */) { return false; }\n\n  labelStart = state.pos + 1;\n  labelEnd = state.md.helpers.parseLinkLabel(state, state.pos, true);\n\n  // parser failed to find ']', so it's not a valid link\n  if (labelEnd < 0) { return false; }\n\n  pos = labelEnd + 1;\n  if (pos < max && state.src.charCodeAt(pos) === 0x28/* ( */) {\n    //\n    // Inline link\n    //\n\n    // might have found a valid shortcut link, disable reference parsing\n    parseReference = false;\n\n    // [link](  <href>  \"title\"  )\n    //        ^^ skipping these spaces\n    pos++;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n    if (pos >= max) { return false; }\n\n    // [link](  <href>  \"title\"  )\n    //          ^^^^^^ parsing link destination\n    start = pos;\n    res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax);\n    if (res.ok) {\n      href = state.md.normalizeLink(res.str);\n      if (state.md.validateLink(href)) {\n        pos = res.pos;\n      } else {\n        href = '';\n      }\n\n      // [link](  <href>  \"title\"  )\n      //                ^^ skipping these spaces\n      start = pos;\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n        if (!isSpace(code) && code !== 0x0A) { break; }\n      }\n\n      // [link](  <href>  \"title\"  )\n      //                  ^^^^^^^ parsing link title\n      res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax);\n      if (pos < max && start !== pos && res.ok) {\n        title = res.str;\n        pos = res.pos;\n\n        // [link](  <href>  \"title\"  )\n        //                         ^^ skipping these spaces\n        for (; pos < max; pos++) {\n          code = state.src.charCodeAt(pos);\n          if (!isSpace(code) && code !== 0x0A) { break; }\n        }\n      }\n    }\n\n    if (pos >= max || state.src.charCodeAt(pos) !== 0x29/* ) */) {\n      // parsing a valid shortcut link failed, fallback to reference\n      parseReference = true;\n    }\n    pos++;\n  }\n\n  if (parseReference) {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined') { return false; }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B/* [ */) {\n      start = pos + 1;\n      pos = state.md.helpers.parseLinkLabel(state, pos);\n      if (pos >= 0) {\n        label = state.src.slice(start, pos++);\n      } else {\n        pos = labelEnd + 1;\n      }\n    } else {\n      pos = labelEnd + 1;\n    }\n\n    // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n    if (!label) { label = state.src.slice(labelStart, labelEnd); }\n\n    ref = state.env.references[normalizeReference(label)];\n    if (!ref) {\n      state.pos = oldPos;\n      return false;\n    }\n    href = ref.href;\n    title = ref.title;\n  }\n\n  //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n  if (!silent) {\n    state.pos = labelStart;\n    state.posMax = labelEnd;\n\n    token        = state.push('link_open', 'a', 1);\n    token.attrs  = attrs = [ [ 'href', href ] ];\n    if (title) {\n      attrs.push([ 'title', title ]);\n    }\n\n    state.linkLevel++;\n    state.md.inline.tokenize(state);\n    state.linkLevel--;\n\n    token        = state.push('link_close', 'a', -1);\n  }\n\n  state.pos = pos;\n  state.posMax = max;\n  return true;\n};\n","// Process ![image](<src> \"title\")\n\n'use strict';\n\nvar normalizeReference   = require('../common/utils').normalizeReference;\nvar isSpace              = require('../common/utils').isSpace;\n\n\nmodule.exports = function image(state, silent) {\n  var attrs,\n      code,\n      content,\n      label,\n      labelEnd,\n      labelStart,\n      pos,\n      ref,\n      res,\n      title,\n      token,\n      tokens,\n      start,\n      href = '',\n      oldPos = state.pos,\n      max = state.posMax;\n\n  if (state.src.charCodeAt(state.pos) !== 0x21/* ! */) { return false; }\n  if (state.src.charCodeAt(state.pos + 1) !== 0x5B/* [ */) { return false; }\n\n  labelStart = state.pos + 2;\n  labelEnd = state.md.helpers.parseLinkLabel(state, state.pos + 1, false);\n\n  // parser failed to find ']', so it's not a valid link\n  if (labelEnd < 0) { return false; }\n\n  pos = labelEnd + 1;\n  if (pos < max && state.src.charCodeAt(pos) === 0x28/* ( */) {\n    //\n    // Inline link\n    //\n\n    // [link](  <href>  \"title\"  )\n    //        ^^ skipping these spaces\n    pos++;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n    if (pos >= max) { return false; }\n\n    // [link](  <href>  \"title\"  )\n    //          ^^^^^^ parsing link destination\n    start = pos;\n    res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax);\n    if (res.ok) {\n      href = state.md.normalizeLink(res.str);\n      if (state.md.validateLink(href)) {\n        pos = res.pos;\n      } else {\n        href = '';\n      }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                ^^ skipping these spaces\n    start = pos;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                  ^^^^^^^ parsing link title\n    res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax);\n    if (pos < max && start !== pos && res.ok) {\n      title = res.str;\n      pos = res.pos;\n\n      // [link](  <href>  \"title\"  )\n      //                         ^^ skipping these spaces\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n        if (!isSpace(code) && code !== 0x0A) { break; }\n      }\n    } else {\n      title = '';\n    }\n\n    if (pos >= max || state.src.charCodeAt(pos) !== 0x29/* ) */) {\n      state.pos = oldPos;\n      return false;\n    }\n    pos++;\n  } else {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined') { return false; }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B/* [ */) {\n      start = pos + 1;\n      pos = state.md.helpers.parseLinkLabel(state, pos);\n      if (pos >= 0) {\n        label = state.src.slice(start, pos++);\n      } else {\n        pos = labelEnd + 1;\n      }\n    } else {\n      pos = labelEnd + 1;\n    }\n\n    // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n    if (!label) { label = state.src.slice(labelStart, labelEnd); }\n\n    ref = state.env.references[normalizeReference(label)];\n    if (!ref) {\n      state.pos = oldPos;\n      return false;\n    }\n    href = ref.href;\n    title = ref.title;\n  }\n\n  //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n  if (!silent) {\n    content = state.src.slice(labelStart, labelEnd);\n\n    state.md.inline.parse(\n      content,\n      state.md,\n      state.env,\n      tokens = []\n    );\n\n    token          = state.push('image', 'img', 0);\n    token.attrs    = attrs = [ [ 'src', href ], [ 'alt', '' ] ];\n    token.children = tokens;\n    token.content  = content;\n\n    if (title) {\n      attrs.push([ 'title', title ]);\n    }\n  }\n\n  state.pos = pos;\n  state.posMax = max;\n  return true;\n};\n","// Process autolinks '<protocol:...>'\n\n'use strict';\n\n\n/*eslint max-len:0*/\nvar EMAIL_RE    = /^([a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*)$/;\nvar AUTOLINK_RE = /^([a-zA-Z][a-zA-Z0-9+.\\-]{1,31}):([^<>\\x00-\\x20]*)$/;\n\n\nmodule.exports = function autolink(state, silent) {\n  var url, fullUrl, token, ch, start, max,\n      pos = state.pos;\n\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */) { return false; }\n\n  start = state.pos;\n  max = state.posMax;\n\n  for (;;) {\n    if (++pos >= max) return false;\n\n    ch = state.src.charCodeAt(pos);\n\n    if (ch === 0x3C /* < */) return false;\n    if (ch === 0x3E /* > */) break;\n  }\n\n  url = state.src.slice(start + 1, pos);\n\n  if (AUTOLINK_RE.test(url)) {\n    fullUrl = state.md.normalizeLink(url);\n    if (!state.md.validateLink(fullUrl)) { return false; }\n\n    if (!silent) {\n      token         = state.push('link_open', 'a', 1);\n      token.attrs   = [ [ 'href', fullUrl ] ];\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n\n      token         = state.push('text', '', 0);\n      token.content = state.md.normalizeLinkText(url);\n\n      token         = state.push('link_close', 'a', -1);\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n    }\n\n    state.pos += url.length + 2;\n    return true;\n  }\n\n  if (EMAIL_RE.test(url)) {\n    fullUrl = state.md.normalizeLink('mailto:' + url);\n    if (!state.md.validateLink(fullUrl)) { return false; }\n\n    if (!silent) {\n      token         = state.push('link_open', 'a', 1);\n      token.attrs   = [ [ 'href', fullUrl ] ];\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n\n      token         = state.push('text', '', 0);\n      token.content = state.md.normalizeLinkText(url);\n\n      token         = state.push('link_close', 'a', -1);\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n    }\n\n    state.pos += url.length + 2;\n    return true;\n  }\n\n  return false;\n};\n","// Process html tags\n\n'use strict';\n\n\nvar HTML_TAG_RE = require('../common/html_re').HTML_TAG_RE;\n\n\nfunction isLinkOpen(str) {\n  return /^<a[>\\s]/i.test(str);\n}\nfunction isLinkClose(str) {\n  return /^<\\/a\\s*>/i.test(str);\n}\n\n\nfunction isLetter(ch) {\n  /*eslint no-bitwise:0*/\n  var lc = ch | 0x20; // to lower case\n  return (lc >= 0x61/* a */) && (lc <= 0x7a/* z */);\n}\n\n\nmodule.exports = function html_inline(state, silent) {\n  var ch, match, max, token,\n      pos = state.pos;\n\n  if (!state.md.options.html) { return false; }\n\n  // Check start\n  max = state.posMax;\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */ ||\n      pos + 2 >= max) {\n    return false;\n  }\n\n  // Quick fail on second char\n  ch = state.src.charCodeAt(pos + 1);\n  if (ch !== 0x21/* ! */ &&\n      ch !== 0x3F/* ? */ &&\n      ch !== 0x2F/* / */ &&\n      !isLetter(ch)) {\n    return false;\n  }\n\n  match = state.src.slice(pos).match(HTML_TAG_RE);\n  if (!match) { return false; }\n\n  if (!silent) {\n    token         = state.push('html_inline', '', 0);\n    token.content = state.src.slice(pos, pos + match[0].length);\n\n    if (isLinkOpen(token.content))  state.linkLevel++;\n    if (isLinkClose(token.content)) state.linkLevel--;\n  }\n  state.pos += match[0].length;\n  return true;\n};\n","// Process html entity - &#123;, &#xAF;, &quot;, ...\n\n'use strict';\n\nvar entities          = require('../common/entities');\nvar has               = require('../common/utils').has;\nvar isValidEntityCode = require('../common/utils').isValidEntityCode;\nvar fromCodePoint     = require('../common/utils').fromCodePoint;\n\n\nvar DIGITAL_RE = /^&#((?:x[a-f0-9]{1,6}|[0-9]{1,7}));/i;\nvar NAMED_RE   = /^&([a-z][a-z0-9]{1,31});/i;\n\n\nmodule.exports = function entity(state, silent) {\n  var ch, code, match, token, pos = state.pos, max = state.posMax;\n\n  if (state.src.charCodeAt(pos) !== 0x26/* & */) return false;\n\n  if (pos + 1 >= max) return false;\n\n  ch = state.src.charCodeAt(pos + 1);\n\n  if (ch === 0x23 /* # */) {\n    match = state.src.slice(pos).match(DIGITAL_RE);\n    if (match) {\n      if (!silent) {\n        code = match[1][0].toLowerCase() === 'x' ? parseInt(match[1].slice(1), 16) : parseInt(match[1], 10);\n\n        token         = state.push('text_special', '', 0);\n        token.content = isValidEntityCode(code) ? fromCodePoint(code) : fromCodePoint(0xFFFD);\n        token.markup  = match[0];\n        token.info    = 'entity';\n      }\n      state.pos += match[0].length;\n      return true;\n    }\n  } else {\n    match = state.src.slice(pos).match(NAMED_RE);\n    if (match) {\n      if (has(entities, match[1])) {\n        if (!silent) {\n          token         = state.push('text_special', '', 0);\n          token.content = entities[match[1]];\n          token.markup  = match[0];\n          token.info    = 'entity';\n        }\n        state.pos += match[0].length;\n        return true;\n      }\n    }\n  }\n\n  return false;\n};\n","// For each opening emphasis-like marker find a matching closing one\n//\n'use strict';\n\n\nfunction processDelimiters(state, delimiters) {\n  var closerIdx, openerIdx, closer, opener, minOpenerIdx, newMinOpenerIdx,\n      isOddMatch, lastJump,\n      openersBottom = {},\n      max = delimiters.length;\n\n  if (!max) return;\n\n  // headerIdx is the first delimiter of the current (where closer is) delimiter run\n  var headerIdx = 0;\n  var lastTokenIdx = -2; // needs any value lower than -1\n  var jumps = [];\n\n  for (closerIdx = 0; closerIdx < max; closerIdx++) {\n    closer = delimiters[closerIdx];\n\n    jumps.push(0);\n\n    // markers belong to same delimiter run if:\n    //  - they have adjacent tokens\n    //  - AND markers are the same\n    //\n    if (delimiters[headerIdx].marker !== closer.marker || lastTokenIdx !== closer.token - 1) {\n      headerIdx = closerIdx;\n    }\n\n    lastTokenIdx = closer.token;\n\n    // Length is only used for emphasis-specific \"rule of 3\",\n    // if it's not defined (in strikethrough or 3rd party plugins),\n    // we can default it to 0 to disable those checks.\n    //\n    closer.length = closer.length || 0;\n\n    if (!closer.close) continue;\n\n    // Previously calculated lower bounds (previous fails)\n    // for each marker, each delimiter length modulo 3,\n    // and for whether this closer can be an opener;\n    // https://github.com/commonmark/cmark/commit/34250e12ccebdc6372b8b49c44fab57c72443460\n    if (!openersBottom.hasOwnProperty(closer.marker)) {\n      openersBottom[closer.marker] = [ -1, -1, -1, -1, -1, -1 ];\n    }\n\n    minOpenerIdx = openersBottom[closer.marker][(closer.open ? 3 : 0) + (closer.length % 3)];\n\n    openerIdx = headerIdx - jumps[headerIdx] - 1;\n\n    newMinOpenerIdx = openerIdx;\n\n    for (; openerIdx > minOpenerIdx; openerIdx -= jumps[openerIdx] + 1) {\n      opener = delimiters[openerIdx];\n\n      if (opener.marker !== closer.marker) continue;\n\n      if (opener.open && opener.end < 0) {\n\n        isOddMatch = false;\n\n        // from spec:\n        //\n        // If one of the delimiters can both open and close emphasis, then the\n        // sum of the lengths of the delimiter runs containing the opening and\n        // closing delimiters must not be a multiple of 3 unless both lengths\n        // are multiples of 3.\n        //\n        if (opener.close || closer.open) {\n          if ((opener.length + closer.length) % 3 === 0) {\n            if (opener.length % 3 !== 0 || closer.length % 3 !== 0) {\n              isOddMatch = true;\n            }\n          }\n        }\n\n        if (!isOddMatch) {\n          // If previous delimiter cannot be an opener, we can safely skip\n          // the entire sequence in future checks. This is required to make\n          // sure algorithm has linear complexity (see *_*_*_*_*_... case).\n          //\n          lastJump = openerIdx > 0 && !delimiters[openerIdx - 1].open ?\n            jumps[openerIdx - 1] + 1 :\n            0;\n\n          jumps[closerIdx] = closerIdx - openerIdx + lastJump;\n          jumps[openerIdx] = lastJump;\n\n          closer.open  = false;\n          opener.end   = closerIdx;\n          opener.close = false;\n          newMinOpenerIdx = -1;\n          // treat next token as start of run,\n          // it optimizes skips in **<...>**a**<...>** pathological case\n          lastTokenIdx = -2;\n          break;\n        }\n      }\n    }\n\n    if (newMinOpenerIdx !== -1) {\n      // If match for this delimiter run failed, we want to set lower bound for\n      // future lookups. This is required to make sure algorithm has linear\n      // complexity.\n      //\n      // See details here:\n      // https://github.com/commonmark/cmark/issues/178#issuecomment-270417442\n      //\n      openersBottom[closer.marker][(closer.open ? 3 : 0) + ((closer.length || 0) % 3)] = newMinOpenerIdx;\n    }\n  }\n}\n\n\nmodule.exports = function link_pairs(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n\n  processDelimiters(state, state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      processDelimiters(state, tokens_meta[curr].delimiters);\n    }\n  }\n};\n","// Inline parser state\n\n'use strict';\n\n\nvar Token          = require('../token');\nvar isWhiteSpace   = require('../common/utils').isWhiteSpace;\nvar isPunctChar    = require('../common/utils').isPunctChar;\nvar isMdAsciiPunct = require('../common/utils').isMdAsciiPunct;\n\n\nfunction StateInline(src, md, env, outTokens) {\n  this.src = src;\n  this.env = env;\n  this.md = md;\n  this.tokens = outTokens;\n  this.tokens_meta = Array(outTokens.length);\n\n  this.pos = 0;\n  this.posMax = this.src.length;\n  this.level = 0;\n  this.pending = '';\n  this.pendingLevel = 0;\n\n  // Stores { start: end } pairs. Useful for backtrack\n  // optimization of pairs parse (emphasis, strikes).\n  this.cache = {};\n\n  // List of emphasis-like delimiters for current tag\n  this.delimiters = [];\n\n  // Stack of delimiter lists for upper level tags\n  this._prev_delimiters = [];\n\n  // backtick length => last seen position\n  this.backticks = {};\n  this.backticksScanned = false;\n\n  // Counter used to disable inline linkify-it execution\n  // inside <a> and markdown links\n  this.linkLevel = 0;\n}\n\n\n// Flush pending text\n//\nStateInline.prototype.pushPending = function () {\n  var token = new Token('text', '', 0);\n  token.content = this.pending;\n  token.level = this.pendingLevel;\n  this.tokens.push(token);\n  this.pending = '';\n  return token;\n};\n\n\n// Push new token to \"stream\".\n// If pending text exists - flush it as text token\n//\nStateInline.prototype.push = function (type, tag, nesting) {\n  if (this.pending) {\n    this.pushPending();\n  }\n\n  var token = new Token(type, tag, nesting);\n  var token_meta = null;\n\n  if (nesting < 0) {\n    // closing tag\n    this.level--;\n    this.delimiters = this._prev_delimiters.pop();\n  }\n\n  token.level = this.level;\n\n  if (nesting > 0) {\n    // opening tag\n    this.level++;\n    this._prev_delimiters.push(this.delimiters);\n    this.delimiters = [];\n    token_meta = { delimiters: this.delimiters };\n  }\n\n  this.pendingLevel = this.level;\n  this.tokens.push(token);\n  this.tokens_meta.push(token_meta);\n  return token;\n};\n\n\n// Scan a sequence of emphasis-like markers, and determine whether\n// it can start an emphasis sequence or end an emphasis sequence.\n//\n//  - start - position to scan from (it should point at a valid marker);\n//  - canSplitWord - determine if these markers can be found inside a word\n//\nStateInline.prototype.scanDelims = function (start, canSplitWord) {\n  var pos = start, lastChar, nextChar, count, can_open, can_close,\n      isLastWhiteSpace, isLastPunctChar,\n      isNextWhiteSpace, isNextPunctChar,\n      left_flanking = true,\n      right_flanking = true,\n      max = this.posMax,\n      marker = this.src.charCodeAt(start);\n\n  // treat beginning of the line as a whitespace\n  lastChar = start > 0 ? this.src.charCodeAt(start - 1) : 0x20;\n\n  while (pos < max && this.src.charCodeAt(pos) === marker) { pos++; }\n\n  count = pos - start;\n\n  // treat end of the line as a whitespace\n  nextChar = pos < max ? this.src.charCodeAt(pos) : 0x20;\n\n  isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar));\n  isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar));\n\n  isLastWhiteSpace = isWhiteSpace(lastChar);\n  isNextWhiteSpace = isWhiteSpace(nextChar);\n\n  if (isNextWhiteSpace) {\n    left_flanking = false;\n  } else if (isNextPunctChar) {\n    if (!(isLastWhiteSpace || isLastPunctChar)) {\n      left_flanking = false;\n    }\n  }\n\n  if (isLastWhiteSpace) {\n    right_flanking = false;\n  } else if (isLastPunctChar) {\n    if (!(isNextWhiteSpace || isNextPunctChar)) {\n      right_flanking = false;\n    }\n  }\n\n  if (!canSplitWord) {\n    can_open  = left_flanking  && (!right_flanking || isLastPunctChar);\n    can_close = right_flanking && (!left_flanking  || isNextPunctChar);\n  } else {\n    can_open  = left_flanking;\n    can_close = right_flanking;\n  }\n\n  return {\n    can_open:  can_open,\n    can_close: can_close,\n    length:    count\n  };\n};\n\n\n// re-export Token class to use in block rules\nStateInline.prototype.Token = Token;\n\n\nmodule.exports = StateInline;\n","/** internal\n * class ParserInline\n *\n * Tokenizes paragraph content.\n **/\n'use strict';\n\n\nvar Ruler           = require('./ruler');\n\n\n////////////////////////////////////////////////////////////////////////////////\n// Parser rules\n\nvar _rules = [\n  [ 'text',            require('./rules_inline/text') ],\n  [ 'linkify',         require('./rules_inline/linkify') ],\n  [ 'newline',         require('./rules_inline/newline') ],\n  [ 'escape',          require('./rules_inline/escape') ],\n  [ 'backticks',       require('./rules_inline/backticks') ],\n  [ 'strikethrough',   require('./rules_inline/strikethrough').tokenize ],\n  [ 'emphasis',        require('./rules_inline/emphasis').tokenize ],\n  [ 'link',            require('./rules_inline/link') ],\n  [ 'image',           require('./rules_inline/image') ],\n  [ 'autolink',        require('./rules_inline/autolink') ],\n  [ 'html_inline',     require('./rules_inline/html_inline') ],\n  [ 'entity',          require('./rules_inline/entity') ]\n];\n\n// `rule2` ruleset was created specifically for emphasis/strikethrough\n// post-processing and may be changed in the future.\n//\n// Don't use this for anything except pairs (plugins working with `balance_pairs`).\n//\nvar _rules2 = [\n  [ 'balance_pairs',   require('./rules_inline/balance_pairs') ],\n  [ 'strikethrough',   require('./rules_inline/strikethrough').postProcess ],\n  [ 'emphasis',        require('./rules_inline/emphasis').postProcess ],\n  // rules for pairs separate '**' into its own text tokens, which may be left unused,\n  // rule below merges unused segments back with the rest of the text\n  [ 'fragments_join',  require('./rules_inline/fragments_join') ]\n];\n\n\n/**\n * new ParserInline()\n **/\nfunction ParserInline() {\n  var i;\n\n  /**\n   * ParserInline#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of inline rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1]);\n  }\n\n  /**\n   * ParserInline#ruler2 -> Ruler\n   *\n   * [[Ruler]] instance. Second ruler used for post-processing\n   * (e.g. in emphasis-like rules).\n   **/\n  this.ruler2 = new Ruler();\n\n  for (i = 0; i < _rules2.length; i++) {\n    this.ruler2.push(_rules2[i][0], _rules2[i][1]);\n  }\n}\n\n\n// Skip single token by running all rules in validation mode;\n// returns `true` if any rule reported success\n//\nParserInline.prototype.skipToken = function (state) {\n  var ok, i, pos = state.pos,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      maxNesting = state.md.options.maxNesting,\n      cache = state.cache;\n\n\n  if (typeof cache[pos] !== 'undefined') {\n    state.pos = cache[pos];\n    return;\n  }\n\n  if (state.level < maxNesting) {\n    for (i = 0; i < len; i++) {\n      // Increment state.level and decrement it later to limit recursion.\n      // It's harmless to do here, because no tokens are created. But ideally,\n      // we'd need a separate private state variable for this purpose.\n      //\n      state.level++;\n      ok = rules[i](state, true);\n      state.level--;\n\n      if (ok) { break; }\n    }\n  } else {\n    // Too much nesting, just skip until the end of the paragraph.\n    //\n    // NOTE: this will cause links to behave incorrectly in the following case,\n    //       when an amount of `[` is exactly equal to `maxNesting + 1`:\n    //\n    //       [[[[[[[[[[[[[[[[[[[[[foo]()\n    //\n    // TODO: remove this workaround when CM standard will allow nested links\n    //       (we can replace it by preventing links from being parsed in\n    //       validation mode)\n    //\n    state.pos = state.posMax;\n  }\n\n  if (!ok) { state.pos++; }\n  cache[pos] = state.pos;\n};\n\n\n// Generate tokens for input range\n//\nParserInline.prototype.tokenize = function (state) {\n  var ok, i,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      end = state.posMax,\n      maxNesting = state.md.options.maxNesting;\n\n  while (state.pos < end) {\n    // Try all possible rules.\n    // On success, rule should:\n    //\n    // - update `state.pos`\n    // - update `state.tokens`\n    // - return true\n\n    if (state.level < maxNesting) {\n      for (i = 0; i < len; i++) {\n        ok = rules[i](state, false);\n        if (ok) { break; }\n      }\n    }\n\n    if (ok) {\n      if (state.pos >= end) { break; }\n      continue;\n    }\n\n    state.pending += state.src[state.pos++];\n  }\n\n  if (state.pending) {\n    state.pushPending();\n  }\n};\n\n\n/**\n * ParserInline.parse(str, md, env, outTokens)\n *\n * Process input string and push inline tokens into `outTokens`\n **/\nParserInline.prototype.parse = function (str, md, env, outTokens) {\n  var i, rules, len;\n  var state = new this.State(str, md, env, outTokens);\n\n  this.tokenize(state);\n\n  rules = this.ruler2.getRules('');\n  len = rules.length;\n\n  for (i = 0; i < len; i++) {\n    rules[i](state);\n  }\n};\n\n\nParserInline.prototype.State = require('./rules_inline/state_inline');\n\n\nmodule.exports = ParserInline;\n","// Parse backticks\n\n'use strict';\n\n\nmodule.exports = function backtick(state, silent) {\n  var start, max, marker, token, matchStart, matchEnd, openerLength, closerLength,\n      pos = state.pos,\n      ch = state.src.charCodeAt(pos);\n\n  if (ch !== 0x60/* ` */) { return false; }\n\n  start = pos;\n  pos++;\n  max = state.posMax;\n\n  // scan marker length\n  while (pos < max && state.src.charCodeAt(pos) === 0x60/* ` */) { pos++; }\n\n  marker = state.src.slice(start, pos);\n  openerLength = marker.length;\n\n  if (state.backticksScanned && (state.backticks[openerLength] || 0) <= start) {\n    if (!silent) state.pending += marker;\n    state.pos += openerLength;\n    return true;\n  }\n\n  matchStart = matchEnd = pos;\n\n  // Nothing found in the cache, scan until the end of the line (or until marker is found)\n  while ((matchStart = state.src.indexOf('`', matchEnd)) !== -1) {\n    matchEnd = matchStart + 1;\n\n    // scan marker length\n    while (matchEnd < max && state.src.charCodeAt(matchEnd) === 0x60/* ` */) { matchEnd++; }\n\n    closerLength = matchEnd - matchStart;\n\n    if (closerLength === openerLength) {\n      // Found matching closer length.\n      if (!silent) {\n        token     = state.push('code_inline', 'code', 0);\n        token.markup  = marker;\n        token.content = state.src.slice(pos, matchStart)\n          .replace(/\\n/g, ' ')\n          .replace(/^ (.+) $/, '$1');\n      }\n      state.pos = matchEnd;\n      return true;\n    }\n\n    // Some different length found, put it in cache as upper limit of where closer can be found\n    state.backticks[closerLength] = matchStart;\n  }\n\n  // Scanned through the end, didn't find anything\n  state.backticksScanned = true;\n\n  if (!silent) state.pending += marker;\n  state.pos += openerLength;\n  return true;\n};\n","// Clean up tokens after emphasis and strikethrough postprocessing:\n// merge adjacent text nodes into one and re-calculate all token levels\n//\n// This is necessary because initially emphasis delimiter markers (*, _, ~)\n// are treated as their own separate text tokens. Then emphasis rule either\n// leaves them as text (needed to merge with adjacent text) or turns them\n// into opening/closing tags (which messes up levels inside).\n//\n'use strict';\n\n\nmodule.exports = function fragments_join(state) {\n  var curr, last,\n      level = 0,\n      tokens = state.tokens,\n      max = state.tokens.length;\n\n  for (curr = last = 0; curr < max; curr++) {\n    // re-calculate levels after emphasis/strikethrough turns some text nodes\n    // into opening/closing tags\n    if (tokens[curr].nesting < 0) level--; // closing tag\n    tokens[curr].level = level;\n    if (tokens[curr].nesting > 0) level++; // opening tag\n\n    if (tokens[curr].type === 'text' &&\n        curr + 1 < max &&\n        tokens[curr + 1].type === 'text') {\n\n      // collapse two adjacent text nodes\n      tokens[curr + 1].content = tokens[curr].content + tokens[curr + 1].content;\n    } else {\n      if (curr !== last) { tokens[last] = tokens[curr]; }\n\n      last++;\n    }\n  }\n\n  if (curr !== last) {\n    tokens.length = last;\n  }\n};\n","'use strict';\n\n\nmodule.exports = function (opts) {\n  var re = {};\n  opts = opts || {};\n\n  // Use direct extract instead of `regenerate` to reduse browserified size\n  re.src_Any = require('uc.micro/properties/Any/regex').source;\n  re.src_Cc  = require('uc.micro/categories/Cc/regex').source;\n  re.src_Z   = require('uc.micro/categories/Z/regex').source;\n  re.src_P   = require('uc.micro/categories/P/regex').source;\n\n  // \\p{\\Z\\P\\Cc\\CF} (white spaces + control + format + punctuation)\n  re.src_ZPCc = [ re.src_Z, re.src_P, re.src_Cc ].join('|');\n\n  // \\p{\\Z\\Cc} (white spaces + control)\n  re.src_ZCc = [ re.src_Z, re.src_Cc ].join('|');\n\n  // Experimental. List of chars, completely prohibited in links\n  // because can separate it from other part of text\n  var text_separators = '[><\\uff5c]';\n\n  // All possible word characters (everything without punctuation, spaces & controls)\n  // Defined via punctuation & spaces to save space\n  // Should be something like \\p{\\L\\N\\S\\M} (\\w but without `_`)\n  re.src_pseudo_letter       = '(?:(?!' + text_separators + '|' + re.src_ZPCc + ')' + re.src_Any + ')';\n  // The same as abothe but without [0-9]\n  // var src_pseudo_letter_non_d = '(?:(?![0-9]|' + src_ZPCc + ')' + src_Any + ')';\n\n  ////////////////////////////////////////////////////////////////////////////////\n\n  re.src_ip4 =\n\n    '(?:(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)';\n\n  // Prohibit any of \"@/[]()\" in user/pass to avoid wrong domain fetch.\n  re.src_auth    = '(?:(?:(?!' + re.src_ZCc + '|[@/\\\\[\\\\]()]).)+@)?';\n\n  re.src_port =\n\n    '(?::(?:6(?:[0-4]\\\\d{3}|5(?:[0-4]\\\\d{2}|5(?:[0-2]\\\\d|3[0-5])))|[1-5]?\\\\d{1,4}))?';\n\n  re.src_host_terminator =\n\n    '(?=$|' + text_separators + '|' + re.src_ZPCc + ')' +\n    '(?!' + (opts['---'] ? '-(?!--)|' : '-|') + '_|:\\\\d|\\\\.-|\\\\.(?!$|' + re.src_ZPCc + '))';\n\n  re.src_path =\n\n    '(?:' +\n      '[/?#]' +\n        '(?:' +\n          '(?!' + re.src_ZCc + '|' + text_separators + '|[()[\\\\]{}.,\"\\'?!\\\\-;]).|' +\n          '\\\\[(?:(?!' + re.src_ZCc + '|\\\\]).)*\\\\]|' +\n          '\\\\((?:(?!' + re.src_ZCc + '|[)]).)*\\\\)|' +\n          '\\\\{(?:(?!' + re.src_ZCc + '|[}]).)*\\\\}|' +\n          '\\\\\"(?:(?!' + re.src_ZCc + '|[\"]).)+\\\\\"|' +\n          \"\\\\'(?:(?!\" + re.src_ZCc + \"|[']).)+\\\\'|\" +\n          \"\\\\'(?=\" + re.src_pseudo_letter + '|[-])|' +  // allow `I'm_king` if no pair found\n          '\\\\.{2,}[a-zA-Z0-9%/&]|' + // google has many dots in \"google search\" links (#66, #81).\n                                     // github has ... in commit range links,\n                                     // Restrict to\n                                     // - english\n                                     // - percent-encoded\n                                     // - parts of file path\n                                     // - params separator\n                                     // until more examples found.\n          '\\\\.(?!' + re.src_ZCc + '|[.]|$)|' +\n          (opts['---'] ?\n            '\\\\-(?!--(?:[^-]|$))(?:-*)|' // `---` => long dash, terminate\n            :\n            '\\\\-+|'\n          ) +\n          ',(?!' + re.src_ZCc + '|$)|' +       // allow `,,,` in paths\n          ';(?!' + re.src_ZCc + '|$)|' +       // allow `;` if not followed by space-like char\n          '\\\\!+(?!' + re.src_ZCc + '|[!]|$)|' +  // allow `!!!` in paths, but not at the end\n          '\\\\?(?!' + re.src_ZCc + '|[?]|$)' +\n        ')+' +\n      '|\\\\/' +\n    ')?';\n\n  // Allow anything in markdown spec, forbid quote (\") at the first position\n  // because emails enclosed in quotes are far more common\n  re.src_email_name =\n\n    '[\\\\-;:&=\\\\+\\\\$,\\\\.a-zA-Z0-9_][\\\\-;:&=\\\\+\\\\$,\\\\\"\\\\.a-zA-Z0-9_]*';\n\n  re.src_xn =\n\n    'xn--[a-z0-9\\\\-]{1,59}';\n\n  // More to read about domain names\n  // http://serverfault.com/questions/638260/\n\n  re.src_domain_root =\n\n    // Allow letters & digits (http://test1)\n    '(?:' +\n      re.src_xn +\n      '|' +\n      re.src_pseudo_letter + '{1,63}' +\n    ')';\n\n  re.src_domain =\n\n    '(?:' +\n      re.src_xn +\n      '|' +\n      '(?:' + re.src_pseudo_letter + ')' +\n      '|' +\n      '(?:' + re.src_pseudo_letter + '(?:-|' + re.src_pseudo_letter + '){0,61}' + re.src_pseudo_letter + ')' +\n    ')';\n\n  re.src_host =\n\n    '(?:' +\n    // Don't need IP check, because digits are already allowed in normal domain names\n    //   src_ip4 +\n    // '|' +\n      '(?:(?:(?:' + re.src_domain + ')\\\\.)*' + re.src_domain/*_root*/ + ')' +\n    ')';\n\n  re.tpl_host_fuzzy =\n\n    '(?:' +\n      re.src_ip4 +\n    '|' +\n      '(?:(?:(?:' + re.src_domain + ')\\\\.)+(?:%TLDS%))' +\n    ')';\n\n  re.tpl_host_no_ip_fuzzy =\n\n    '(?:(?:(?:' + re.src_domain + ')\\\\.)+(?:%TLDS%))';\n\n  re.src_host_strict =\n\n    re.src_host + re.src_host_terminator;\n\n  re.tpl_host_fuzzy_strict =\n\n    re.tpl_host_fuzzy + re.src_host_terminator;\n\n  re.src_host_port_strict =\n\n    re.src_host + re.src_port + re.src_host_terminator;\n\n  re.tpl_host_port_fuzzy_strict =\n\n    re.tpl_host_fuzzy + re.src_port + re.src_host_terminator;\n\n  re.tpl_host_port_no_ip_fuzzy_strict =\n\n    re.tpl_host_no_ip_fuzzy + re.src_port + re.src_host_terminator;\n\n\n  ////////////////////////////////////////////////////////////////////////////////\n  // Main rules\n\n  // Rude test fuzzy links by host, for quick deny\n  re.tpl_host_fuzzy_test =\n\n    'localhost|www\\\\.|\\\\.\\\\d{1,3}\\\\.|(?:\\\\.(?:%TLDS%)(?:' + re.src_ZPCc + '|>|$))';\n\n  re.tpl_email_fuzzy =\n\n      '(^|' + text_separators + '|\"|\\\\(|' + re.src_ZCc + ')' +\n      '(' + re.src_email_name + '@' + re.tpl_host_fuzzy_strict + ')';\n\n  re.tpl_link_fuzzy =\n      // Fuzzy link can't be prepended with .:/\\- and non punctuation.\n      // but can start with > (markdown blockquote)\n      '(^|(?![.:/\\\\-_@])(?:[$+<=>^`|\\uff5c]|' + re.src_ZPCc + '))' +\n      '((?![$+<=>^`|\\uff5c])' + re.tpl_host_port_fuzzy_strict + re.src_path + ')';\n\n  re.tpl_link_no_ip_fuzzy =\n      // Fuzzy link can't be prepended with .:/\\- and non punctuation.\n      // but can start with > (markdown blockquote)\n      '(^|(?![.:/\\\\-_@])(?:[$+<=>^`|\\uff5c]|' + re.src_ZPCc + '))' +\n      '((?![$+<=>^`|\\uff5c])' + re.tpl_host_port_no_ip_fuzzy_strict + re.src_path + ')';\n\n  return re;\n};\n","'use strict';\n\n\n////////////////////////////////////////////////////////////////////////////////\n// Helpers\n\n// Merge objects\n//\nfunction assign(obj /*from1, from2, from3, ...*/) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n\n  sources.forEach(function (source) {\n    if (!source) { return; }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key];\n    });\n  });\n\n  return obj;\n}\n\nfunction _class(obj) { return Object.prototype.toString.call(obj); }\nfunction isString(obj) { return _class(obj) === '[object String]'; }\nfunction isObject(obj) { return _class(obj) === '[object Object]'; }\nfunction isRegExp(obj) { return _class(obj) === '[object RegExp]'; }\nfunction isFunction(obj) { return _class(obj) === '[object Function]'; }\n\n\nfunction escapeRE(str) { return str.replace(/[.?*+^$[\\]\\\\(){}|-]/g, '\\\\$&'); }\n\n////////////////////////////////////////////////////////////////////////////////\n\n\nvar defaultOptions = {\n  fuzzyLink: true,\n  fuzzyEmail: true,\n  fuzzyIP: false\n};\n\n\nfunction isOptionsObj(obj) {\n  return Object.keys(obj || {}).reduce(function (acc, k) {\n    return acc || defaultOptions.hasOwnProperty(k);\n  }, false);\n}\n\n\nvar defaultSchemas = {\n  'http:': {\n    validate: function (text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.http) {\n        // compile lazily, because \"host\"-containing variables can change on tlds update.\n        self.re.http =  new RegExp(\n          '^\\\\/\\\\/' + self.re.src_auth + self.re.src_host_port_strict + self.re.src_path, 'i'\n        );\n      }\n      if (self.re.http.test(tail)) {\n        return tail.match(self.re.http)[0].length;\n      }\n      return 0;\n    }\n  },\n  'https:':  'http:',\n  'ftp:':    'http:',\n  '//':      {\n    validate: function (text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.no_http) {\n      // compile lazily, because \"host\"-containing variables can change on tlds update.\n        self.re.no_http =  new RegExp(\n          '^' +\n          self.re.src_auth +\n          // Don't allow single-level domains, because of false positives like '//test'\n          // with code comments\n          '(?:localhost|(?:(?:' + self.re.src_domain + ')\\\\.)+' + self.re.src_domain_root + ')' +\n          self.re.src_port +\n          self.re.src_host_terminator +\n          self.re.src_path,\n\n          'i'\n        );\n      }\n\n      if (self.re.no_http.test(tail)) {\n        // should not be `://` & `///`, that protects from errors in protocol name\n        if (pos >= 3 && text[pos - 3] === ':') { return 0; }\n        if (pos >= 3 && text[pos - 3] === '/') { return 0; }\n        return tail.match(self.re.no_http)[0].length;\n      }\n      return 0;\n    }\n  },\n  'mailto:': {\n    validate: function (text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.mailto) {\n        self.re.mailto =  new RegExp(\n          '^' + self.re.src_email_name + '@' + self.re.src_host_strict, 'i'\n        );\n      }\n      if (self.re.mailto.test(tail)) {\n        return tail.match(self.re.mailto)[0].length;\n      }\n      return 0;\n    }\n  }\n};\n\n/*eslint-disable max-len*/\n\n// RE pattern for 2-character tlds (autogenerated by ./support/tlds_2char_gen.js)\nvar tlds_2ch_src_re = 'a[cdefgilmnoqrstuwxz]|b[abdefghijmnorstvwyz]|c[acdfghiklmnoruvwxyz]|d[ejkmoz]|e[cegrstu]|f[ijkmor]|g[abdefghilmnpqrstuwy]|h[kmnrtu]|i[delmnoqrst]|j[emop]|k[eghimnprwyz]|l[abcikrstuvy]|m[acdeghklmnopqrstuvwxyz]|n[acefgilopruz]|om|p[aefghklmnrstwy]|qa|r[eosuw]|s[abcdeghijklmnortuvxyz]|t[cdfghjklmnortvwz]|u[agksyz]|v[aceginu]|w[fs]|y[et]|z[amw]';\n\n// DON'T try to make PRs with changes. Extend TLDs with LinkifyIt.tlds() instead\nvar tlds_default = 'biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф'.split('|');\n\n/*eslint-enable max-len*/\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction resetScanCache(self) {\n  self.__index__ = -1;\n  self.__text_cache__   = '';\n}\n\nfunction createValidator(re) {\n  return function (text, pos) {\n    var tail = text.slice(pos);\n\n    if (re.test(tail)) {\n      return tail.match(re)[0].length;\n    }\n    return 0;\n  };\n}\n\nfunction createNormalizer() {\n  return function (match, self) {\n    self.normalize(match);\n  };\n}\n\n// Schemas compiler. Build regexps.\n//\nfunction compile(self) {\n\n  // Load & clone RE patterns.\n  var re = self.re = require('./lib/re')(self.__opts__);\n\n  // Define dynamic patterns\n  var tlds = self.__tlds__.slice();\n\n  self.onCompile();\n\n  if (!self.__tlds_replaced__) {\n    tlds.push(tlds_2ch_src_re);\n  }\n  tlds.push(re.src_xn);\n\n  re.src_tlds = tlds.join('|');\n\n  function untpl(tpl) { return tpl.replace('%TLDS%', re.src_tlds); }\n\n  re.email_fuzzy      = RegExp(untpl(re.tpl_email_fuzzy), 'i');\n  re.link_fuzzy       = RegExp(untpl(re.tpl_link_fuzzy), 'i');\n  re.link_no_ip_fuzzy = RegExp(untpl(re.tpl_link_no_ip_fuzzy), 'i');\n  re.host_fuzzy_test  = RegExp(untpl(re.tpl_host_fuzzy_test), 'i');\n\n  //\n  // Compile each schema\n  //\n\n  var aliases = [];\n\n  self.__compiled__ = {}; // Reset compiled data\n\n  function schemaError(name, val) {\n    throw new Error('(LinkifyIt) Invalid schema \"' + name + '\": ' + val);\n  }\n\n  Object.keys(self.__schemas__).forEach(function (name) {\n    var val = self.__schemas__[name];\n\n    // skip disabled methods\n    if (val === null) { return; }\n\n    var compiled = { validate: null, link: null };\n\n    self.__compiled__[name] = compiled;\n\n    if (isObject(val)) {\n      if (isRegExp(val.validate)) {\n        compiled.validate = createValidator(val.validate);\n      } else if (isFunction(val.validate)) {\n        compiled.validate = val.validate;\n      } else {\n        schemaError(name, val);\n      }\n\n      if (isFunction(val.normalize)) {\n        compiled.normalize = val.normalize;\n      } else if (!val.normalize) {\n        compiled.normalize = createNormalizer();\n      } else {\n        schemaError(name, val);\n      }\n\n      return;\n    }\n\n    if (isString(val)) {\n      aliases.push(name);\n      return;\n    }\n\n    schemaError(name, val);\n  });\n\n  //\n  // Compile postponed aliases\n  //\n\n  aliases.forEach(function (alias) {\n    if (!self.__compiled__[self.__schemas__[alias]]) {\n      // Silently fail on missed schemas to avoid errons on disable.\n      // schemaError(alias, self.__schemas__[alias]);\n      return;\n    }\n\n    self.__compiled__[alias].validate =\n      self.__compiled__[self.__schemas__[alias]].validate;\n    self.__compiled__[alias].normalize =\n      self.__compiled__[self.__schemas__[alias]].normalize;\n  });\n\n  //\n  // Fake record for guessed links\n  //\n  self.__compiled__[''] = { validate: null, normalize: createNormalizer() };\n\n  //\n  // Build schema condition\n  //\n  var slist = Object.keys(self.__compiled__)\n                      .filter(function (name) {\n                        // Filter disabled & fake schemas\n                        return name.length > 0 && self.__compiled__[name];\n                      })\n                      .map(escapeRE)\n                      .join('|');\n  // (?!_) cause 1.5x slowdown\n  self.re.schema_test     = RegExp('(^|(?!_)(?:[><\\uff5c]|' + re.src_ZPCc + '))(' + slist + ')', 'i');\n  self.re.schema_search   = RegExp('(^|(?!_)(?:[><\\uff5c]|' + re.src_ZPCc + '))(' + slist + ')', 'ig');\n  self.re.schema_at_start = RegExp('^' + self.re.schema_search.source, 'i');\n\n  self.re.pretest = RegExp(\n    '(' + self.re.schema_test.source + ')|(' + self.re.host_fuzzy_test.source + ')|@',\n    'i'\n  );\n\n  //\n  // Cleanup\n  //\n\n  resetScanCache(self);\n}\n\n/**\n * class Match\n *\n * Match result. Single element of array, returned by [[LinkifyIt#match]]\n **/\nfunction Match(self, shift) {\n  var start = self.__index__,\n      end   = self.__last_index__,\n      text  = self.__text_cache__.slice(start, end);\n\n  /**\n   * Match#schema -> String\n   *\n   * Prefix (protocol) for matched string.\n   **/\n  this.schema    = self.__schema__.toLowerCase();\n  /**\n   * Match#index -> Number\n   *\n   * First position of matched string.\n   **/\n  this.index     = start + shift;\n  /**\n   * Match#lastIndex -> Number\n   *\n   * Next position after matched string.\n   **/\n  this.lastIndex = end + shift;\n  /**\n   * Match#raw -> String\n   *\n   * Matched string.\n   **/\n  this.raw       = text;\n  /**\n   * Match#text -> String\n   *\n   * Notmalized text of matched string.\n   **/\n  this.text      = text;\n  /**\n   * Match#url -> String\n   *\n   * Normalized url of matched string.\n   **/\n  this.url       = text;\n}\n\nfunction createMatch(self, shift) {\n  var match = new Match(self, shift);\n\n  self.__compiled__[match.schema].normalize(match, self);\n\n  return match;\n}\n\n\n/**\n * class LinkifyIt\n **/\n\n/**\n * new LinkifyIt(schemas, options)\n * - schemas (Object): Optional. Additional schemas to validate (prefix/validator)\n * - options (Object): { fuzzyLink|fuzzyEmail|fuzzyIP: true|false }\n *\n * Creates new linkifier instance with optional additional schemas.\n * Can be called without `new` keyword for convenience.\n *\n * By default understands:\n *\n * - `http(s)://...` , `ftp://...`, `mailto:...` & `//...` links\n * - \"fuzzy\" links and emails (example.com, foo@bar.com).\n *\n * `schemas` is an object, where each key/value describes protocol/rule:\n *\n * - __key__ - link prefix (usually, protocol name with `:` at the end, `skype:`\n *   for example). `linkify-it` makes shure that prefix is not preceeded with\n *   alphanumeric char and symbols. Only whitespaces and punctuation allowed.\n * - __value__ - rule to check tail after link prefix\n *   - _String_ - just alias to existing rule\n *   - _Object_\n *     - _validate_ - validator function (should return matched length on success),\n *       or `RegExp`.\n *     - _normalize_ - optional function to normalize text & url of matched result\n *       (for example, for @twitter mentions).\n *\n * `options`:\n *\n * - __fuzzyLink__ - recognige URL-s without `http(s):` prefix. Default `true`.\n * - __fuzzyIP__ - allow IPs in fuzzy links above. Can conflict with some texts\n *   like version numbers. Default `false`.\n * - __fuzzyEmail__ - recognize emails without `mailto:` prefix.\n *\n **/\nfunction LinkifyIt(schemas, options) {\n  if (!(this instanceof LinkifyIt)) {\n    return new LinkifyIt(schemas, options);\n  }\n\n  if (!options) {\n    if (isOptionsObj(schemas)) {\n      options = schemas;\n      schemas = {};\n    }\n  }\n\n  this.__opts__           = assign({}, defaultOptions, options);\n\n  // Cache last tested result. Used to skip repeating steps on next `match` call.\n  this.__index__          = -1;\n  this.__last_index__     = -1; // Next scan position\n  this.__schema__         = '';\n  this.__text_cache__     = '';\n\n  this.__schemas__        = assign({}, defaultSchemas, schemas);\n  this.__compiled__       = {};\n\n  this.__tlds__           = tlds_default;\n  this.__tlds_replaced__  = false;\n\n  this.re = {};\n\n  compile(this);\n}\n\n\n/** chainable\n * LinkifyIt#add(schema, definition)\n * - schema (String): rule name (fixed pattern prefix)\n * - definition (String|RegExp|Object): schema definition\n *\n * Add new rule definition. See constructor description for details.\n **/\nLinkifyIt.prototype.add = function add(schema, definition) {\n  this.__schemas__[schema] = definition;\n  compile(this);\n  return this;\n};\n\n\n/** chainable\n * LinkifyIt#set(options)\n * - options (Object): { fuzzyLink|fuzzyEmail|fuzzyIP: true|false }\n *\n * Set recognition options for links without schema.\n **/\nLinkifyIt.prototype.set = function set(options) {\n  this.__opts__ = assign(this.__opts__, options);\n  return this;\n};\n\n\n/**\n * LinkifyIt#test(text) -> Boolean\n *\n * Searches linkifiable pattern and returns `true` on success or `false` on fail.\n **/\nLinkifyIt.prototype.test = function test(text) {\n  // Reset scan cache\n  this.__text_cache__ = text;\n  this.__index__      = -1;\n\n  if (!text.length) { return false; }\n\n  var m, ml, me, len, shift, next, re, tld_pos, at_pos;\n\n  // try to scan for link with schema - that's the most simple rule\n  if (this.re.schema_test.test(text)) {\n    re = this.re.schema_search;\n    re.lastIndex = 0;\n    while ((m = re.exec(text)) !== null) {\n      len = this.testSchemaAt(text, m[2], re.lastIndex);\n      if (len) {\n        this.__schema__     = m[2];\n        this.__index__      = m.index + m[1].length;\n        this.__last_index__ = m.index + m[0].length + len;\n        break;\n      }\n    }\n  }\n\n  if (this.__opts__.fuzzyLink && this.__compiled__['http:']) {\n    // guess schemaless links\n    tld_pos = text.search(this.re.host_fuzzy_test);\n    if (tld_pos >= 0) {\n      // if tld is located after found link - no need to check fuzzy pattern\n      if (this.__index__ < 0 || tld_pos < this.__index__) {\n        if ((ml = text.match(this.__opts__.fuzzyIP ? this.re.link_fuzzy : this.re.link_no_ip_fuzzy)) !== null) {\n\n          shift = ml.index + ml[1].length;\n\n          if (this.__index__ < 0 || shift < this.__index__) {\n            this.__schema__     = '';\n            this.__index__      = shift;\n            this.__last_index__ = ml.index + ml[0].length;\n          }\n        }\n      }\n    }\n  }\n\n  if (this.__opts__.fuzzyEmail && this.__compiled__['mailto:']) {\n    // guess schemaless emails\n    at_pos = text.indexOf('@');\n    if (at_pos >= 0) {\n      // We can't skip this check, because this cases are possible:\n      // 192.168.1.1@gmail.com, my.in@example.com\n      if ((me = text.match(this.re.email_fuzzy)) !== null) {\n\n        shift = me.index + me[1].length;\n        next  = me.index + me[0].length;\n\n        if (this.__index__ < 0 || shift < this.__index__ ||\n            (shift === this.__index__ && next > this.__last_index__)) {\n          this.__schema__     = 'mailto:';\n          this.__index__      = shift;\n          this.__last_index__ = next;\n        }\n      }\n    }\n  }\n\n  return this.__index__ >= 0;\n};\n\n\n/**\n * LinkifyIt#pretest(text) -> Boolean\n *\n * Very quick check, that can give false positives. Returns true if link MAY BE\n * can exists. Can be used for speed optimization, when you need to check that\n * link NOT exists.\n **/\nLinkifyIt.prototype.pretest = function pretest(text) {\n  return this.re.pretest.test(text);\n};\n\n\n/**\n * LinkifyIt#testSchemaAt(text, name, position) -> Number\n * - text (String): text to scan\n * - name (String): rule (schema) name\n * - position (Number): text offset to check from\n *\n * Similar to [[LinkifyIt#test]] but checks only specific protocol tail exactly\n * at given position. Returns length of found pattern (0 on fail).\n **/\nLinkifyIt.prototype.testSchemaAt = function testSchemaAt(text, schema, pos) {\n  // If not supported schema check requested - terminate\n  if (!this.__compiled__[schema.toLowerCase()]) {\n    return 0;\n  }\n  return this.__compiled__[schema.toLowerCase()].validate(text, pos, this);\n};\n\n\n/**\n * LinkifyIt#match(text) -> Array|null\n *\n * Returns array of found link descriptions or `null` on fail. We strongly\n * recommend to use [[LinkifyIt#test]] first, for best speed.\n *\n * ##### Result match description\n *\n * - __schema__ - link schema, can be empty for fuzzy links, or `//` for\n *   protocol-neutral  links.\n * - __index__ - offset of matched text\n * - __lastIndex__ - index of next char after mathch end\n * - __raw__ - matched text\n * - __text__ - normalized text\n * - __url__ - link, generated from matched text\n **/\nLinkifyIt.prototype.match = function match(text) {\n  var shift = 0, result = [];\n\n  // Try to take previous element from cache, if .test() called before\n  if (this.__index__ >= 0 && this.__text_cache__ === text) {\n    result.push(createMatch(this, shift));\n    shift = this.__last_index__;\n  }\n\n  // Cut head if cache was used\n  var tail = shift ? text.slice(shift) : text;\n\n  // Scan string until end reached\n  while (this.test(tail)) {\n    result.push(createMatch(this, shift));\n\n    tail = tail.slice(this.__last_index__);\n    shift += this.__last_index__;\n  }\n\n  if (result.length) {\n    return result;\n  }\n\n  return null;\n};\n\n\n/**\n * LinkifyIt#matchAtStart(text) -> Match|null\n *\n * Returns fully-formed (not fuzzy) link if it starts at the beginning\n * of the string, and null otherwise.\n **/\nLinkifyIt.prototype.matchAtStart = function matchAtStart(text) {\n  // Reset scan cache\n  this.__text_cache__ = text;\n  this.__index__      = -1;\n\n  if (!text.length) return null;\n\n  var m = this.re.schema_at_start.exec(text);\n  if (!m) return null;\n\n  var len = this.testSchemaAt(text, m[2], m[0].length);\n  if (!len) return null;\n\n  this.__schema__     = m[2];\n  this.__index__      = m.index + m[1].length;\n  this.__last_index__ = m.index + m[0].length + len;\n\n  return createMatch(this, 0);\n};\n\n\n/** chainable\n * LinkifyIt#tlds(list [, keepOld]) -> this\n * - list (Array): list of tlds\n * - keepOld (Boolean): merge with current list if `true` (`false` by default)\n *\n * Load (or merge) new tlds list. Those are user for fuzzy links (without prefix)\n * to avoid false positives. By default this algorythm used:\n *\n * - hostname with any 2-letter root zones are ok.\n * - biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф\n *   are ok.\n * - encoded (`xn--...`) root zones are ok.\n *\n * If list is replaced, then exact match for 2-chars root zones will be checked.\n **/\nLinkifyIt.prototype.tlds = function tlds(list, keepOld) {\n  list = Array.isArray(list) ? list : [ list ];\n\n  if (!keepOld) {\n    this.__tlds__ = list.slice();\n    this.__tlds_replaced__ = true;\n    compile(this);\n    return this;\n  }\n\n  this.__tlds__ = this.__tlds__.concat(list)\n                                  .sort()\n                                  .filter(function (el, idx, arr) {\n                                    return el !== arr[idx - 1];\n                                  })\n                                  .reverse();\n\n  compile(this);\n  return this;\n};\n\n/**\n * LinkifyIt#normalize(match)\n *\n * Default normalizer (if schema does not define it's own).\n **/\nLinkifyIt.prototype.normalize = function normalize(match) {\n\n  // Do minimal possible changes by default. Need to collect feedback prior\n  // to move forward https://github.com/markdown-it/linkify-it/issues/1\n\n  if (!match.schema) { match.url = 'http://' + match.url; }\n\n  if (match.schema === 'mailto:' && !/^mailto:/i.test(match.url)) {\n    match.url = 'mailto:' + match.url;\n  }\n};\n\n\n/**\n * LinkifyIt#onCompile()\n *\n * Override to modify basic RegExp-s.\n **/\nLinkifyIt.prototype.onCompile = function onCompile() {\n};\n\n\nmodule.exports = LinkifyIt;\n","// Main parser class\n\n'use strict';\n\n\nvar utils        = require('./common/utils');\nvar helpers      = require('./helpers');\nvar Renderer     = require('./renderer');\nvar ParserCore   = require('./parser_core');\nvar ParserBlock  = require('./parser_block');\nvar ParserInline = require('./parser_inline');\nvar LinkifyIt    = require('linkify-it');\nvar mdurl        = require('mdurl');\nvar punycode     = require('punycode');\n\n\nvar config = {\n  default: require('./presets/default'),\n  zero: require('./presets/zero'),\n  commonmark: require('./presets/commonmark')\n};\n\n////////////////////////////////////////////////////////////////////////////////\n//\n// This validator can prohibit more than really needed to prevent XSS. It's a\n// tradeoff to keep code simple and to be secure by default.\n//\n// If you need different setup - override validator method as you wish. Or\n// replace it with dummy function and use external sanitizer.\n//\n\nvar BAD_PROTO_RE = /^(vbscript|javascript|file|data):/;\nvar GOOD_DATA_RE = /^data:image\\/(gif|png|jpeg|webp);/;\n\nfunction validateLink(url) {\n  // url should be normalized at this point, and existing entities are decoded\n  var str = url.trim().toLowerCase();\n\n  return BAD_PROTO_RE.test(str) ? (GOOD_DATA_RE.test(str) ? true : false) : true;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n\nvar RECODE_HOSTNAME_FOR = [ 'http:', 'https:', 'mailto:' ];\n\nfunction normalizeLink(url) {\n  var parsed = mdurl.parse(url, true);\n\n  if (parsed.hostname) {\n    // Encode hostnames in urls like:\n    // `http://host/`, `https://host/`, `mailto:user@host`, `//host/`\n    //\n    // We don't encode unknown schemas, because it's likely that we encode\n    // something we shouldn't (e.g. `skype:name` treated as `skype:host`)\n    //\n    if (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0) {\n      try {\n        parsed.hostname = punycode.toASCII(parsed.hostname);\n      } catch (er) { /**/ }\n    }\n  }\n\n  return mdurl.encode(mdurl.format(parsed));\n}\n\nfunction normalizeLinkText(url) {\n  var parsed = mdurl.parse(url, true);\n\n  if (parsed.hostname) {\n    // Encode hostnames in urls like:\n    // `http://host/`, `https://host/`, `mailto:user@host`, `//host/`\n    //\n    // We don't encode unknown schemas, because it's likely that we encode\n    // something we shouldn't (e.g. `skype:name` treated as `skype:host`)\n    //\n    if (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0) {\n      try {\n        parsed.hostname = punycode.toUnicode(parsed.hostname);\n      } catch (er) { /**/ }\n    }\n  }\n\n  // add '%' to exclude list because of https://github.com/markdown-it/markdown-it/issues/720\n  return mdurl.decode(mdurl.format(parsed), mdurl.decode.defaultChars + '%');\n}\n\n\n/**\n * class MarkdownIt\n *\n * Main parser/renderer class.\n *\n * ##### Usage\n *\n * ```javascript\n * // node.js, \"classic\" way:\n * var MarkdownIt = require('markdown-it'),\n *     md = new MarkdownIt();\n * var result = md.render('# markdown-it rulezz!');\n *\n * // node.js, the same, but with sugar:\n * var md = require('markdown-it')();\n * var result = md.render('# markdown-it rulezz!');\n *\n * // browser without AMD, added to \"window\" on script load\n * // Note, there are no dash.\n * var md = window.markdownit();\n * var result = md.render('# markdown-it rulezz!');\n * ```\n *\n * Single line rendering, without paragraph wrap:\n *\n * ```javascript\n * var md = require('markdown-it')();\n * var result = md.renderInline('__markdown-it__ rulezz!');\n * ```\n **/\n\n/**\n * new MarkdownIt([presetName, options])\n * - presetName (String): optional, `commonmark` / `zero`\n * - options (Object)\n *\n * Creates parser instanse with given config. Can be called without `new`.\n *\n * ##### presetName\n *\n * MarkdownIt provides named presets as a convenience to quickly\n * enable/disable active syntax rules and options for common use cases.\n *\n * - [\"commonmark\"](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/commonmark.js) -\n *   configures parser to strict [CommonMark](http://commonmark.org/) mode.\n * - [default](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/default.js) -\n *   similar to GFM, used when no preset name given. Enables all available rules,\n *   but still without html, typographer & autolinker.\n * - [\"zero\"](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/zero.js) -\n *   all rules disabled. Useful to quickly setup your config via `.enable()`.\n *   For example, when you need only `bold` and `italic` markup and nothing else.\n *\n * ##### options:\n *\n * - __html__ - `false`. Set `true` to enable HTML tags in source. Be careful!\n *   That's not safe! You may need external sanitizer to protect output from XSS.\n *   It's better to extend features via plugins, instead of enabling HTML.\n * - __xhtmlOut__ - `false`. Set `true` to add '/' when closing single tags\n *   (`<br />`). This is needed only for full CommonMark compatibility. In real\n *   world you will need HTML output.\n * - __breaks__ - `false`. Set `true` to convert `\\n` in paragraphs into `<br>`.\n * - __langPrefix__ - `language-`. CSS language class prefix for fenced blocks.\n *   Can be useful for external highlighters.\n * - __linkify__ - `false`. Set `true` to autoconvert URL-like text to links.\n * - __typographer__  - `false`. Set `true` to enable [some language-neutral\n *   replacement](https://github.com/markdown-it/markdown-it/blob/master/lib/rules_core/replacements.js) +\n *   quotes beautification (smartquotes).\n * - __quotes__ - `“”‘’`, String or Array. Double + single quotes replacement\n *   pairs, when typographer enabled and smartquotes on. For example, you can\n *   use `'«»„“'` for Russian, `'„“‚‘'` for German, and\n *   `['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›']` for French (including nbsp).\n * - __highlight__ - `null`. Highlighter function for fenced code blocks.\n *   Highlighter `function (str, lang)` should return escaped HTML. It can also\n *   return empty string if the source was not changed and should be escaped\n *   externaly. If result starts with <pre... internal wrapper is skipped.\n *\n * ##### Example\n *\n * ```javascript\n * // commonmark mode\n * var md = require('markdown-it')('commonmark');\n *\n * // default mode\n * var md = require('markdown-it')();\n *\n * // enable everything\n * var md = require('markdown-it')({\n *   html: true,\n *   linkify: true,\n *   typographer: true\n * });\n * ```\n *\n * ##### Syntax highlighting\n *\n * ```js\n * var hljs = require('highlight.js') // https://highlightjs.org/\n *\n * var md = require('markdown-it')({\n *   highlight: function (str, lang) {\n *     if (lang && hljs.getLanguage(lang)) {\n *       try {\n *         return hljs.highlight(str, { language: lang, ignoreIllegals: true }).value;\n *       } catch (__) {}\n *     }\n *\n *     return ''; // use external default escaping\n *   }\n * });\n * ```\n *\n * Or with full wrapper override (if you need assign class to `<pre>`):\n *\n * ```javascript\n * var hljs = require('highlight.js') // https://highlightjs.org/\n *\n * // Actual default values\n * var md = require('markdown-it')({\n *   highlight: function (str, lang) {\n *     if (lang && hljs.getLanguage(lang)) {\n *       try {\n *         return '<pre class=\"hljs\"><code>' +\n *                hljs.highlight(str, { language: lang, ignoreIllegals: true }).value +\n *                '</code></pre>';\n *       } catch (__) {}\n *     }\n *\n *     return '<pre class=\"hljs\"><code>' + md.utils.escapeHtml(str) + '</code></pre>';\n *   }\n * });\n * ```\n *\n **/\nfunction MarkdownIt(presetName, options) {\n  if (!(this instanceof MarkdownIt)) {\n    return new MarkdownIt(presetName, options);\n  }\n\n  if (!options) {\n    if (!utils.isString(presetName)) {\n      options = presetName || {};\n      presetName = 'default';\n    }\n  }\n\n  /**\n   * MarkdownIt#inline -> ParserInline\n   *\n   * Instance of [[ParserInline]]. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.inline = new ParserInline();\n\n  /**\n   * MarkdownIt#block -> ParserBlock\n   *\n   * Instance of [[ParserBlock]]. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.block = new ParserBlock();\n\n  /**\n   * MarkdownIt#core -> Core\n   *\n   * Instance of [[Core]] chain executor. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.core = new ParserCore();\n\n  /**\n   * MarkdownIt#renderer -> Renderer\n   *\n   * Instance of [[Renderer]]. Use it to modify output look. Or to add rendering\n   * rules for new token types, generated by plugins.\n   *\n   * ##### Example\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   *\n   * function myToken(tokens, idx, options, env, self) {\n   *   //...\n   *   return result;\n   * };\n   *\n   * md.renderer.rules['my_token'] = myToken\n   * ```\n   *\n   * See [[Renderer]] docs and [source code](https://github.com/markdown-it/markdown-it/blob/master/lib/renderer.js).\n   **/\n  this.renderer = new Renderer();\n\n  /**\n   * MarkdownIt#linkify -> LinkifyIt\n   *\n   * [linkify-it](https://github.com/markdown-it/linkify-it) instance.\n   * Used by [linkify](https://github.com/markdown-it/markdown-it/blob/master/lib/rules_core/linkify.js)\n   * rule.\n   **/\n  this.linkify = new LinkifyIt();\n\n  /**\n   * MarkdownIt#validateLink(url) -> Boolean\n   *\n   * Link validation function. CommonMark allows too much in links. By default\n   * we disable `javascript:`, `vbscript:`, `file:` schemas, and almost all `data:...` schemas\n   * except some embedded image types.\n   *\n   * You can change this behaviour:\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   * // enable everything\n   * md.validateLink = function () { return true; }\n   * ```\n   **/\n  this.validateLink = validateLink;\n\n  /**\n   * MarkdownIt#normalizeLink(url) -> String\n   *\n   * Function used to encode link url to a machine-readable format,\n   * which includes url-encoding, punycode, etc.\n   **/\n  this.normalizeLink = normalizeLink;\n\n  /**\n   * MarkdownIt#normalizeLinkText(url) -> String\n   *\n   * Function used to decode link url to a human-readable format`\n   **/\n  this.normalizeLinkText = normalizeLinkText;\n\n\n  // Expose utils & helpers for easy acces from plugins\n\n  /**\n   * MarkdownIt#utils -> utils\n   *\n   * Assorted utility functions, useful to write plugins. See details\n   * [here](https://github.com/markdown-it/markdown-it/blob/master/lib/common/utils.js).\n   **/\n  this.utils = utils;\n\n  /**\n   * MarkdownIt#helpers -> helpers\n   *\n   * Link components parser functions, useful to write plugins. See details\n   * [here](https://github.com/markdown-it/markdown-it/blob/master/lib/helpers).\n   **/\n  this.helpers = utils.assign({}, helpers);\n\n\n  this.options = {};\n  this.configure(presetName);\n\n  if (options) { this.set(options); }\n}\n\n\n/** chainable\n * MarkdownIt.set(options)\n *\n * Set parser options (in the same format as in constructor). Probably, you\n * will never need it, but you can change options after constructor call.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')()\n *             .set({ html: true, breaks: true })\n *             .set({ typographer, true });\n * ```\n *\n * __Note:__ To achieve the best possible performance, don't modify a\n * `markdown-it` instance options on the fly. If you need multiple configurations\n * it's best to create multiple instances and initialize each with separate\n * config.\n **/\nMarkdownIt.prototype.set = function (options) {\n  utils.assign(this.options, options);\n  return this;\n};\n\n\n/** chainable, internal\n * MarkdownIt.configure(presets)\n *\n * Batch load of all options and compenent settings. This is internal method,\n * and you probably will not need it. But if you will - see available presets\n * and data structure [here](https://github.com/markdown-it/markdown-it/tree/master/lib/presets)\n *\n * We strongly recommend to use presets instead of direct config loads. That\n * will give better compatibility with next versions.\n **/\nMarkdownIt.prototype.configure = function (presets) {\n  var self = this, presetName;\n\n  if (utils.isString(presets)) {\n    presetName = presets;\n    presets = config[presetName];\n    if (!presets) { throw new Error('Wrong `markdown-it` preset \"' + presetName + '\", check name'); }\n  }\n\n  if (!presets) { throw new Error('Wrong `markdown-it` preset, can\\'t be empty'); }\n\n  if (presets.options) { self.set(presets.options); }\n\n  if (presets.components) {\n    Object.keys(presets.components).forEach(function (name) {\n      if (presets.components[name].rules) {\n        self[name].ruler.enableOnly(presets.components[name].rules);\n      }\n      if (presets.components[name].rules2) {\n        self[name].ruler2.enableOnly(presets.components[name].rules2);\n      }\n    });\n  }\n  return this;\n};\n\n\n/** chainable\n * MarkdownIt.enable(list, ignoreInvalid)\n * - list (String|Array): rule name or list of rule names to enable\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable list or rules. It will automatically find appropriate components,\n * containing rules with given names. If rule not found, and `ignoreInvalid`\n * not set - throws exception.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')()\n *             .enable(['sub', 'sup'])\n *             .disable('smartquotes');\n * ```\n **/\nMarkdownIt.prototype.enable = function (list, ignoreInvalid) {\n  var result = [];\n\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  [ 'core', 'block', 'inline' ].forEach(function (chain) {\n    result = result.concat(this[chain].ruler.enable(list, true));\n  }, this);\n\n  result = result.concat(this.inline.ruler2.enable(list, true));\n\n  var missed = list.filter(function (name) { return result.indexOf(name) < 0; });\n\n  if (missed.length && !ignoreInvalid) {\n    throw new Error('MarkdownIt. Failed to enable unknown rule(s): ' + missed);\n  }\n\n  return this;\n};\n\n\n/** chainable\n * MarkdownIt.disable(list, ignoreInvalid)\n * - list (String|Array): rule name or list of rule names to disable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * The same as [[MarkdownIt.enable]], but turn specified rules off.\n **/\nMarkdownIt.prototype.disable = function (list, ignoreInvalid) {\n  var result = [];\n\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  [ 'core', 'block', 'inline' ].forEach(function (chain) {\n    result = result.concat(this[chain].ruler.disable(list, true));\n  }, this);\n\n  result = result.concat(this.inline.ruler2.disable(list, true));\n\n  var missed = list.filter(function (name) { return result.indexOf(name) < 0; });\n\n  if (missed.length && !ignoreInvalid) {\n    throw new Error('MarkdownIt. Failed to disable unknown rule(s): ' + missed);\n  }\n  return this;\n};\n\n\n/** chainable\n * MarkdownIt.use(plugin, params)\n *\n * Load specified plugin with given params into current parser instance.\n * It's just a sugar to call `plugin(md, params)` with curring.\n *\n * ##### Example\n *\n * ```javascript\n * var iterator = require('markdown-it-for-inline');\n * var md = require('markdown-it')()\n *             .use(iterator, 'foo_replace', 'text', function (tokens, idx) {\n *               tokens[idx].content = tokens[idx].content.replace(/foo/g, 'bar');\n *             });\n * ```\n **/\nMarkdownIt.prototype.use = function (plugin /*, params, ... */) {\n  var args = [ this ].concat(Array.prototype.slice.call(arguments, 1));\n  plugin.apply(plugin, args);\n  return this;\n};\n\n\n/** internal\n * MarkdownIt.parse(src, env) -> Array\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Parse input string and return list of block tokens (special token type\n * \"inline\" will contain list of inline tokens). You should not call this\n * method directly, until you write custom renderer (for example, to produce\n * AST).\n *\n * `env` is used to pass data between \"distributed\" rules and return additional\n * metadata like reference info, needed for the renderer. It also can be used to\n * inject data in specific cases. Usually, you will be ok to pass `{}`,\n * and then pass updated object to renderer.\n **/\nMarkdownIt.prototype.parse = function (src, env) {\n  if (typeof src !== 'string') {\n    throw new Error('Input data should be a String');\n  }\n\n  var state = new this.core.State(src, this, env);\n\n  this.core.process(state);\n\n  return state.tokens;\n};\n\n\n/**\n * MarkdownIt.render(src [, env]) -> String\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Render markdown string into html. It does all magic for you :).\n *\n * `env` can be used to inject additional metadata (`{}` by default).\n * But you will not need it with high probability. See also comment\n * in [[MarkdownIt.parse]].\n **/\nMarkdownIt.prototype.render = function (src, env) {\n  env = env || {};\n\n  return this.renderer.render(this.parse(src, env), this.options, env);\n};\n\n\n/** internal\n * MarkdownIt.parseInline(src, env) -> Array\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * The same as [[MarkdownIt.parse]] but skip all block rules. It returns the\n * block tokens list with the single `inline` element, containing parsed inline\n * tokens in `children` property. Also updates `env` object.\n **/\nMarkdownIt.prototype.parseInline = function (src, env) {\n  var state = new this.core.State(src, this, env);\n\n  state.inlineMode = true;\n  this.core.process(state);\n\n  return state.tokens;\n};\n\n\n/**\n * MarkdownIt.renderInline(src [, env]) -> String\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Similar to [[MarkdownIt.render]] but for single paragraph content. Result\n * will NOT be wrapped into `<p>` tags.\n **/\nMarkdownIt.prototype.renderInline = function (src, env) {\n  env = env || {};\n\n  return this.renderer.render(this.parseInline(src, env), this.options, env);\n};\n\n\nmodule.exports = MarkdownIt;\n","// markdown-it default options\n\n'use strict';\n\n\nmodule.exports = {\n  options: {\n    html:         false,        // Enable HTML tags in source\n    xhtmlOut:     false,        // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkify:      false,        // autoconvert URL-like texts to links\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   100            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {},\n    block: {},\n    inline: {}\n  }\n};\n","// \"Zero\" preset, with nothing enabled. Useful for manual configuring of simple\n// modes. For example, to parse bold/italic only.\n\n'use strict';\n\n\nmodule.exports = {\n  options: {\n    html:         false,        // Enable HTML tags in source\n    xhtmlOut:     false,        // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkify:      false,        // autoconvert URL-like texts to links\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   20            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {\n      rules: [\n        'normalize',\n        'block',\n        'inline',\n        'text_join'\n      ]\n    },\n\n    block: {\n      rules: [\n        'paragraph'\n      ]\n    },\n\n    inline: {\n      rules: [\n        'text'\n      ],\n      rules2: [\n        'balance_pairs',\n        'fragments_join'\n      ]\n    }\n  }\n};\n","// Commonmark default options\n\n'use strict';\n\n\nmodule.exports = {\n  options: {\n    html:         true,         // Enable HTML tags in source\n    xhtmlOut:     true,         // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkify:      false,        // autoconvert URL-like texts to links\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   20            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {\n      rules: [\n        'normalize',\n        'block',\n        'inline',\n        'text_join'\n      ]\n    },\n\n    block: {\n      rules: [\n        'blockquote',\n        'code',\n        'fence',\n        'heading',\n        'hr',\n        'html_block',\n        'lheading',\n        'list',\n        'reference',\n        'paragraph'\n      ]\n    },\n\n    inline: {\n      rules: [\n        'autolink',\n        'backticks',\n        'emphasis',\n        'entity',\n        'escape',\n        'html_inline',\n        'image',\n        'link',\n        'newline',\n        'text'\n      ],\n      rules2: [\n        'balance_pairs',\n        'emphasis',\n        'fragments_join'\n      ]\n    }\n  }\n};\n","'use strict';\n\n\nmodule.exports = require('./lib/');\n","<script>\n    import MarkdownIt from 'markdown-it';\n    export let source = '';\n    const getHtml = (source) => {\n        const markdownIt = new MarkdownIt();\n        return markdownIt.render(source);\n    };\n    $: html = getHtml(source);\n</script>\n\n<div>\n    {@html html}\n</div>","<script>\n    import Markdown from \"./Markdown.svelte\";\n    // import ScratchBlock from \"./ScratchBlock.svelte\";\n    export let source = '';\n</script>\n\n<Markdown {source} />","<script>\n    import ProjectConfig from \"../components/ProjectConfig.svelte\";\n    export let config;\n</script>\n\n<ProjectConfig {config} />","<script>\n    import About from \"./pages/About.svelte\";\n    import Index from \"./pages/Index.svelte\";\n    import Project from \"./pages/Project.svelte\";\n    import { page, initPage, updatePage } from \"./router\";\n    initPage();\n</script>\n\n<div>\n    <ul>\n        <li on:click={() => updatePage('')} on:keydown={() => updatePage('')}>Projects</li>\n        <li on:click={() => updatePage('about')} on:keydown={() => updatePage('about')}>About</li>\n    </ul>\n</div>\n{#if $page === 'about'}\n    <About />\n{:else if $page === 'project'}\n    <Project />\n{:else}\n    <Index />\n{/if}\n\n<style>\n    div {\n        color: white;\n        background-color: black;\n    }\n</style>","import App from './App.svelte';\n\nvar app = new App({\n\ttarget: document.body\n});\n\nexport default app;"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","component_subscribe","component","store","callback","$$","on_destroy","push","callbacks","unsub","subscribe","unsubscribe","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","name","document","createElement","text","data","createTextNode","space","listen","event","handler","options","addEventListener","removeEventListener","current_component","set_current_component","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","seen_callbacks","Set","flushidx","flush","saved_component","length","update","e","pop","i","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","outros","transition_in","block","local","delete","transition_out","o","c","d","create_component","mount_component","customElement","m","new_on_destroy","on_mount","map","filter","destroy_component","detaching","make_dirty","then","fill","init","instance","create_fragment","not_equal","props","append_styles","parent_component","bound","on_disconnect","context","Map","skip_bound","root","ready","ret","rest","value","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","$destroy","this","$on","type","index","indexOf","splice","$set","$$props","obj","$$set","keys","h1","subscriber_queue","page","start","stop","subscribers","set","new_value","run_queue","subscriber","invalidate","size","writable","initPage","pageParam","URLSearchParams","window","location","search","get","updatePage","newPage","sanitizedPage","toLowerCase","url","URL","key","searchParams","history","pushState","ul","li","span","entities","regex","encodeCache","encode","string","exclude","keepEscaped","code","nextCode","cache","result","defaultChars","ch","String","fromCharCode","test","toString","toUpperCase","slice","charCodeAt","getEncodeCache","encodeURIComponent","componentChars","encode_1","decodeCache","decode","getDecodeCache","replace","seq","b1","b2","b3","b4","chr","parseInt","decode_1","Url","protocol","slashes","auth","port","hostname","hash","pathname","protocolPattern","portPattern","simplePathPattern","unwise","concat","autoEscape","nonHostChars","hostEndingChars","hostnamePartPattern","hostnamePartStart","hostlessProtocol","javascript","slashedProtocol","http","https","ftp","gopher","file","prototype","parse","slashesDenoteHost","lowerProto","hec","trim","split","simplePath","exec","proto","substr","match","atSign","hostEnd","lastIndexOf","host","parseHost","ipv6Hostname","hostparts","part","newpart","j","k","validParts","notHost","bit","unshift","join","qm","require$$0","require$$1","u","require$$3","require$$4","_hasOwnProperty","hasOwnProperty","object","call","isValidEntityCode","fromCodePoint","surrogate1","surrogate2","UNESCAPE_MD_RE","UNESCAPE_ALL_RE","RegExp","source","DIGITAL_ENTITY_TEST_RE","HTML_ESCAPE_TEST_RE","HTML_ESCAPE_REPLACE_RE","HTML_REPLACEMENTS","replaceUnsafeChar","REGEXP_ESCAPE_RE","exports","lib","mdurl","ucmicro","assign","arguments","TypeError","isString","_class","unescapeMd","str","unescapeAll","escaped","entity","replaceEntityPattern","escapeHtml","arrayReplaceAt","src","pos","newElements","isSpace","isWhiteSpace","isMdAsciiPunct","isPunctChar","UNICODE_PUNCT_RE","escapeRE","normalizeReference","parseLinkLabel","state","disableNested","level","found","marker","prevPos","labelEnd","max","posMax","oldPos","md","inline","skipToken","parseLinkDestination","ok","lines","parseLinkTitle","default_rules","Renderer","rules","code_inline","tokens","idx","env","slf","token","renderAttrs","content","code_block","fence","highlighted","arr","tmpAttrs","tmpToken","info","langName","langAttrs","highlight","attrIndex","attrs","langPrefix","image","renderInlineAsText","renderToken","hardbreak","xhtmlOut","softbreak","breaks","html_block","html_inline","nextToken","needLf","hidden","nesting","tag","renderInline","len","render","renderer","Ruler","__rules__","__cache__","__find__","__compile__","self","chains","rule","enabled","alt","altName","chain","at","opt","Error","before","beforeName","ruleName","after","afterName","enable","list","ignoreInvalid","isArray","enableOnly","disable","getRules","chainName","ruler","NEWLINES_RE","NULL_RE","isLinkClose","RARE_RE","SCOPED_ABBR_TEST_RE","SCOPED_ABBR_RE","SCOPED_ABBR","r","tm","replaceFn","replace_scoped","inlineTokens","inside_autolink","replace_rare","QUOTE_TEST_RE","QUOTE_RE","APOSTROPHE","replaceAt","process_inlines","t","thisLevel","item","lastChar","nextChar","isLastPunctChar","isNextPunctChar","isLastWhiteSpace","isNextWhiteSpace","canOpen","canClose","isSingle","stack","openQuote","closeQuote","OUTER","lastIndex","single","quotes","Token","markup","meta","attrPush","attrData","attrSet","attrGet","attrJoin","StateCore","inlineMode","state_core","_rules","tok","currentToken","ln","lastPos","htmlLinkLevel","fullUrl","urlText","links","blockTokens","linkify","pretest","normalizeLink","validateLink","schema","normalizeLinkText","blkIdx","typographer","curr","last","Core","process","State","require$$7","parser_core","getLine","line","bMarks","tShift","eMarks","escapedSplit","isEscaped","current","substring","skipBulletListMarker","startLine","skipOrderedListMarker","open_tag","close_tag","HTML_OPEN_CLOSE_TAG_RE","HTML_SEQUENCES","StateBlock","s","indent","offset","indent_found","sCount","bsCount","blkIndent","lineMax","tight","ddIndent","listIndent","parentType","isEmpty","skipEmptyLines","skipSpaces","skipSpacesBack","min","skipChars","skipCharsBack","getLines","begin","end","keepLastLF","lineIndent","first","queue","lineStart","state_block","endLine","silent","lineText","nextLine","columns","columnCount","aligns","tableLines","tbodyLines","oldParentType","terminate","terminatorRules","firstCh","secondCh","shift","params","mem","haveEndMarker","adjustTab","initial","lastLineEmpty","oldBMarks","oldBSCount","oldIndent","oldSCount","oldTShift","spaceAfterMarker","isOutdented","oldLineMax","tokenize","cnt","contentStart","indentAfterMarker","isOrdered","itemLines","listLines","listTokIdx","markerCharCode","markerValue","oldListIndent","oldTight","posAfterMarker","prevEmptyEnd","isTerminatingParagraph","Number","Math","markTightParagraphs","_endLine","destEndPos","destEndLineNo","href","label","res","title","helpers","references","html","tmp","ParserBlock","hasEmptyLines","maxNesting","outTokens","require$$11","parser_block","isTerminatorChar","SCHEME_RE","ESCAPED","postProcess","delimiters","startDelim","endDelim","loneMarkers","scanned","scanDelims","open","can_open","close","can_close","tokens_meta","isStrong","EMAIL_RE","AUTOLINK_RE","HTML_TAG_RE","DIGITAL_RE","NAMED_RE","processDelimiters","closerIdx","openerIdx","closer","opener","minOpenerIdx","newMinOpenerIdx","isOddMatch","lastJump","openersBottom","headerIdx","lastTokenIdx","jumps","StateInline","pending","pendingLevel","_prev_delimiters","backticks","backticksScanned","linkLevel","pushPending","token_meta","canSplitWord","count","left_flanking","right_flanking","state_inline","link","matchAtStart","pmax","ws","ch1","ch2","origStr","escapedStr","matchStart","matchEnd","openerLength","closerLength","require$$5","require$$6","labelStart","ref","parseReference","lc","isLetter","_rules2","ParserInline","ruler2","require$$14","parser_inline","re","opts","src_Any","src_Cc","src_Z","require$$2","src_P","src_ZPCc","src_ZCc","text_separators","src_pseudo_letter","src_ip4","src_auth","src_port","src_host_terminator","src_path","src_email_name","src_xn","src_domain_root","src_domain","src_host","tpl_host_fuzzy","tpl_host_no_ip_fuzzy","src_host_strict","tpl_host_fuzzy_strict","src_host_port_strict","tpl_host_port_fuzzy_strict","tpl_host_port_no_ip_fuzzy_strict","tpl_host_fuzzy_test","tpl_email_fuzzy","tpl_link_fuzzy","tpl_link_no_ip_fuzzy","isFunction","defaultOptions","fuzzyLink","fuzzyEmail","fuzzyIP","defaultSchemas","validate","tail","no_http","mailto","tlds_2ch_src_re","tlds_default","compile","__opts__","tlds","__tlds__","untpl","tpl","src_tlds","onCompile","__tlds_replaced__","email_fuzzy","link_fuzzy","link_no_ip_fuzzy","host_fuzzy_test","aliases","schemaError","val","__compiled__","__schemas__","compiled","isRegExp","createValidator","normalize","alias","slist","schema_test","schema_search","schema_at_start","__index__","__text_cache__","resetScanCache","Match","__last_index__","__schema__","raw","createMatch","LinkifyIt","schemas","reduce","acc","definition","ml","me","next","tld_pos","testSchemaAt","keepOld","sort","el","reverse","linkifyIt","config","default","components","core","zero","rules2","commonmark","BAD_PROTO_RE","GOOD_DATA_RE","RECODE_HOSTNAME_FOR","parsed","punycode","toASCII","er","format","toUnicode","MarkdownIt","presetName","utils","ParserCore","configure","presets","missed","use","plugin","args","apply","parseInline","markdownIt","div","$$invalidate","getHtml","attribute","removeAttribute","getAttribute","setAttribute","li0","li1","body"],"mappings":"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"}